(include-book "centaur/sv/portcullis" :dir :system)

(include-book "projects/rp-rewriter/portcullis" :dir :system)

(defpkg "SVL"
  (union$ *acl2-exports*
          '(b*
            define
            repeat
            bash
            bash-fn
            bool-fix
            repeat
            rev

            take-of-len-free
            list-fix
            suffixp
            explode
            enable*
            e/d*
            take-of-len-free
            take-of-take-split
            take-of-too-many
            take-redefinition
            tshell-start
            true-listp-append
            pos-listp
            prefixp
            prefixp-of-cons-left
            prefixp-when-equal-lengths
            proof-by-arith
            append-of-cons
            acl2::logapp
            acl2::loghead
            acl2::logtail
	    acl2::defines
	    acl2::and*
	    acl2::or*
	    acl2::if*
	    acl2::raise
	    acl2::maybe-natp
	    acl2::maybe-nat-listp

	    sv::bitor
	    sv::bitxor
	    sv::bitand
	    sv::bitnot
            sv::3vec-bitand
            sv::2vec
            sv::4vec
            sv::4vec-shift-core
	    sv::4vec-fix
	    sv::4vec-p
	    sv::4vec-part-select
	    sv::4vec-parity
	    sv::4vec-part-install
	    sv::concat
	    sv::partsel
	    sv::bitnot
	    sv::bitand
	    sv::rsh
	    sv::svex-p
	    sv::svex-fix
	    sv::svexlist-p
	    sv::svexlist-eval
	    sv::svexlist-eval$
	    sv::svex-alist-eval	
	    sv::svex-alist-eval$
	    sv::4veclist-nth-safe
	    sv::svex-eval-when-quote
	    sv::svex-eval-when-fncall
	    sv::svex-eval$-when-quote
	    sv::svex-eval$-when-fncall

	    sv::svex-call->fn
	    sv::svex-kind
	    sv::fnsym-p
	    sv::fnsym-fix
	    sv::svex-call->args
	    sv::svex-env-p
	    sv::svex-eval
	    sv::svex-apply
	    sv::svex-eval$
	    sv::svex-apply$
	    sv::svex-var->name
	    sv::svex-apply-cases
	    SV::SVEX-APPLY$-CASES
	    std::defret
	    std::defret-mutual

	    sv::4VEC-CONCAT
	    sv::4VEC-BITAND
	    sv::4VEC-BITNOT
	    sv::4VEC-RSH
	    sv::4VEC-PLUS
	    sv::4VEC-==
	    sv::4vec-lsh
	    sv::4vec-?
	    sv::4vec-?*
	    sv::4vec-bitor
	    sv::4vec-zero-ext

            make-flag
            str::natstr
            str::iprefixp
            str::ISTRPREFIXP
            str::NATCHARS
            str::BASIC-NATCHARS
            acl2::SYMBOL-LIST-LISTP
            acl2::unprettify

	    rp::config
	    rp::rp
	    rp::falist
	    rp::show-rules-used
	    rp::failed
	    rp::defthmrp
	    rp::rp-attach-sc
	    rp::measure-lemmas
	    rp::rp-rw
	    rp::rp-rw-test
	    rp::cons-countw
	    rp::cons-count
            rp::rp-evl
	    rp::rp-evlt
	    rp::rp-evlt-lst
	    rp::rp-trans
	    rp::rp-trans-lst
            rp::rp-evl-meta-extract-global-facts
            rp::rp-evl-lst
            rp::rp-evl-of-fncall-args
            rp::rp-evl-meta-extract-formula
            rp::defthm-lambda
            rp::def-rw-opener-error
	    rp::def-rp-rule
	    rp::def-rp-rule$
	    rp::defthmrp
	    rp::def-rp-thm
	    rp::add-rp-rule
	    rp::rp-state
	    rp::valid-rp-statep
	    rp::valid-rp-state-syntaxp
	    rp::rp-evl-of-apply$-userfn-call
	    rp::rp-evl-of-badge-userfn-call
	    rp::rp-evl-of-apply$-call
	    rp::env
	    rp::context
	    rp::create-case-match-macro


            acl2::sv
            acl2::defsvtv
            acl2::vl
            acl2::svtv-run
            acl2::svl-run
            acl2::svl-flatten-design

	    acl2::defsection
            acl2::arglist
	    acl2::value
            acl2::in
            acl2::for
            acl2::collect
            acl2::sum
            acl2::when
            acl2::until
            acl2::by
            acl2::to
            acl2::as
            acl2::svl
            acl2::from)
          *common-lisp-symbols-from-main-lisp-package*
          :test 'eq))
