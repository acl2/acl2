(ZKPAPER::LOOKUP-EQUAL-LIST
 (1 1 (:TYPE-PRESCRIPTION R1CS::NATP-OF-LOOKUP-EQUAL-WHEN-R1CS-VALUATIONP-TYPE))
 )
(ZKPAPER::LEN-OF-LOOKUP-EQUAL-LIST
 (12 12 (:TYPE-PRESCRIPTION ZKPAPER::LOOKUP-EQUAL-LIST))
 (11 11 (:REWRITE CONSP-BY-LEN))
 (7 7 (:REWRITE CONSP-OF-CDR-BY-LEN))
 )
(ZKPAPER::BOOLEAN-ASSERT-GADGET)
(ZKPAPER::R1CS-CONSTRAINT-LISTP-OF-BOOLEAN-ASSERT-GADGET)
(ZKPAPER::BOOLEAN-ASSERT-GADGET-CORRECTNESS
 (16 8 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (11 8 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (10 10 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (10 10 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (10 5 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (9 9 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (8 8 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (8 8 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (7 4 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (6 6 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (6 6 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (6 6 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (6 3 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (5 4 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (4 4 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (4 2 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (3 3 (:TYPE-PRESCRIPTION R1CS::DOT-PRODUCT))
 (3 3 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (3 3 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (2 2 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (2 2 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (2 2 (:REWRITE CONSP-BY-LEN))
 (1 1 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 (1 1 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (1 1 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 )
(ZKPAPER::IF-THEN-ELSE-GADGET)
(ZKPAPER::R1CS-CONSTRAINT-LISTP-OF-IF-THEN-ELSE-GADGET)
(ZKPAPER::IF-THEN-ELSE-GADGET-CORRECTNESS
 (72 4 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (35 18 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (32 4 (:REWRITE MOD-WHEN-<))
 (31 31 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (31 31 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (30 18 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (28 15 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (24 24 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (24 4 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (20 20 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (18 9 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (16 4 (:REWRITE INTEGERP-OF-*))
 (12 4 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (12 2 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (11 11 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (10 5 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (9 9 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (9 9 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (9 5 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (8 8 (:TYPE-PRESCRIPTION NATP))
 (8 4 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (8 4 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (8 4 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (7 7 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (7 7 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (7 7 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (6 6 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (6 6 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (5 5 (:TYPE-PRESCRIPTION R1CS::DOT-PRODUCT))
 (5 5 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (5 5 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (5 5 (:REWRITE PFIELD::MUL-COMMUTATIVE))
 (5 5 (:REWRITE CONSP-BY-LEN))
 (4 4 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (4 4 (:REWRITE COMMUTATIVITY-OF-*))
 (4 4 (:REWRITE PFIELD::ADD-COMMUTATIVE-2-WHEN-CONSTANT))
 (3 3 (:REWRITE PFIELD::ADD-OF-ADD-COMBINE-CONSTANTS))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS-ALT))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS))
 (2 2 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (1 1 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 (1 1 (:REWRITE PFIELD::ADD-ASSOCIATIVE-WHEN-CONSTANT))
 )
(ZKPAPER::EQUALITY-TEST-GADGET)
(ZKPAPER::R1CS-CONSTRAINT-LISTP-OF-EQUALITY-TEST-GADGET
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 )
(ZKPAPER::EQUALITY-TEST-GADGET-SOUNDNESS
 (45 23 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (34 23 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (30 30 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (30 30 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (29 29 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (26 15 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (26 2 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (24 24 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (24 13 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (23 15 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (22 22 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (22 22 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (22 22 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (18 10 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (16 2 (:REWRITE MOD-WHEN-<))
 (12 12 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (10 10 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (10 10 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (8 8 (:TYPE-PRESCRIPTION R1CS::DOT-PRODUCT))
 (8 2 (:REWRITE INTEGERP-OF-*))
 (6 3 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (6 2 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (6 1 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (5 5 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (5 5 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (4 4 (:TYPE-PRESCRIPTION NATP))
 (4 4 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 (4 2 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (4 2 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (4 2 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (3 3 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (3 3 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (3 3 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (3 3 (:REWRITE CONSP-BY-LEN))
 (2 2 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (2 2 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (2 2 (:REWRITE COMMUTATIVITY-OF-*))
 (2 2 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (2 2 (:REWRITE PFIELD::ADD-OF-ADD-COMBINE-CONSTANTS))
 (2 2 (:REWRITE PFIELD::ADD-COMMUTATIVE-2))
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (1 1 (:TYPE-PRESCRIPTION ZKPAPER::BOOLEAN-ASSERT-GADGET))
 (1 1 (:REWRITE-QUOTED-CONSTANT IFIX-UNDER-INT-EQUIV))
 (1 1 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS))
 (1 1 (:REWRITE PFIELD::ADD-ASSOCIATIVE-WHEN-CONSTANT))
 )
(ZKPAPER::EQUALITY-TEST-GADGET-COMPLETENESS
 (72 4 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (53 27 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (40 27 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (37 37 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (35 35 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (35 35 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (34 19 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (32 4 (:REWRITE MOD-WHEN-<))
 (31 19 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (28 28 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (28 28 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (28 28 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (26 14 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (24 4 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (22 12 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (16 16 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (16 4 (:REWRITE INTEGERP-OF-*))
 (12 12 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (12 12 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (12 4 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (12 2 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (8 8 (:TYPE-PRESCRIPTION NATP))
 (8 8 (:TYPE-PRESCRIPTION R1CS::DOT-PRODUCT))
 (8 4 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (8 4 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (8 4 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (8 4 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (7 7 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (7 7 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (5 5 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 (5 5 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (5 5 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (4 4 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (4 4 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS-ALT))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS))
 (4 4 (:REWRITE CONSP-BY-LEN))
 (4 4 (:REWRITE COMMUTATIVITY-OF-*))
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (1 1 (:TYPE-PRESCRIPTION ZKPAPER::BOOLEAN-ASSERT-GADGET))
 (1 1 (:REWRITE PFIELD::SUB-WHEN-CONSTANTS))
 (1 1 (:REWRITE PFIELD::ADD-OF-ADD-COMBINE-CONSTANTS))
 (1 1 (:REWRITE PFIELD::ADD-COMMUTATIVE-2))
 (1 1 (:REWRITE PFIELD::ADD-ASSOCIATIVE-WHEN-CONSTANT))
 )
(ZKPAPER::EQUALITY-TEST-GADGET-CORRECTNESS
 (124 8 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (64 8 (:REWRITE MOD-WHEN-<))
 (61 31 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (46 31 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (46 25 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (45 45 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (41 25 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (40 40 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (40 40 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (36 36 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (36 36 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (36 36 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (34 18 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (32 8 (:REWRITE INTEGERP-OF-*))
 (28 28 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (28 15 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (28 8 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (24 8 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (24 4 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (16 16 (:TYPE-PRESCRIPTION NATP))
 (16 8 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (16 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (16 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (15 15 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (15 15 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (14 7 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (11 11 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (11 11 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (8 8 (:TYPE-PRESCRIPTION R1CS::DOT-PRODUCT))
 (8 8 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 (8 8 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (8 8 (:REWRITE COMMUTATIVITY-OF-*))
 (7 7 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (7 7 (:REWRITE CONSP-BY-LEN))
 (5 5 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (5 5 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (3 3 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS))
 (2 2 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (2 2 (:REWRITE PFIELD::ADD-OF-ADD-COMBINE-CONSTANTS))
 (2 2 (:REWRITE PFIELD::ADD-COMMUTATIVE-2))
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (1 1 (:TYPE-PRESCRIPTION ZKPAPER::BOOLEAN-ASSERT-GADGET))
 (1 1 (:REWRITE-QUOTED-CONSTANT IFIX-UNDER-INT-EQUIV))
 (1 1 (:REWRITE PFIELD::ADD-ASSOCIATIVE-WHEN-CONSTANT))
 )
(ZKPAPER::IF-EQUAL-THEN-ELSE-GADGET)
(ZKPAPER::R1CS-CONSTRAINT-LISTP-OF-IF-EQUAL-THEN-ELSE-GADGET
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 )
(ZKPAPER::IF-EQUAL-THEN-ELSE-GADGET-SOUNDNESS
 (25 25 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (8 4 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (6 3 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION ZKPAPER::IF-THEN-ELSE-GADGET))
 (4 4 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (4 4 (:REWRITE CONSP-BY-LEN))
 (2 2 (:TYPE-PRESCRIPTION BITP))
 (2 2 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 )
(ZKPAPER::IF-EQUAL-THEN-ELSE-GADGET-COMPLETENESS
 (32 32 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (24 12 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (18 18 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (18 12 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (12 12 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (12 12 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (12 12 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (12 12 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (12 12 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (12 12 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (12 12 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (12 6 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (12 6 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (12 6 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (10 5 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (6 6 (:TYPE-PRESCRIPTION PFIELD::NATP-OF-NEG))
 (6 6 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (6 6 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (6 3 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (5 5 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (5 5 (:REWRITE CONSP-BY-LEN))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS-ALT))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS))
 (3 3 (:REWRITE PFIELD::SUB-WHEN-CONSTANTS))
 (3 3 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (1 1 (:TYPE-PRESCRIPTION ZKPAPER::IF-THEN-ELSE-GADGET))
 )
(ZKPAPER::IF-EQUAL-THEN-ELSE-GADGET-CORRECTNESS
 (21 21 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (8 4 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (6 6 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (6 4 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (6 3 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (4 4 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (4 4 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (4 4 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (4 4 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (4 4 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (4 4 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (4 2 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (4 2 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (4 2 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (3 3 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (3 3 (:REWRITE CONSP-BY-LEN))
 (3 1 (:DEFINITION R1CS::R1CS-CONSTRAINTS-HOLDP))
 (2 2 (:TYPE-PRESCRIPTION PFIELD::NATP-OF-NEG))
 (2 2 (:TYPE-PRESCRIPTION ZKPAPER::IF-THEN-ELSE-GADGET))
 (2 2 (:TYPE-PRESCRIPTION BITP))
 (2 2 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (2 2 (:REWRITE PFIELD::NEG-WHEN-CONSTANT-ARG1))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS-ALT))
 (2 2 (:REWRITE PFIELD::EQUAL-OF-ADD-COMBINE-CONSTANTS))
 (2 2 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (2 1 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (1 1 (:TYPE-PRESCRIPTION R1CS::R1CS-CONSTRAINT-HOLDSP))
 (1 1 (:REWRITE PFIELD::SUB-WHEN-CONSTANTS))
 (1 1 (:REWRITE PFIELD::NEG-OF-MUL-WHEN-CONSTANT))
 )
(ZKPAPER::BOOLEAN-ASSERT-LIST-GADGET
 (6 3 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE CONSP-BY-LEN))
 (1 1 (:REWRITE CONSP-OF-CDR-BY-LEN))
 )
(ZKPAPER::R1CS-CONSTRAINT-LISTP-OF-BOOLEAN-ASSERT-LIST-GADGET
 (9 9 (:REWRITE CONSP-BY-LEN))
 (2 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (1 1 (:REWRITE CONSP-OF-CDR-BY-LEN))
 )
(ZKPAPER::BOOLEAN-ASSERT-LIST-GADGET-CORRECTNESS
 (184 95 (:TYPE-PRESCRIPTION R1CS::NATP-OF-LOOKUP-EQUAL-WHEN-R1CS-VALUATIONP-TYPE))
 (29 7 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (26 26 (:REWRITE CONSP-BY-LEN))
 (18 9 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (14 14 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (14 7 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (12 12 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (9 9 (:TYPE-PRESCRIPTION ZKPAPER::BOOLEAN-ASSERT-GADGET))
 (8 8 (:REWRITE CONSP-OF-CDR-BY-LEN))
 (7 7 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 )
(ZKPAPER::POW2SUM-VECTOR-AUX
 (6 3 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (3 3 (:TYPE-PRESCRIPTION EVENP))
 (3 3 (:REWRITE CONSP-BY-LEN))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1 1 (:REWRITE CONSP-OF-CDR-BY-LEN))
 )
(ZKPAPER::SPARSE-VECTORP-OF-POW2SUM-VECTOR-AUX
 (3 3 (:TYPE-PRESCRIPTION EVENP))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1 1 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (1 1 (:REWRITE CONSP-OF-CDR-BY-LEN))
 (1 1 (:REWRITE CONSP-BY-LEN))
 )
(ZKPAPER::POW2SUM-VECTOR)
(ZKPAPER::SPARSE-VECTORP-OF-POW2SUM-VECTOR)
(ZKPAPER::LEMMA
 (19568 350 (:LINEAR LENDIAN=>NAT-UPPER-BOUND))
 (19090 175 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (19076 175 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (17862 110 (:REWRITE MOD-WHEN-<))
 (11712 11712 (:TYPE-PRESCRIPTION EVENP))
 (7829 3925 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (7829 3925 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (7829 3925 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (7558 7558 (:TYPE-PRESCRIPTION LEN))
 (6462 110 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (5580 852 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (4743 175 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (4729 3925 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (4632 1608 (:REWRITE |(< 0 (len x))|))
 (3971 361 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (3925 3925 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2790 426 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (2790 426 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (2733 133 (:REWRITE INTEGERP-OF-*))
 (2376 8 (:REWRITE <-OF-0-AND-*))
 (2276 2276 (:REWRITE CONSP-BY-LEN))
 (2166 361 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (1656 852 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (1226 110 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (1202 23 (:REWRITE MOD-OF-+-SUBST-CONSTANT))
 (1200 110 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (1190 83 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (1188 350 (:REWRITE ZKPAPER::LEN-OF-LOOKUP-EQUAL-LIST))
 (1143 1143 (:REWRITE CONSP-OF-CDR-BY-LEN))
 (1127 110 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (1127 110 (:REWRITE MOD-WHEN-<-OF-0))
 (1005 30 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (852 852 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (852 852 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (838 322 (:REWRITE LEN-WHEN-ATOM))
 (828 426 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (828 426 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (730 730 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (722 722 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (722 722 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (722 722 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (722 722 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (681 359 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (594 305 (:TYPE-PRESCRIPTION R1CS::NATP-OF-LOOKUP-EQUAL-WHEN-R1CS-VALUATIONP-TYPE))
 (365 365 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (361 361 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (359 359 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (350 350 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (350 350 (:LINEAR <-OF-*-AND-*-LINEAR))
 (341 341 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (199 199 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (175 175 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (175 175 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (175 175 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (132 132 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 (112 39 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (112 36 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (110 110 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (110 110 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (106 106 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (106 106 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (99 13 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (86 13 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (67 19 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (65 13 (:REWRITE PFIELD::FEP-OF-CAR-WHEN-FE-LISTP))
 (63 19 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (62 62 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG2))
 (62 62 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG1))
 (56 13 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (54 17 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (40 26 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (38 38 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (38 38 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (38 38 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (38 38 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (34 17 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (32 32 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (32 32 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (30 30 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (26 26 (:TYPE-PRESCRIPTION PFIELD::FE-LISTP))
 (26 13 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (26 13 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (26 13 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (26 13 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (26 13 (:REWRITE PFIELD::FE-LISTP-WHEN-NOT-CONSP))
 (26 13 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (23 23 (:REWRITE MOD-OF-+-REDUCE-POSITIVE-CONSTANT))
 (23 23 (:REWRITE MOD-OF-+-OF-CONSTANT))
 (16 16 (:REWRITE-QUOTED-CONSTANT DAB-BASE-FIX-UNDER-DAB-BASE-EQUIV))
 (16 16 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (13 13 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (13 13 (:REWRITE NAT-LISTP-WHEN-DAB-DIGIT-LISTP))
 (13 13 (:REWRITE PFIELD::ADD-COMMUTATIVE-WHEN-CONSTANT))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (8 8 (:REWRITE <-OF-EXPT-AND-0))
 (6 6 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (5 1 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (5 1 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (4 4 (:REWRITE PFIELD::MUL-BOUND))
 (4 4 (:REWRITE EQUAL-OF-MOD-OF-+-WHEN-CONSTANTS))
 (2 2 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (2 2 (:REWRITE-QUOTED-CONSTANT FIX-UNDER-NUMBER-EQUIV))
 (2 2 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (2 2 (:REWRITE PFIELD::MUL-OF-EXPT-SUBST-CONSTANT-ARG2))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 )
(ZKPAPER::POW2SUM-VECTOR-TO-MOD-OF-LEBITS=>NAT
 (561 8 (:REWRITE PFIELD::MOD-WHEN-FEP))
 (525 7 (:REWRITE PFIELD::FEP-HOLDS))
 (519 8 (:REWRITE MOD-WHEN-<))
 (192 32 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (128 64 (:REWRITE |(< 0 (len x))|))
 (96 96 (:TYPE-PRESCRIPTION EVENP))
 (96 16 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (96 16 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (83 83 (:REWRITE CONSP-BY-LEN))
 (78 8 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (64 32 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (64 32 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (64 32 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (64 32 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (35 7 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (32 32 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (32 32 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (32 32 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (32 16 (:REWRITE LEN-WHEN-ATOM))
 (32 16 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (32 16 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (32 16 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (27 27 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (16 16 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (16 8 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (16 8 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (16 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (16 8 (:REWRITE MOD-WHEN-<-OF-0))
 (14 14 (:TYPE-PRESCRIPTION PFIELD::FEP))
 (8 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (8 8 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (7 7 (:REWRITE INTEGERP-OF-*))
 (7 7 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (7 7 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (7 7 (:REWRITE COMMUTATIVITY-OF-*))
 (5 1 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 1 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (2 1 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 )
(ZKPAPER::ADDITION-GADGET
 (12 6 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (11 11 (:REWRITE CONSP-BY-LEN))
 (8 4 (:REWRITE LEN-WHEN-ATOM))
 (5 1 (:REWRITE APPEND-WHEN-NOT-CONSP))
 )
(ZKPAPER::R1CS-CONSTRAINT-LISTP-OF-ADDITION-GADGET
 (10 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (9 9 (:REWRITE CONSP-BY-LEN))
 (8 4 (:REWRITE LEN-WHEN-ATOM))
 (6 3 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 )
(ZKPAPER::POSITIVE->=-EXPT2-OF-INTEGER-LENGTH-MINUS-1
 (455 13 (:REWRITE CANCEL-FLOOR-+))
 (370 185 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (323 17 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (279 21 (:REWRITE |(< d (+ c x))|))
 (198 78 (:REWRITE SIMPLIFY-SUMS-<))
 (198 78 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (198 78 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (198 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (195 15 (:REWRITE |(< (+ c x) d)|))
 (185 185 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (185 185 (:TYPE-PRESCRIPTION EVENP))
 (128 114 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (127 127 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (120 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (108 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (108 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (99 6 (:LINEAR EXPT->-1-ONE))
 (96 2 (:REWRITE FLOOR-FLOOR-INTEGER-ALT))
 (93 6 (:LINEAR EXPT-X->=-X))
 (93 6 (:LINEAR EXPT-X->-X))
 (85 17 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (85 17 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (78 78 (:REWRITE |(< (- x) (- y))|))
 (78 2 (:LINEAR FLOOR-BOUNDS-3))
 (78 2 (:LINEAR FLOOR-BOUNDS-2))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE-2))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE-1))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (73 73 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (71 71 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE-2))
 (68 13 (:REWRITE FLOOR-ZERO . 3))
 (60 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (60 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (60 6 (:LINEAR EXPT-<-1-TWO))
 (58 28 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (54 1 (:REWRITE ZIP-OPEN))
 (42 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (42 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (42 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (42 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (38 38 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (38 38 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (38 38 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (38 38 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (34 17 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (34 17 (:REWRITE DEFAULT-EXPT-2))
 (29 1 (:REWRITE FLOOR-ZERO . 1))
 (25 17 (:REWRITE |(expt 2^i n)|))
 (17 17 (:TYPE-PRESCRIPTION RATIONALP-MOD))
 (17 17 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (17 17 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (17 17 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (17 17 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (17 17 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (17 17 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (17 17 (:TYPE-PRESCRIPTION INTEGERP-MOD))
 (17 17 (:REWRITE REDUCE-INTEGERP-+))
 (17 17 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (17 17 (:REWRITE INTEGERP-OF-*))
 (17 17 (:REWRITE INTEGERP-MINUS-X))
 (17 17 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (17 17 (:REWRITE DEFAULT-EXPT-1))
 (17 17 (:REWRITE |(integerp (* c x))|))
 (17 17 (:REWRITE |(expt x (- n))|))
 (17 17 (:REWRITE |(expt 1/c n)|))
 (17 17 (:REWRITE |(expt (- x) n)|))
 (17 17 (:META META-INTEGERP-CORRECT))
 (16 16 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (16 16 (:REWRITE |(< 0 (- x))|))
 (13 13 (:REWRITE FLOOR-ZERO . 4))
 (13 13 (:REWRITE FLOOR-ZERO . 2))
 (13 13 (:REWRITE FLOOR-MINUS-WEAK))
 (13 13 (:REWRITE FLOOR-MINUS-2))
 (13 13 (:REWRITE FLOOR-COMPLETION))
 (13 13 (:REWRITE FLOOR-CANCEL-*-WEAK))
 (12 12 (:REWRITE POSP-WHEN-MEMBER-EQUAL-OF-ZP-LISTP))
 (12 12 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (12 12 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (12 12 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (12 12 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (12 12 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (12 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (6 6 (:LINEAR EXPT->-1-TWO))
 (6 6 (:LINEAR EXPT-<-1-ONE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-<-0))
 (1 1 (:REWRITE |(< (- x) 0)|))
 )
(ZKPAPER::EXPT2-MONO
 (159 159 (:TYPE-PRESCRIPTION EVENP))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (2 2 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (2 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (2 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (1 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (1 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (1 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (1 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 )
(ZKPAPER::PLUS-EXPT2-UPPER-BOUND
 (294 147 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (147 147 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (147 147 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (147 147 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (147 147 (:TYPE-PRESCRIPTION EVENP))
 (71 39 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (48 7 (:REWRITE |(< d (+ c x))|))
 (35 27 (:REWRITE SIMPLIFY-SUMS-<))
 (35 27 (:REWRITE SIMPLIFY-PRODUCTS-SCATTER-EXPONENTS-<))
 (35 27 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (32 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (31 6 (:REWRITE |(< (+ c x) d)|))
 (27 27 (:REWRITE |(< (- x) (- y))|))
 (19 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (19 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (16 2 (:LINEAR EXPT-X->=-X))
 (16 2 (:LINEAR EXPT-X->-X))
 (16 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (16 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (16 2 (:LINEAR EXPT->-1-ONE))
 (16 2 (:LINEAR EXPT-<-1-TWO))
 (9 9 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (7 7 (:REWRITE |(< 0 (- x))|))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-<-0))
 (5 5 (:REWRITE |(< (- x) 0)|))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (3 3 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (3 3 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (3 3 (:REWRITE DEFAULT-EXPT-2))
 (3 3 (:REWRITE DEFAULT-EXPT-1))
 (3 3 (:REWRITE |(expt x c)|))
 (3 3 (:REWRITE |(expt x (- n))|))
 (3 3 (:REWRITE |(expt 2^i n)|))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:LINEAR EXPT->-1-TWO))
 (2 2 (:LINEAR EXPT-<-1-ONE))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE NORMALIZE-FACTORS-SCATTER-EXPONENTS))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ZKPAPER::ZS-FITS
 (276 276 (:TYPE-PRESCRIPTION EVENP))
 (184 92 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (184 92 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (184 92 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (92 92 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (18 13 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (18 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (13 13 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (10 6 (:REWRITE LEN-WHEN-ATOM))
 (9 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (9 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (8 8 (:REWRITE CONSP-BY-LEN))
 (8 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (8 4 (:REWRITE |(< 0 (len x))|))
 (6 6 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (4 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (4 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (2 2 (:REWRITE POSP-WHEN-MEMBER-EQUAL-OF-ZP-LISTP))
 )
(ZKPAPER::XS+YS-FITS
 (825 825 (:TYPE-PRESCRIPTION EVENP))
 (550 275 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (550 275 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (550 275 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (275 275 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (26 15 (:REWRITE LEN-WHEN-ATOM))
 (25 17 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (20 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (17 17 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (15 15 (:REWRITE CONSP-BY-LEN))
 (12 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (11 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (11 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (8 8 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (8 4 (:REWRITE |(< 0 (len x))|))
 (6 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (6 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (4 4 (:REWRITE POSP-WHEN-MEMBER-EQUAL-OF-ZP-LISTP))
 )
(ZKPAPER::ADDITION-GADGET-CORRECTNESS
 (942 10 (:REWRITE MOD-WHEN-<))
 (384 384 (:TYPE-PRESCRIPTION EVENP))
 (280 26 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (256 128 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (256 128 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (256 128 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (160 160 (:REWRITE CONSP-BY-LEN))
 (140 70 (:REWRITE LEN-WHEN-ATOM))
 (132 62 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (128 128 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (105 21 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (87 10 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (82 71 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (76 62 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (71 71 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (66 31 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (66 31 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (65 21 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (62 62 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (61 13 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (57 57 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (56 28 (:REWRITE |(< 0 (len x))|))
 (42 42 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (38 31 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (38 31 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (28 8 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (24 12 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (21 21 (:REWRITE SUBSETP-TRANS2))
 (21 21 (:REWRITE SUBSETP-TRANS))
 (20 10 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (20 10 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (20 10 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (20 10 (:REWRITE MOD-WHEN-<-OF-0))
 (12 10 (:REWRITE COMMUTATIVITY-OF-*))
 (10 10 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (10 10 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (10 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (9 9 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (9 9 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (8 8 (:REWRITE INTEGERP-OF-*))
 (8 4 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (8 4 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (4 4 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (4 4 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (4 4 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (4 4 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (4 4 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (4 4 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (4 4 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (4 2 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION ZKPAPER::POW2SUM-VECTOR))
 (3 3 (:TYPE-PRESCRIPTION ZKPAPER::BOOLEAN-ASSERT-LIST-GADGET))
 (3 2 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (3 2 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (3 1 (:REWRITE DISTRIBUTIVITY))
 (2 2 (:TYPE-PRESCRIPTION FIX))
 (2 2 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (2 2 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (2 2 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (1 1 (:REWRITE UNICITY-OF-1))
 (1 1 (:REWRITE MOD-OF-+-SUBST-CONSTANT))
 (1 1 (:REWRITE MOD-OF-+-REDUCE-POSITIVE-CONSTANT))
 (1 1 (:REWRITE MOD-OF-+-OF-CONSTANT))
 (1 1 (:REWRITE PFIELD::ADD-COMMUTATIVE-WHEN-CONSTANT))
 )
