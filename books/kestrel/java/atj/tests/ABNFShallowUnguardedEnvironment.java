import edu.kestrel.acl2.aij.*;
import java.util.ArrayList;
import java.util.List;

final class ABNFShallowUnguardedEnvironment {

    static void build() {
        addPackageDef_KEYWORD();
        addPackageDef_COMMON_LISP();
        addPackageDef_ACL2();
        addPackageDef_ACL2_OUTPUT_CHANNEL();
        addPackageDef_ACL2_INPUT_CHANNEL();
        addPackageDef_ACL2_PC();
        addPackageDef_ACL2_USER();
        addPackageDef_STR();
        addPackageDef_INSTANCE();
        addPackageDef_COMPUTED_HINTS();
        addPackageDef_SET();
        addPackageDef_XDOC();
        addPackageDef_BITSETS();
        addPackageDef_STD();
        addPackageDef_STOBJS();
        addPackageDef_FLAG();
        addPackageDef_JAVA();
        addPackageDef_ABNF();
        addPackageDef_BITOPS();
        addPackageDef_FTY();
        addPackageDef_ACL2_CRG();
        addPackageDef_ACL2_AGP();
        addPackageDef_ACL2_ASG();
        addPackageDef_U();
        addPackageDef_DEFSTRUCTURE();
        addPackageDef_OMAP();
        addPackageDef_NREV();
        addPackageDef_OSLIB();
        addPackageDef_DEPGRAPH();
    }

    private static void addPackageDef_ABNF() {
        List<Acl2Symbol> imports = new ArrayList<>(2409);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CONST-TO-UNTRANSLATE-PREPROCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-VALS"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTS-AGREE"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA/DIGIT/DASH-CHARLIST-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "BOOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHARS=>NATS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-B*-BINDER"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("STD", "DEFINE-SK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC+"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("STR", "DOWNCASE-CHAR"));
        imports.add(Acl2Symbol.make("STR", "DOWNCASE-CHARLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATED-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("XDOC", "EXTRACT-KEYWORD-FROM-ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-RULESET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("ACL2", "INTEGERS-FROM-TO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-VARIABLEP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("SET", "LIST-IN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LLIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAL"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-MSGP"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-NATP"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM-PACKAGE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-FAIL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("SET", "NAT-SETP"));
        imports.add(Acl2Symbol.make("ACL2", "NATI"));
        imports.add(Acl2Symbol.make("ACL2", "NATI-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "NATI-FINITE"));
        imports.add(Acl2Symbol.make("ACL2", "NATI-FINITE->GET"));
        imports.add(Acl2Symbol.make("ACL2", "NATI-INFINITY"));
        imports.add(Acl2Symbol.make("ACL2", "NATIP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("ACL2", "NATS=>CHARS"));
        imports.add(Acl2Symbol.make("ACL2", "NATS=>STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PATBIND-FUN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-EVENT-FORM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-EVENT-FORMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "RCONS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-CHARACTERS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "REPEAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("ACL2", "REPLICATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-RAW"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "REVAPPEND-WITHOUT-GUARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULESET-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("ACL2", "SEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SEQ-BACKTRACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLER-TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/UTIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("ACL2", "STRING=>NATS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CADRS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SUB-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("XDOC", "THROW-AWAY-KEYWORD-PARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("ACL2", "TWO-NATS-MEASURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNDOCUMENTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIQUEP"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("STR", "UPCASE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC-EXTEND"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("ABNF"), imports);
    }

    private static void addPackageDef_ACL2() {
        List<Acl2Symbol> imports = new ArrayList<>(978);
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        Acl2Package.define(Acl2PackageName.ACL2, imports);
    }

    private static void addPackageDef_ACL2_AGP() {
        List<Acl2Symbol> imports = new ArrayList<>(2322);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("ACL2", "ABELIAN-GROUPS"));
        imports.add(Acl2Symbol.make("ACL2", "ABELIAN-SEMIGROUPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALGEBRA"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVE-RINGS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-DOWNCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-UPCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("ACL2-AGP"), imports);
    }

    private static void addPackageDef_ACL2_ASG() {
        List<Acl2Symbol> imports = new ArrayList<>(2322);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("ACL2", "ABELIAN-GROUPS"));
        imports.add(Acl2Symbol.make("ACL2", "ABELIAN-SEMIGROUPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALGEBRA"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVE-RINGS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-DOWNCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-UPCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("ACL2-ASG"), imports);
    }

    private static void addPackageDef_ACL2_CRG() {
        List<Acl2Symbol> imports = new ArrayList<>(2322);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("ACL2", "ABELIAN-GROUPS"));
        imports.add(Acl2Symbol.make("ACL2", "ABELIAN-SEMIGROUPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALGEBRA"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVE-RINGS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-DOWNCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-UPCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("ACL2-CRG"), imports);
    }

    private static void addPackageDef_ACL2_INPUT_CHANNEL() {
        List<Acl2Symbol> imports = new ArrayList<>(0);
        Acl2Package.define(Acl2PackageName.ACL2_INPUT, imports);
    }

    private static void addPackageDef_ACL2_OUTPUT_CHANNEL() {
        List<Acl2Symbol> imports = new ArrayList<>(0);
        Acl2Package.define(Acl2PackageName.ACL2_OUTPUT, imports);
    }

    private static void addPackageDef_ACL2_PC() {
        List<Acl2Symbol> imports = new ArrayList<>(0);
        Acl2Package.define(Acl2PackageName.ACL2_PC, imports);
    }

    private static void addPackageDef_ACL2_USER() {
        List<Acl2Symbol> imports = new ArrayList<>(2313);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-DOWNCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-UPCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.ACL2_USER, imports);
    }

    private static void addPackageDef_BITOPS() {
        List<Acl2Symbol> imports = new ArrayList<>(2572);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*BITOPS-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ABS-DIFF"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CONTEXT-RULE"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-WIZARD-ADVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "ARITH-EQUIV-FORWARDING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("ACL2", "ASH**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "B-AND"));
        imports.add(Acl2Symbol.make("ACL2", "B-ANDC1"));
        imports.add(Acl2Symbol.make("ACL2", "B-ANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "B-EQV"));
        imports.add(Acl2Symbol.make("ACL2", "B-IOR"));
        imports.add(Acl2Symbol.make("ACL2", "B-ITE"));
        imports.add(Acl2Symbol.make("ACL2", "B-NAND"));
        imports.add(Acl2Symbol.make("ACL2", "B-NOR"));
        imports.add(Acl2Symbol.make("ACL2", "B-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "B-ORC1"));
        imports.add(Acl2Symbol.make("ACL2", "B-ORC2"));
        imports.add(Acl2Symbol.make("ACL2", "B-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BFIX"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY--"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-LOGAND"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-LOGXOR"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("ACL2", "BIT->BOOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "BIT-EQUIV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITMASKP"));
        imports.add(Acl2Symbol.make("ACL2", "BITMASKP**"));
        imports.add(Acl2Symbol.make("ACL2", "BITOPS"));
        imports.add(Acl2Symbol.make("ACL2", "BITOPS-CONGRUENCES"));
        imports.add(Acl2Symbol.make("ACL2", "BITOPS-CONGRUENCES-INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("ACL2", "BITSCAN-FWD"));
        imports.add(Acl2Symbol.make("ACL2", "BITSCAN-REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "BOOL->BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("ACL2", "C"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEARBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COPYBIT"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-GL-THM"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("STD", "DEFAGGREGATE"));
        imports.add(Acl2Symbol.make("STD", "DEFALIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("STD", "DEFENUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXAMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINSTANTIATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("STD", "DEFLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("STD", "DEFMAPAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("STD", "DEFPROJECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("STD", "DEFRETD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("STD", "DEFSUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWITNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DO-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E/D*"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP-HAMMER"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP-WITNESSING"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGEXT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGEXT-FN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREPEAT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREPEAT!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U16"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U32"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U64"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U8"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-PARITY"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ROTATE-LEFT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ROTATE-RIGHT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("ACL2", "FUN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "G"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "H"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "IHS-EXT-DISABLED-RULES"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-ADVANCED-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-ARITHMETIC"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-BAD-TYPE-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-BASIC-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-BOUNDS-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-INDUCTIONS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-RECURSIVE-REDEFS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-REDEFS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INSTALL-BIT"));
        imports.add(Acl2Symbol.make("ACL2", "INSTALL-BIT**"));
        imports.add(Acl2Symbol.make("ACL2", "INT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LENGTH**"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTRODUCE-VAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "J"));
        imports.add(Acl2Symbol.make("ACL2", "K"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("ACL2", "LBFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("ACL2", "LIFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAND**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAND-UPPER-BOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAPP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAPP**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-CASE-SPLITS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-CASE-SPLITS+"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-LHS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-LOGTAIL"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-MISMATCH"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-MISMATCH-CORRECT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-REASONING"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-RHS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCAR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCAR-LOGCDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR-INDUCTION-1"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR-INDUCTION-2"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR-INDUCTION-3"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCOUNT**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGEXT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGEXT**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD-UPPER-BOUND"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIOR**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGITE"));
        imports.add(Acl2Symbol.make("ACL2", "LOGMASK"));
        imports.add(Acl2Symbol.make("ACL2", "LOGMASK**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGMASKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGNOT**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREPEAT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREV**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREV1"));
        imports.add(Acl2Symbol.make("ACL2", "LOGSQUASH**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGTAIL"));
        imports.add(Acl2Symbol.make("ACL2", "LOGTAIL**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGTAIL-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGXOR**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("ACL2", "LPOSFIX"));
        imports.add(Acl2Symbol.make("ACL2", "M"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-BIT-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-BITP"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U128S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U256S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U2S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U4S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U64S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-32-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U128S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U2S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U4S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U64S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U2S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U64S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U8S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("ACL2", "N"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE16"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE32"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE64"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE8"));
        imports.add(Acl2Symbol.make("ACL2", "NEGP"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.make("ACL2", "NON-PARALLEL-BOOK"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("ACL2", "NOTBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE$"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE128"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE16"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE2"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE256"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE32"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE4"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE512"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE64"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE8"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PART-INSTALL"));
        imports.add(Acl2Symbol.make("ACL2", "PART-SELECT"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("ACL2", "POS"));
        imports.add(Acl2Symbol.make("ACL2", "POS-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "POS-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "Q"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("ACL2", "RIGHT-SHIFT-TO-LOGTAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT**"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT**-TR"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT-1"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT**"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT**-TR"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETBIT"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P**"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P-LOGOPS"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-SATURATE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-SATURATE-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SIZE1"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-1"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-2"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-2-W/CARRY"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-3"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNEQUAL-BY-LOGBITP-WITNESSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P**"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-LOGAND"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-ASH"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGAND-1"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGAND-2"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGAPP"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGHEAD"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGREV"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGSQUASH"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGTAIL"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGXOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-SATURATE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-SATURATE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "V"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("ACL2", "WHY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WITNESS-CP"));
        imports.add(Acl2Symbol.make("ACL2", "WITNESS-CP-INSTANCE-RULES"));
        imports.add(Acl2Symbol.make("ACL2", "WITNESS-CP-WITNESS-RULES"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("ACL2", "ZBP"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("BITOPS"), imports);
    }

    private static void addPackageDef_BITSETS() {
        List<Acl2Symbol> imports = new ArrayList<>(2399);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*BITSET-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "ARITH-EQUIV-FORWARDING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-CARDINALITY"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-EQUAL-EXAMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-EQUAL-INSTANCING"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-EQUAL-WITNESSING"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-INSERT"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-INTERSECT"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-MEMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-SINGLETON"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-UNION"));
        imports.add(Acl2Symbol.make("ACL2", "BITSET-WITNESSING"));
        imports.add(Acl2Symbol.make("ACL2", "BITSETS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("ACL2", "C"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXAMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINSTANTIATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWITNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("SET", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E"));
        imports.add(Acl2Symbol.make("SET", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E/D*"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("SET", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BITSETS-BY-MEMBERSHIP"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "G"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "H"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-RAW"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "J"));
        imports.add(Acl2Symbol.make("ACL2", "K"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("ACL2", "LBFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("ACL2", "LIFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-LHS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-MISMATCH"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-RHS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("ACL2", "M"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("ACL2", "N"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "Q"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSET-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSET-INTERSECT"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSET-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSET-SINGLETON"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSET-UNION"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SBITSETS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/BITSETS"));
        imports.add(Acl2Symbol.make("ACL2", "STD/OSETS"));
        imports.add(Acl2Symbol.make("ACL2", "STD/UTIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "V"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WITNESS"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("BITSETS"), imports);
    }

    private static void addPackageDef_COMMON_LISP() {
        List<Acl2Symbol> imports = new ArrayList<>(0);
        Acl2Package.define(Acl2PackageName.LISP, imports);
    }

    private static void addPackageDef_COMPUTED_HINTS() {
        List<Acl2Symbol> imports = new ArrayList<>(2297);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("INSTANCE", "INSTANCE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("COMPUTED-HINTS"), imports);
    }

    private static void addPackageDef_DEFSTRUCTURE() {
        List<Acl2Symbol> imports = new ArrayList<>(2334);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*BUILT-IN-EXECUTABLE-COUNTERPARTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*EXPANDABLE-BOOT-STRAP-NON-REC-FNS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGLISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("U", "DEFLOOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTRUCTURE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("U", "FORCE-TERM-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-ARGUMENT"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-AS-FLAG"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-CHECK-SYNTAX"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-ENTRIES"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-ENTRY"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-MEMBER"));
        imports.add(Acl2Symbol.make("U", "GET-OPTION-SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-VARIABLE-OR-CONSTANT-NAMEP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("U", "PACK-INTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REASON-FOR-NON-KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-DOWNCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-UPCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("U", "UNIQUE-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("DEFSTRUCTURE"), imports);
    }

    private static void addPackageDef_DEPGRAPH() {
        List<Acl2Symbol> imports = new ArrayList<>(2357);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-VALS"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("STD", "DEFAGGREGATE"));
        imports.add(Acl2Symbol.make("STD", "DEFALIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("STD", "DEFENUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("STD", "DEFLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("STD", "DEFMAPAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("STD", "DEFPROJECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("STD", "DEFRETD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("STD", "DEFSUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAL-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "FLATTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("ACL2", "FUN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REASONING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("ACL2", "TWO-NATS-MEASURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("ACL2", "WHY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("DEPGRAPH"), imports);
    }

    private static void addPackageDef_FLAG() {
        List<Acl2Symbol> imports = new ArrayList<>(2313);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-ACL2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("STD", "EXPAND-CALLS-COMPUTED-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("STD", "FIND-CALLS-OF-FNS-LIST"));
        imports.add(Acl2Symbol.make("STD", "FIND-CALLS-OF-FNS-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "FLAG-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "FLAG-DEFTHM-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "FLAG-EQUIVS-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "FLAG-FN-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "FLAG-PRESENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "FORMALS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "JUSTIFICATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FLAG"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "RECURSIVEP"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("FLAG"), imports);
    }

    private static void addPackageDef_FTY() {
        List<Acl2Symbol> imports = new ArrayList<>(2605);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ABS-DIFF"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-VALS"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTS-AGREE"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "ARITH-EQUIV-FORWARDING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("ACL2", "ASH**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "B-AND"));
        imports.add(Acl2Symbol.make("ACL2", "B-ANDC1"));
        imports.add(Acl2Symbol.make("ACL2", "B-ANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "B-EQV"));
        imports.add(Acl2Symbol.make("ACL2", "B-IOR"));
        imports.add(Acl2Symbol.make("ACL2", "B-ITE"));
        imports.add(Acl2Symbol.make("ACL2", "B-NAND"));
        imports.add(Acl2Symbol.make("ACL2", "B-NOR"));
        imports.add(Acl2Symbol.make("ACL2", "B-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "B-ORC1"));
        imports.add(Acl2Symbol.make("ACL2", "B-ORC2"));
        imports.add(Acl2Symbol.make("ACL2", "B-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BFIX"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY--"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-LOGAND"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "BINARY-LOGXOR"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("ACL2", "BIT->BOOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "BIT-EQUIV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITMASKP"));
        imports.add(Acl2Symbol.make("ACL2", "BITMASKP**"));
        imports.add(Acl2Symbol.make("ACL2", "BITOPS-CONGRUENCES"));
        imports.add(Acl2Symbol.make("ACL2", "BITOPS-CONGRUENCES-INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("ACL2", "BITSCAN-FWD"));
        imports.add(Acl2Symbol.make("ACL2", "BITSCAN-REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "BOOL->BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("ACL2", "C"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("STR", "CAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEARBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "CONGRUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COPYBIT"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-B*-BINDER"));
        imports.add(Acl2Symbol.make("STD", "DEF-PRIMITIVE-AGGREGATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATED-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E/D*"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP-HAMMER"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-BY-LOGBITP-WITNESSING"));
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("XDOC", "EXTRACT-KEYWORD-FROM-ARGS"));
        imports.add(Acl2Symbol.make("STD", "EXTRACT-KEYWORDS"));
        imports.add(Acl2Symbol.make("ACL2", "F"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGEXT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGEXT-FN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREPEAT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREPEAT!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U16"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U32"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U64"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LOGREV-U8"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-PARITY"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ROTATE-LEFT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ROTATE-RIGHT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "FTY"));
        imports.add(Acl2Symbol.make("ACL2", "FTY-DISCIPLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "G"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-RULESET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("STD", "GETARG"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "H"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "IHS-EXT-DISABLED-RULES"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-ADVANCED-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-ARITHMETIC"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-BAD-TYPE-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-BASIC-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-BOUNDS-THMS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-INDUCTIONS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-RECURSIVE-REDEFS"));
        imports.add(Acl2Symbol.make("ACL2", "IHSEXT-REDEFS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INSTALL-BIT"));
        imports.add(Acl2Symbol.make("ACL2", "INSTALL-BIT**"));
        imports.add(Acl2Symbol.make("ACL2", "INT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LENGTH**"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "J"));
        imports.add(Acl2Symbol.make("ACL2", "K"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("ACL2", "LBFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-VARIABLEP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("ACL2", "LIFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LLIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAND**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAPP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGAPP**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-CASE-SPLITS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-CASE-SPLITS+"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-LHS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-MISMATCH"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-MISMATCH-CORRECT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-REASONING"));
        imports.add(Acl2Symbol.make("ACL2", "LOGBITP-RHS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCAR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR-INDUCTION-1"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR-INDUCTION-2"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCDR-INDUCTION-3"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGCOUNT**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGEXT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGEXT**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIOR**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGITE"));
        imports.add(Acl2Symbol.make("ACL2", "LOGMASK"));
        imports.add(Acl2Symbol.make("ACL2", "LOGMASK**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGMASKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGNOT**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREPEAT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREV**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGREV1"));
        imports.add(Acl2Symbol.make("ACL2", "LOGSQUASH**"));
        imports.add(Acl2Symbol.make("ACL2", "LOGTAIL"));
        imports.add(Acl2Symbol.make("ACL2", "LOGTAIL**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("ACL2", "LOGXOR**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("ACL2", "LPOSFIX"));
        imports.add(Acl2Symbol.make("ACL2", "M"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAL"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-BIT-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-BITP"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-16-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U128S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U256S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U2S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U4S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U64S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-2-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-32-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U128S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U2S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U4S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U64S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-4-U8S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-BITS"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U16S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U2S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U32S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U64S"));
        imports.add(Acl2Symbol.make("ACL2", "MERGE-8-U8S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM-PACKAGE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-FAIL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("ACL2", "N"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE16"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE32"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE64"));
        imports.add(Acl2Symbol.make("ACL2", "NEGATE-SLICE8"));
        imports.add(Acl2Symbol.make("ACL2", "NEGP"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("ACL2", "NOTBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE$"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE128"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE16"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE2"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE256"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE32"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE4"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE512"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE64"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-SLICE8"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PART-INSTALL"));
        imports.add(Acl2Symbol.make("ACL2", "PART-SELECT"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("ACL2", "POS-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "POS-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("STD", "PROD-CAR"));
        imports.add(Acl2Symbol.make("STD", "PROD-CDR"));
        imports.add(Acl2Symbol.make("STD", "PROD-CONS"));
        imports.add(Acl2Symbol.make("STD", "PROD-CONS-WITH-HINT"));
        imports.add(Acl2Symbol.make("STD", "PROD-CONSP"));
        imports.add(Acl2Symbol.make("STD", "PROD-HONS"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "Q"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("STR", "RCHARS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "RCONS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "REPEAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("ACL2", "REPLICATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("STR", "REVAPPEND-CHARS"));
        imports.add(Acl2Symbol.make("ACL2", "REVAPPEND-WITHOUT-GUARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("ACL2", "RIGHT-SHIFT-TO-LOGTAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT**"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT**-TR"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-LEFT-1"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT**"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT**-TR"));
        imports.add(Acl2Symbol.make("ACL2", "ROTATE-RIGHT-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RULESET-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETBIT"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P**"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-SATURATE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-SATURATE-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLER-TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/UTIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CADRS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SUB-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-1"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-2"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-2-W/CARRY"));
        imports.add(Acl2Symbol.make("ACL2", "SUB1-LOGCDR-INDUCTION-3"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("XDOC", "THROW-AWAY-KEYWORD-PARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("ACL2", "TWO-NATS-MEASURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNDOCUMENTED"));
        imports.add(Acl2Symbol.make("ACL2", "UNEQUAL-BY-LOGBITP-WITNESSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIQUEP"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P**"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-ASH"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGAND-1"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGAND-2"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGAPP"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGHEAD"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGIOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGREV"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGSQUASH"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGTAIL"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P-OF-LOGXOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-SATURATE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-SATURATE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "V"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC-EXTEND"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("ACL2", "ZBP"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("FTY"), imports);
    }

    private static void addPackageDef_INSTANCE() {
        List<Acl2Symbol> imports = new ArrayList<>(2296);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("INSTANCE"), imports);
    }

    private static void addPackageDef_JAVA() {
        List<Acl2Symbol> imports = new ArrayList<>(2567);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("ACL2", "*NIL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("ACL2", "*PKG-WITNESS-NAME*"));
        imports.add(Acl2Symbol.make("ACL2", "*PRIMITIVE-FORMALS-AND-GUARDS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STOBJS-OUT-INVALID*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CONST-TO-UNTRANSLATE-PREPROCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-VALS"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTS-AGREE"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-FFN-SYMBS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-FNNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-FNNAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-FNNAMES1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-FREE/BOUND-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS-OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS-OPEN-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA/DIGIT-CHARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA/DIGIT/DASH-CHARLIST-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA/DIGIT/USCORE/DOLLAR-CHARLIST-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA/USCORE/DOLLAR-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.BAD_ATOM_LESS_THAN_OR_EQUAL_TO);
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "BODY"));
        imports.add(Acl2Symbol.make("ACL2", "BOOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("STR", "CHARS-IN-CHARSET-P"));
        imports.add(Acl2Symbol.make("ACL2", "CHARS=>NATS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-IF-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-LAMBDA-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-LIST-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-MV-LET-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-UNARY-LAMBDA-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "CONJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-POS-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-B*-BINDER"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-SK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO+"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("STD", "DEFRET-MUTUAL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-COMMUTATIVE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTUTORIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC+"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLETS-TO-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR-OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR-OPEN-LST"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATED-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-DOUBLET-LIST$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-FUNCTION-NAME-LIST$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-LIST-FUNCTIONS$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-LIST-HAS-NO-DUPLICATES$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-STRING-OR-NIL$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-TERM-GROUND$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-VALUE-IS-BOOLEAN$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-VALUE-IS-FUNCTION-NAME$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-VALUE-IS-IN-LIST$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-VALUE-IS-STRING$"));
        imports.add(Acl2Symbol.make("ACL2", "ENSURE-VALUE-IS-UNTRANSLATED-TERM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT+"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("XDOC", "EXTRACT-KEYWORD-FROM-ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FARGN"));
        imports.add(Acl2Symbol.make("ACL2", "FARGS"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("ACL2", "FCONS-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FCONS-TERM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FFN-SYMB"));
        imports.add(Acl2Symbol.make("ACL2", "FFN-SYMB-P"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "FLAMBDA-APPLICATIONP"));
        imports.add(Acl2Symbol.make("ACL2", "FLAMBDAP"));
        imports.add(Acl2Symbol.make("ACL2", "FLATTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "FORMALS"));
        imports.add(Acl2Symbol.make("ACL2", "FORMALS+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("ACL2", "FQUOTEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-NAME-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-NAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-RULESET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLICATE"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPOSSIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDEX-OF"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("ACL2", "INTEGERS-FROM-TO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRECURSIVEP"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGES+"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA-FORMALS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-VARIABLEP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("SET", "LIST-IN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LLIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGEXT"));
        imports.add(Acl2Symbol.make("ACL2", "LOGHEAD"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-WITH-RAW-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "LOGICP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAL"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LAMBDA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-LET-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-NATP"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-STRINGP"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM-PACKAGE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSG-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-FAIL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MVIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("ACL2", "NATS=>STRING"));
        imports.add(Acl2Symbol.make("STR", "NATSTR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-STOBJS-P"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-OF-RESULTS+"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ORGANIZE-SYMBOLS-BY-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "ORGANIZE-SYMBOLS-BY-PKG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("ACL2", "PACKN"));
        imports.add(Acl2Symbol.make("ACL2", "PACKN-POS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PATBIND-FUN"));
        imports.add(Acl2Symbol.make("ACL2", "PATBIND-RUN-UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "PATBIND-RUN-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("ACL2", "POS"));
        imports.add(Acl2Symbol.make("ACL2", "POS-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("ACL2", "PRIMITIVEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINTABLE-CHARLIST-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM-FNS-WITH-RAW-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-FN-ARGS-P"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-FN-P"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-LAMBDA->BODY"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-LAMBDA->FORMALS"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-LAMBDA-P"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-LAMBDAP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-CALL->ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-CALL->FN"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-FNCALL->ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-FNCALL->FN"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-KIND"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LAMBDA->ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LAMBDA->BODY"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LAMBDA->FORMALS"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LIST-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-NULL"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-QUOTE->VAL"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-VAR->NAME"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMFN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMFNP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-VAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("ACL2", "PURE-RAW-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "RAWP"));
        imports.add(Acl2Symbol.make("ACL2", "RCONS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOCS-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEAD-IF-BRANCHES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MBE-EXEC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MBE-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-TRIVIAL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNUSED-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "REPEAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("ACL2", "REPLICATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "REVAPPEND-WITHOUT-GUARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RULESET-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE16"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE16-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE16P"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE32"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE32-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE32P"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE64"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE64-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE64P"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE8"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE8-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SBYTE8P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLER-TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("ACL2", "SORT-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/UTIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "STR-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-SYMBOLLIST-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("ACL2", "STRING=>NATS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CADRS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SUB-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBCOR-VAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-PACKAGE-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-POS-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-SYMBOLLIST-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST+"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("ACL2", "TAIL-RECURSIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-POSSIBLE-NUMBERS-OF-RESULTS"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("XDOC", "THROW-AWAY-KEYWORD-PARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("ACL2", "TUPLEP"));
        imports.add(Acl2Symbol.make("ACL2", "TWO-NATS-MEASURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-TUPLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBODY"));
        imports.add(Acl2Symbol.make("ACL2", "UBODY+"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.make("ACL2", "UBYTE16"));
        imports.add(Acl2Symbol.make("ACL2", "UBYTE16-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "UBYTE16P"));
        imports.add(Acl2Symbol.make("ACL2", "UBYTE8"));
        imports.add(Acl2Symbol.make("ACL2", "UBYTE8=>HEXCHARS"));
        imports.add(Acl2Symbol.make("ACL2", "UBYTE8S=>HEXSTRING"));
        imports.add(Acl2Symbol.make("ACL2", "UGUARD"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNDOCUMENTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIQUEP"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNNORMALIZED-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE-TERM-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("ACL2", "VARIABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC-EXTEND"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("JAVA"), imports);
    }

    private static void addPackageDef_KEYWORD() {
        List<Acl2Symbol> imports = new ArrayList<>(0);
        Acl2Package.define(Acl2PackageName.KEYWORD, imports);
    }

    private static void addPackageDef_NREV() {
        List<Acl2Symbol> imports = new ArrayList<>(2315);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-RAW"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("ACL2", "NREV"));
        imports.add(Acl2Symbol.make("ACL2", "NREV-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "NREV-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "NREV-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "NREV-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "NREV-PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "NREV2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "RCONS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-NREV"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("NREV"), imports);
    }

    private static void addPackageDef_OMAP() {
        List<Acl2Symbol> imports = new ArrayList<>(2372);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-VALS"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTS-AGREE"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-B*-BINDER"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC+"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATED-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("XDOC", "EXTRACT-KEYWORD-FROM-ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-<<"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-RULESET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-VARIABLEP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LLIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAL"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM-PACKAGE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-FAIL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "RCONS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "REPEAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("ACL2", "REPLICATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "REVAPPEND-WITHOUT-GUARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RULESET-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLER-TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/UTIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CADRS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SUB-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("XDOC", "THROW-AWAY-KEYWORD-PARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("ACL2", "TWO-NATS-MEASURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNDOCUMENTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIQUEP"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC-EXTEND"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("OMAP"), imports);
    }

    private static void addPackageDef_OSLIB() {
        List<Acl2Symbol> imports = new ArrayList<>(2351);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("STR", "CAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("STD", "DEFAGGREGATE"));
        imports.add(Acl2Symbol.make("STD", "DEFALIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("STD", "DEFENUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("STD", "DEFLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("STD", "DEFMAPAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("STD", "DEFPROJECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("STD", "DEFRETD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("STD", "DEFSUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-RAW"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LIVE-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("STR", "NATSTR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "OSLIB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("OSLIB"), imports);
    }

    private static void addPackageDef_SET() {
        List<Acl2Symbol> imports = new ArrayList<>(2335);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("ACL2", "<<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "<<-IMPLIES-LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "<<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "<<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "<<-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("ACL2", "C"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-<<"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-LEXORDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "G"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "H"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "J"));
        imports.add(Acl2Symbol.make("ACL2", "K"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("ACL2", "M"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("ACL2", "N"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "Q"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("COMPUTED-HINTS", "REWRITING-CONC-LIT"));
        imports.add(Acl2Symbol.make("COMPUTED-HINTS", "REWRITING-GOAL-LIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/OSETS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "V"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("SET"), imports);
    }

    private static void addPackageDef_STD() {
        List<Acl2Symbol> imports = new ArrayList<>(2376);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "ALIST-VALS"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTS-AGREE"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-B*-BINDER"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATED-MEMBERS"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("XDOC", "EXTRACT-KEYWORD-FROM-ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-RULESET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-VARIABLEP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LLIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAL"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM"));
        imports.add(Acl2Symbol.make("XDOC", "MKSYM-PACKAGE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-FAIL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "RCONS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "REPEAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("ACL2", "REPLICATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "REVAPPEND-WITHOUT-GUARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RULESET-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLER-TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/UTIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CADRS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SUB-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("XDOC", "THROW-AWAY-KEYWORD-PARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("ACL2", "TWO-NATS-MEASURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNDOCUMENTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIQUEP"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC-EXTEND"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("STD"), imports);
    }

    private static void addPackageDef_STOBJS() {
        List<Acl2Symbol> imports = new ArrayList<>(2362);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STOBJS-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ABSTRACT-STOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("ACL2", "ARITH-EQUIV-FORWARDING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BFIX"));
        imports.add(Acl2Symbol.make("ACL2", "BFIX$INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("ACL2", "BIT-EQUIV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITARR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "CONGRUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-1D-ARR"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-2D-ARR"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-RULESET!"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-UNIVERSAL-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-UPDATER-INDEPENDENCE-THM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("STD", "DEFAGGREGATE"));
        imports.add(Acl2Symbol.make("STD", "DEFALIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONSTS"));
        imports.add(Acl2Symbol.make("STD", "DEFENUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFFUNMAC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("STD", "DEFLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACFUN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("STD", "DEFMAPAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMVTYPES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("STD", "DEFPROJECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRET"));
        imports.add(Acl2Symbol.make("STD", "DEFRETD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEDL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFRULEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ-CLONE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("STD", "DEFSUM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E/D*"));
        imports.add(Acl2Symbol.make("ACL2", "E/D**"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("ACL2", "LBFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("ACL2", "LIFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-RETURNS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEW"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OLD"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RET"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RULE"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJS"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "TAG"));
        imports.add(Acl2Symbol.make("ACL2", "TAG-REASONING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "TEMPLATE-SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        imports.add(Acl2Symbol.make("ACL2", "__FUNCTION__"));
        Acl2Package.define(Acl2PackageName.make("STOBJS"), imports);
    }

    private static void addPackageDef_STR() {
        List<Acl2Symbol> imports = new ArrayList<>(2349);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("ACL2", "C"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHAREQV"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAGGREGATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINES"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINLINED"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "G"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "H"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "J"));
        imports.add(Acl2Symbol.make("ACL2", "K"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LISTPOS"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("ACL2", "M"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("ACL2", "N"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREFIXP"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "Q"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RAISE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "REPEAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("ACL2", "REPLICATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "S"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLER-TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "STD"));
        imports.add(Acl2Symbol.make("ACL2", "STD/STRINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "STR"));
        imports.add(Acl2Symbol.make("ACL2", "STR-FIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("ACL2", "STREQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "V"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "X"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("ACL2", "Y"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "Z"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("STR"), imports);
    }

    private static void addPackageDef_U() {
        List<Acl2Symbol> imports = new ArrayList<>(2315);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOWER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-EQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-DOWNCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-UPCASE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPPER-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("U"), imports);
    }

    private static void addPackageDef_XDOC() {
        List<Acl2Symbol> imports = new ArrayList<>(2337);
        imports.add(Acl2Symbol.make("ACL2", "&"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ALLOW-OTHER-KEYS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&AUX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&BODY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&ENVIRONMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&KEY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&OPTIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "&WHOLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "**"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "***"));
        imports.add(Acl2Symbol.make("ACL2", "*ACL2-EXPORTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*BREAK-ON-SIGNALS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SPECIALS-AND-CONSTANTS*"));
        imports.add(Acl2Symbol.make("ACL2", "*COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-FILE-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*COMPILE-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUG-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEBUGGER-HOOK*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*DEFAULT-PATHNAME-DEFAULTS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*ERROR-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*FEATURES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*GENSYM-COUNTER*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PATHNAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-PRINT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-TRUENAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*LOAD-VERBOSE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MACROEXPAND-HOOK*"));
        imports.add(Acl2Symbol.make("ACL2", "*MAIN-LISP-PACKAGE-NAME*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*MODULES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PACKAGE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ARRAY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-CIRCLE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-ESCAPE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-GENSYM*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LENGTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LEVEL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-LINES*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-MISER-WIDTH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PPRINT-DISPATCH*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-PRETTY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RADIX*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-READABLY*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*PRINT-RIGHT-MARGIN*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*QUERY-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*RANDOM-STATE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-BASE*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-DEFAULT-FLOAT-FORMAT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-EVAL*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READ-SUPPRESS*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*READTABLE*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CHARS*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CI*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-CO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-INPUT*"));
        imports.add(Acl2Symbol.make("ACL2", "*STANDARD-OI*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*STANDARD-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TERMINAL-IO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "*TRACE-OUTPUT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "+++"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "-"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "//"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "///"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "1-"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGER-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP"));
        imports.add(Acl2Symbol.make("ACL2", "32-BIT-INTEGERP-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.LESS_THAN);
        imports.add(Acl2Symbol.make("ACL2", "<-ON-OTHERS"));
        imports.add(Acl2Symbol.make("ACL2", "<<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "="));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">"));
        imports.add(Acl2Symbol.make("COMMON-LISP", ">="));
        imports.add(Acl2Symbol.make("ACL2", "?-FN"));
        imports.add(Acl2Symbol.make("ACL2", "@"));
        imports.add(Acl2Symbol.make("ACL2", "A!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABORT"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT!"));
        imports.add(Acl2Symbol.make("ACL2", "ABORT-SOFT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ABS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCESS"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "ACCUMULATED-PERSISTENCE-OOPS"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-INPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-NUMBER-LISTP"));
        imports.add(Acl2Symbol.ACL2_NUMBERP);
        imports.add(Acl2Symbol.make("ACL2", "ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-OUTPUT-CHANNEL-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "ACL2-UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ACOSH"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-OR-NON-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ACTIVE-RUNEP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-LD-KEYWORD-ALIAS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MACRO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-MATCH-FREE-OVERRIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADD-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-PAIR-PRESERVES-ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-SUFFIX-TO-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TIMERS"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "ADD-TO-SET-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUST-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ADJUSTABLE-ARRAY-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-ATTACHMENTS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-BOUNDP-PRESERVES-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1"));
        imports.add(Acl2Symbol.make("ACL2", "ALL-VARS1-LST"));
        imports.add(Acl2Symbol.make("ACL2", "ALLOCATE-FIXNUM-RANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALLOCATE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHA-CHAR-P-FORWARD-TO-CHARACTERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ALPHANUMERICP"));
        imports.add(Acl2Symbol.make("ACL2", "ALPHORDER"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$"));
        imports.add(Acl2Symbol.make("ACL2", "ALWAYS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AND"));
        imports.add(Acl2Symbol.make("ACL2", "AND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$"));
        imports.add(Acl2Symbol.make("ACL2", "APPEND$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APPLY"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-LAMBDA-GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "APROPOS-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "AREF"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "AREF1"));
        imports.add(Acl2Symbol.make("ACL2", "AREF2"));
        imports.add(Acl2Symbol.make("ACL2", "ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERANDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARITHMETIC-ERROR-OPERATION"));
        imports.add(Acl2Symbol.make("ACL2", "ARITIES-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "ARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSION-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-DISPLACEMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-HAS-FILL-POINTER-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-IN-BOUNDS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-RANK-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-ROW-MAJOR-INDEX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAY-TOTAL-SIZE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY1P-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ARRAY2P-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ARRAYP"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1"));
        imports.add(Acl2Symbol.make("ACL2", "ASET1-TRUSTED"));
        imports.add(Acl2Symbol.make("ACL2", "ASET2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSERT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT!"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT$"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSERT-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC-STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOC2"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "ASSOCIATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "ASSUME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATANH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ATOM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "B*"));
        imports.add(Acl2Symbol.make("ACL2", "BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE"));
        imports.add(Acl2Symbol.make("ACL2", "BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BASE-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "BIG-CLOCK-NEGATIVE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIGNUM"));
        imports.add(Acl2Symbol.BINARY_STAR);
        imports.add(Acl2Symbol.BINARY_PLUS);
        imports.add(Acl2Symbol.make("ACL2", "BINARY-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "BIND-FREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BIT-XOR"));
        imports.add(Acl2Symbol.make("ACL2", "BITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-AND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-C2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-CLR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-EQV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-IOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-NOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-ORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-SET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLE-XOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOOLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-CHARACTERP"));
        imports.add(Acl2Symbol.make("ACL2", "BOOLEANP-COMPOUND-RECOGNIZER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOTH-CASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDED-INTEGER-ALISTP2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "BOUNDP-GLOBAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BREAK"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK$"));
        imports.add(Acl2Symbol.make("ACL2", "BREAK-ON-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BROADCAST-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("ACL2", "BRR"));
        imports.add(Acl2Symbol.make("ACL2", "BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "BRR@"));
        imports.add(Acl2Symbol.make("ACL2", "BUILD-STATE1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUILT-IN-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "BYTE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-ARGUMENTS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CALL-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "CANONICAL-PATHNAME"));
        imports.add(Acl2Symbol.CAR);
        imports.add(Acl2Symbol.make("ACL2", "CAR-CDR-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "CAR-CONS"));
        imports.add(Acl2Symbol.make("SET", "CARDINALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CASE"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-LIST-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-MATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "CASE-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CATCH"));
        imports.add(Acl2Symbol.make("ACL2", "CBD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDADR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CDDR"));
        imports.add(Acl2Symbol.CDR);
        imports.add(Acl2Symbol.make("ACL2", "CDR-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "CDRN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CELL-ERROR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CERROR"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "CERTIFY-BOOK!"));
        imports.add(Acl2Symbol.make("ACL2", "CHANGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHANGE-CLASS"));
        imports.add(Acl2Symbol.CHAR);
        imports.add(Acl2Symbol.CHAR_CODE);
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-CODE-CHAR-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-CODE-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "CHAR-CODE-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-INT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHAR>="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-REVAPPEND"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-DOWNCASE-1"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTER-LISTP-STRING-UPCASE1-1"));
        imports.add(Acl2Symbol.CHARACTERP);
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-PAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RETURN"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-RUBOUT"));
        imports.add(Acl2Symbol.make("ACL2", "CHARACTERP-TAB"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CHECK-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECK-VARS-NOT-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-FORCED-GOALS"));
        imports.add(Acl2Symbol.make("ACL2", "CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLASS-OF"));
        imports.add(Acl2Symbol.make("ACL2", "CLAUSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-INPUT"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-STATISTICS"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "CLEAR-MEMOIZE-TABLES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLEAR-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSE-TRACE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "CLOSURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CLRHASH"));
        imports.add(Acl2Symbol.CODE_CHAR);
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-CHAR-CODE-IS-IDENTITY"));
        imports.add(Acl2Symbol.make("ACL2", "CODE-CHAR-TYPE"));
        imports.add(Acl2Symbol.COERCE);
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-1"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-INVERSE-2"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-OBJECT-TO-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "COERCE-STATE-TO-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$"));
        imports.add(Acl2Symbol.make("ACL2", "COLLECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "COMMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUNITY-BOOKS"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMMUTATIVITY-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILATION-SPEED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILE-FILE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILED-FUNCTION-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPILER-MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-<"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-CODE-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COERCE"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLETION-OF-UNARY-MINUS"));
        imports.add(Acl2Symbol.COMPLEX);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-0"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-DEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX-IMPLIES1"));
        imports.add(Acl2Symbol.COMPLEX_RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "COMPLEX/COMPLEX-RATIONALP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPLEXP"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS11"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS2"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS21"));
        imports.add(Acl2Symbol.make("ACL2", "COMPRESS211"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-APPLICABLE-METHODS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COMPUTE-RESTARTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONCATENATED-STREAM-STREAMS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COND"));
        imports.add(Acl2Symbol.make("ACL2", "COND-CLAUSESP"));
        imports.add(Acl2Symbol.make("ACL2", "COND-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONJUGATE"));
        imports.add(Acl2Symbol.CONS);
        imports.add(Acl2Symbol.make("ACL2", "CONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-SUBTREES"));
        imports.add(Acl2Symbol.make("ACL2", "CONS-WITH-HINT"));
        imports.add(Acl2Symbol.CONSP);
        imports.add(Acl2Symbol.make("ACL2", "CONSP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONSTANTP"));
        imports.add(Acl2Symbol.make("ACL2", "CONSTRAINT-INFO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTINUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CONTROL-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SEQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COPY-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "COROLLARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "COUNT-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "COUNT-KEYS"));
        imports.add(Acl2Symbol.make("ACL2", "CPU-CORE-COUNT"));
        imports.add(Acl2Symbol.make("ACL2", "CTX"));
        imports.add(Acl2Symbol.make("ACL2", "CTXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "CTYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-ACL2-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "CURRENT-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "CW"));
        imports.add(Acl2Symbol.make("ACL2", "CW!"));
        imports.add(Acl2Symbol.make("ACL2", "CW!+"));
        imports.add(Acl2Symbol.make("ACL2", "CW+"));
        imports.add(Acl2Symbol.make("ACL2", "CW-GSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "CW-PRINT-BASE-RADIX!"));
        imports.add(Acl2Symbol.make("ACL2", "D<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEBUG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLAIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECLARE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DECODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "DECREMENT-BIG-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "DEF-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABBREV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ"));
        imports.add(Acl2Symbol.make("ACL2", "DEFABSSTOBJ-MISSING-EVENTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH"));
        imports.add(Acl2Symbol.make("ACL2", "DEFATTACH-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-*-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-+-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-<-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CDR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-CHAR-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COERCE-3"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-1"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-COMPLEX-2"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DEFUN-MODE-FROM-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-DENOMINATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-IMAGPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-NUMERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-PRINT-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-REALPART"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-STATE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-UNARY-MINUS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAULT-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFAXIOM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFBADGE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCHOOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCLASS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFCONST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFCONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEQUIV"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEVALUATOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFEXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFGENERIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-COMPILER-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-MODIFY-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-ATOMIC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-HELP"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-PC-META"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SETF-EXPANDER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFINE-SYMBOL-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFINE-TRUSTED-CLAUSE-PROCESSOR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLABEL"));
        imports.add(Acl2Symbol.make("ACL2", "DEFLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMACRO"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "DEFMACRO-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFMETHOD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFPARAMETER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPKG"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPOINTER"));
        imports.add(Acl2Symbol.make("ACL2", "DEFPROXY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFREFINEMENT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSECTION-PROGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSETF"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFSTRUCT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFSTUB"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHEORY-STATIC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHM-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHMD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTHY"));
        imports.add(Acl2Symbol.make("ACL2", "DEFTTAG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFUN"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN$"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-SK"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUN-STD"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-INLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUND-NX"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS"));
        imports.add(Acl2Symbol.make("ACL2", "DEFUNS-STD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEFVAR"));
        imports.add(Acl2Symbol.make("ACL2", "DEFWARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC"));
        imports.add(Acl2Symbol.make("ACL2", "DEFXDOC-RAW"));
        imports.add(Acl2Symbol.make("SET", "DELETE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-FILE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR"));
        imports.add(Acl2Symbol.make("ACL2", "DELETE-INCLUDE-BOOK-DIR!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DELETE-PACKAGE"));
        imports.add(Acl2Symbol.DENOMINATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "DEPOSIT-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESCRIBE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DESTRUCTURING-BIND"));
        imports.add(Acl2Symbol.make("SET", "DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "DIGIT-TO-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "DIMENSIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIRECTORY-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "DISABLEDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DISASSEMBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DISASSEMBLE$"));
        imports.add(Acl2Symbol.make("ACL2", "DISTRIBUTIVITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DIVISION-BY-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-START"));
        imports.add(Acl2Symbol.make("ACL2", "DMR-STOP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO"));
        imports.add(Acl2Symbol.make("ACL2", "DO$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-EXTERNAL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DO-SYMBOLS"));
        imports.add(Acl2Symbol.make("ACL2", "DOC"));
        imports.add(Acl2Symbol.make("ACL2", "DOC!"));
        imports.add(Acl2Symbol.make("ACL2", "DOCS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOCUMENTATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOLIST"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-APPLY$-USERFN"));
        imports.add(Acl2Symbol.make("ACL2", "DOPPELGANGER-BADGE-USERFN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOTIMES"));
        imports.add(Acl2Symbol.make("SET", "DOUBLE-CONTAINMENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DOUBLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLE-REWRITE"));
        imports.add(Acl2Symbol.make("ACL2", "DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DPB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DRIBBLE"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR"));
        imports.add(Acl2Symbol.make("ACL2", "DUMB-OCCUR-VAR"));
        imports.add(Acl2Symbol.make("ACL2", "DUPLICATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "DYNAMIC-EXTENT"));
        imports.add(Acl2Symbol.make("ACL2", "E/D"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORD-<"));
        imports.add(Acl2Symbol.make("ACL2", "E0-ORDINALP"));
        imports.add(Acl2Symbol.make("ACL2", "EC-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ECHO-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EIGHTH"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-DESTRUCTORS"));
        imports.add(Acl2Symbol.make("ACL2", "ELIMINATE-IRRELEVANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ELT"));
        imports.add(Acl2Symbol.make("SET", "EMPTY"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-FORCING"));
        imports.add(Acl2Symbol.make("ACL2", "ENABLE-IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "ENCAPSULATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENCODE-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "END-OF-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENOUGH-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-DIRECTORIES-EXIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ENSURE-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQL"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP"));
        imports.add(Acl2Symbol.make("ACL2", "EQLABLEP-RECOG"));
        imports.add(Acl2Symbol.EQUAL);
        imports.add(Acl2Symbol.make("ACL2", "EQUAL-CHAR-CODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EQUALP"));
        imports.add(Acl2Symbol.make("ACL2", "ER"));
        imports.add(Acl2Symbol.make("ACL2", "ER-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN-FN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-PROGN@PAR"));
        imports.add(Acl2Symbol.make("ACL2", "ER-SOFT-LOGIC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ETYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "EV$"));
        imports.add(Acl2Symbol.make("ACL2", "EV$-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVAL-WHEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVENP"));
        imports.add(Acl2Symbol.make("ACL2", "EVENS"));
        imports.add(Acl2Symbol.make("ACL2", "EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EVERY"));
        imports.add(Acl2Symbol.make("ACL2", "EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXECUTABLE-COUNTERPART-THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "EXISTS"));
        imports.add(Acl2Symbol.make("ACL2", "EXIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXP"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-ATOM"));
        imports.add(Acl2Symbol.make("ACL2", "EXPLODE-NONNEGATIVE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-PE-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "EXTEND-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "EXTENDED-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "EXTRA-INFO"));
        imports.add(Acl2Symbol.make("ACL2", "F-BOUNDP-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "F-PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-CLEAN!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FORK!"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-FREE-ON-EXIT"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-LEN"));
        imports.add(Acl2Symbol.make("ACL2", "FAST-ALIST-SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FBOUNDP"));
        imports.add(Acl2Symbol.make("ACL2", "FC-REPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FCEILING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FDEFINITION"));
        imports.add(Acl2Symbol.make("ACL2", "FERTILIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FFLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIFTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-AUTHOR"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-CLOCK-P-FORWARD-TO-INTEGERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-ERROR-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-LENGTH$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-NAMESTRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-POSITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-STRING-LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILE-WRITE-DATE"));
        imports.add(Acl2Symbol.make("ACL2", "FILE-WRITE-DATE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FILL-POINTER"));
        imports.add(Acl2Symbol.make("ACL2", "FINALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-ALL-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIND-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FINISH-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIRST"));
        imports.add(Acl2Symbol.make("ACL2", "FIRST-N-AC"));
        imports.add(Acl2Symbol.make("ACL2", "FIX"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-PKG"));
        imports.add(Acl2Symbol.make("ACL2", "FIX-TRUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-DIGITS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-PRECISION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-RADIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOAT-SIGN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INEXACT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-INVALID-OPERATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-OVERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATING-POINT-UNDERFLOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FLOOR"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-COMPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "FLUSH-HONS-GET-HASH-TABLE-LINK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FMAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "FMS"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!"));
        imports.add(Acl2Symbol.make("ACL2", "FMS!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMS-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW!+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-COMMENT-WINDOW+"));
        imports.add(Acl2Symbol.make("ACL2", "FMT-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1!-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMT1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "FMX"));
        imports.add(Acl2Symbol.make("ACL2", "FMX!-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FMX-CW"));
        imports.add(Acl2Symbol.make("ACL2", "FN-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "FNCALL-TERM"));
        imports.add(Acl2Symbol.make("ACL2", "FORALL"));
        imports.add(Acl2Symbol.make("ACL2", "FORCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORCE-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "FORMALS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FORMATTER"));
        imports.add(Acl2Symbol.make("ACL2", "FORMULA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FOURTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FRESH-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTRUNCATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FTYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTION-LAMBDA-EXPRESSION"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "FUNCTION-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "GC$"));
        imports.add(Acl2Symbol.make("ACL2", "GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "GC-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GCD"));
        imports.add(Acl2Symbol.make("ACL2", "GCS"));
        imports.add(Acl2Symbol.make("ACL2", "GENERALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENSYM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GENTEMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET"));
        imports.add(Acl2Symbol.make("ACL2", "GET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "GET-COMMAND-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DECODED-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-DEFUN-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "GET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "GET-EVENT-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "GET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-REAL-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-INTERNAL-RUN-TIME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-OUTPUT-STREAM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "GET-OUTPUT-STREAM-STRING$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-PROPERTIES"));
        imports.add(Acl2Symbol.make("ACL2", "GET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-SETF-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "GET-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GET-UNIVERSAL-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "GET-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "GETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GETHASH"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROP-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPC"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "GETPROPS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-TABLE-CARS1"));
        imports.add(Acl2Symbol.make("ACL2", "GLOBAL-VAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GO"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-ATOM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "GOOD-BYE"));
        imports.add(Acl2Symbol.make("ACL2", "GRANULARITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "GRAPHIC-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "GROUND-ZERO"));
        imports.add(Acl2Symbol.make("ACL2", "GTHM"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-OBLIGATION"));
        imports.add(Acl2Symbol.make("ACL2", "GUARD-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HANDLER-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "HARD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP"));
        imports.add(Acl2Symbol.make("ACL2", "HAS-PROPSP1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-COUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-REHASH-THRESHOLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-SIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HASH-TABLE-TEST"));
        imports.add(Acl2Symbol.make("SET", "HEAD"));
        imports.add(Acl2Symbol.make("ACL2", "HEADER"));
        imports.add(Acl2Symbol.make("ACL2", "HELP"));
        imports.add(Acl2Symbol.make("ACL2", "HIDE"));
        imports.add(Acl2Symbol.make("ACL2", "HIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ACONS!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-CLEAR!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-COPY-PERSISTENT"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-EQUAL-LITE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-GET"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-RESIZE-FN"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SHRINK-ALIST!"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH"));
        imports.add(Acl2Symbol.make("ACL2", "HONS-WASH!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "HOST-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "I-AM-HERE"));
        imports.add(Acl2Symbol.make("ACL2", "I-CLOSE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LARGE"));
        imports.add(Acl2Symbol.make("ACL2", "I-LIMITED"));
        imports.add(Acl2Symbol.make("ACL2", "I-SMALL"));
        imports.add(Acl2Symbol.make("ACL2", "ID"));
        imports.add(Acl2Symbol.make("ACL2", "IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IDENTITY"));
        imports.add(Acl2Symbol.IF);
        imports.add(Acl2Symbol.make("ACL2", "IF*"));
        imports.add(Acl2Symbol.make("ACL2", "IFF"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-1"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-IMPLIES-2"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IMPLIES-EQUAL-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "IFF-IS-AN-EQUIVALENCE"));
        imports.add(Acl2Symbol.make("ACL2", "IFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IGNORE-ERRORS"));
        imports.add(Acl2Symbol.make("ACL2", "ILLEGAL"));
        imports.add(Acl2Symbol.IMAGPART);
        imports.add(Acl2Symbol.make("ACL2", "IMAGPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "IMMEDIATE-FORCE-MODEP"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLIES"));
        imports.add(Acl2Symbol.make("ACL2", "IMPLODE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IMPORT"));
        imports.add(Acl2Symbol.make("ACL2", "IMPROPER-CONSP"));
        imports.add(Acl2Symbol.make("SET", "IN"));
        imports.add(Acl2Symbol.make("ACL2", "IN-ARITHMETIC-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "IN-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "IN-TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "IN-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INCF"));
        imports.add(Acl2Symbol.make("ACL2", "INCLUDE-BOOK"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE"));
        imports.add(Acl2Symbol.make("ACL2", "INCOMPATIBLE!"));
        imports.add(Acl2Symbol.make("ACL2", "INCREMENT-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCT"));
        imports.add(Acl2Symbol.make("ACL2", "INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "INITIALIZE-EVENT-USER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("SET", "INSERT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INSPECT"));
        imports.add(Acl2Symbol.make("ACL2", "INT="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-0"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-1"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-ABS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-DECODE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-IMPLIES-RATIONAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTEGER-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-RANGE-P"));
        imports.add(Acl2Symbol.make("ACL2", "INTEGER-STEP"));
        imports.add(Acl2Symbol.INTEGERP);
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERACTIVE-STREAM-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERN"));
        imports.add(Acl2Symbol.make("ACL2", "INTERN$"));
        imports.add(Acl2Symbol.INTERN_IN_PACKAGE_OF_SYMBOL);
        imports.add(Acl2Symbol.make("ACL2", "INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERNAL-TIME-UNITS-PER-SECOND"));
        imports.add(Acl2Symbol.make("SET", "INTERSECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INTERSECTION"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION$"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "INTERSECTP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVALID-METHOD-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-*"));
        imports.add(Acl2Symbol.make("ACL2", "INVERSE-OF-+"));
        imports.add(Acl2Symbol.make("ACL2", "INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-DEBUGGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "INVOKE-RESTART-INTERACTIVELY"));
        imports.add(Acl2Symbol.make("ACL2", "IRRELEVANT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ISQRT"));
        imports.add(Acl2Symbol.make("ACL2", "JUSTIFICATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-PACKAGE"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-ASSOC-KEYWORD"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "KEYWORDP"));
        imports.add(Acl2Symbol.make("ACL2", "KEYWORDP-FORWARD-TO-SYMBOLP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE"));
        imports.add(Acl2Symbol.make("ACL2", "KWOTE-LST"));
        imports.add(Acl2Symbol.make("ACL2", "L<"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LABELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA"));
        imports.add(Acl2Symbol.make("ACL2", "LAMBDA$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-LIST-KEYWORDS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAMBDA-PARAMETERS-LIMIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LAST"));
        imports.add(Acl2Symbol.make("ACL2", "LAST-PROVER-STEPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LCM"));
        imports.add(Acl2Symbol.make("ACL2", "LD"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-ERROR-TRIPLES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "LD-MISSING-INPUT-OK"));
        imports.add(Acl2Symbol.make("ACL2", "LD-POST-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-FILTER"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PRE-EVAL-PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "LD-QUERY-CONTROL-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "LD-VERBOSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDB-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LDIFF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LEAST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "LEGAL-CASE-CLAUSESP"));
        imports.add(Acl2Symbol.LEN);
        imports.add(Acl2Symbol.make("ACL2", "LEN-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LENGTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LET*"));
        imports.add(Acl2Symbol.make("ACL2", "LET-MBE"));
        imports.add(Acl2Symbol.make("ACL2", "LEX-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "LEXORDER"));
        imports.add(Acl2Symbol.make("ACL2", "LEXP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISP-IMPLEMENTATION-VERSION"));
        imports.add(Acl2Symbol.LIST);
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST*"));
        imports.add(Acl2Symbol.make("ACL2", "LIST*-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-ALL-PACKAGES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LIST-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "LIST-MACRO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTEN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LNFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOAD-TIME-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "LOCAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOCALLY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGANDC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGBITP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGCOUNT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGEQV"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNS-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-FNSP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "LOGIC-TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGICAL-PATHNAME-TRANSLATIONS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGIOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGNOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGORC2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGTEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOGXOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LONG-SITE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP"));
        imports.add(Acl2Symbol.make("ACL2", "LOOP$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "LOOP-FINISH"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-CHAR-DOWNCASE"));
        imports.add(Acl2Symbol.make("ACL2", "LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "LOWEST-TERMS"));
        imports.add(Acl2Symbol.make("ACL2", "LP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACHINE-VERSION"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "MACRO-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACRO-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROEXPAND-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MACROLET"));
        imports.add(Acl2Symbol.make("ACL2", "MAGIC-EV-FNCALL"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "MAIN-TIMER-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-BROADCAST-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONCATENATED-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-ECHO-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-EVENT"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-FMT-BINDINGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-HASH-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-INSTANCES-OBSOLETE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-LIST-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-LOAD-FORM-SAVING-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-MV-NTHS"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-ORD"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-STRING-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-SUMMARY-DATA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-TAU-INTERVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKE-TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-VAR-LST1"));
        imports.add(Acl2Symbol.make("ACL2", "MAKE-WORMHOLE-STATUS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAKUNBOUND"));
        imports.add(Acl2Symbol.make("ACL2", "MAKUNBOUND-GLOBAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAP-INTO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPCON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAPLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MASK-FIELD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MAX"));
        imports.add(Acl2Symbol.make("ACL2", "MAXIMUM-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "MAY-NEED-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "MAYBE-FLUSH-AND-COMPRESS1"));
        imports.add(Acl2Symbol.make("ACL2", "MBE"));
        imports.add(Acl2Symbol.make("ACL2", "MBT"));
        imports.add(Acl2Symbol.make("ACL2", "MBT*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MEMBER-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "MEMBER-SYMBOL-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-PARTIAL"));
        imports.add(Acl2Symbol.make("ACL2", "MEMOIZE-SUMMARY"));
        imports.add(Acl2Symbol.make("ACL2", "MEMSUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MERGE-PATHNAMES"));
        imports.add(Acl2Symbol.make("SET", "MERGESORT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-CONTEXTUAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-GLOBAL-FACT+"));
        imports.add(Acl2Symbol.make("ACL2", "META-EXTRACT-RW+-TERM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-COMBINATION-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "METHOD-QUALIFIERS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-ANCESTORS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-AP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-CLAUSE"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RDEPTH"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RELIEVE-HYP"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-RW+"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TS"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-TYPE-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-UNIFY-SUBST"));
        imports.add(Acl2Symbol.make("ACL2", "MFC-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MIN"));
        imports.add(Acl2Symbol.make("ACL2", "MINIMAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MINUSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MISMATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOD"));
        imports.add(Acl2Symbol.make("ACL2", "MOD-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "MONITOR!"));
        imports.add(Acl2Symbol.make("ACL2", "MONITORED-RUNES"));
        imports.add(Acl2Symbol.make("ACL2", "MORE"));
        imports.add(Acl2Symbol.make("ACL2", "MORE!"));
        imports.add(Acl2Symbol.make("ACL2", "MORE-DOC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-NEGATIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-DOUBLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-FIXNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-LONG-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MOST-POSITIVE-SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("ACL2", "MSG"));
        imports.add(Acl2Symbol.make("ACL2", "MSGP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MUFFLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-CALL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUE-SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "MULTIPLE-VALUES-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "MUST-BE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION"));
        imports.add(Acl2Symbol.make("ACL2", "MUTUAL-RECURSION-GUARDP"));
        imports.add(Acl2Symbol.make("ACL2", "MV"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LET"));
        imports.add(Acl2Symbol.make("ACL2", "MV-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "MV-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "MV?"));
        imports.add(Acl2Symbol.make("ACL2", "MV?-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAME-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "NAT-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "NATP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NBUTLAST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NCONC"));
        imports.add(Acl2Symbol.make("ACL2", "NEAR-MISSES"));
        imports.add(Acl2Symbol.make("ACL2", "NEEDS-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "NEVER-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NEXT-METHOD-P"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX"));
        imports.add(Acl2Symbol.make("ACL2", "NFIX-LIST"));
        imports.add(Acl2Symbol.NIL);
        imports.add(Acl2Symbol.make("ACL2", "NIL-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTERSECTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NINTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-APPLICABLE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "NO-DUPLICATESP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NO-NEXT-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "NON-EXEC"));
        imports.add(Acl2Symbol.NONNEGATIVE_INTEGER_QUOTIENT);
        imports.add(Acl2Symbol.make("ACL2", "NONNEGATIVE-PRODUCT"));
        imports.add(Acl2Symbol.make("ACL2", "NONZERO-IMAGPART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTANY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTEVERY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NOTINLINE"));
        imports.add(Acl2Symbol.make("ACL2", "NQTHM-TO-ACL2"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NRECONC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NREVERSE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-DOWNCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSTRING-UPCASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBLIS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NSUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-CONS"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ADD1"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "NTH-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTH-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NTHCDR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NULL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBER"));
        imports.add(Acl2Symbol.make("ACL2", "NUMBER-SUBTREES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUMBERP"));
        imports.add(Acl2Symbol.NUMERATOR);
        imports.add(Acl2Symbol.make("COMMON-LISP", "NUNION"));
        imports.add(Acl2Symbol.make("ACL2", "O-FINP"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-COEFF"));
        imports.add(Acl2Symbol.make("ACL2", "O-FIRST-EXPT"));
        imports.add(Acl2Symbol.make("ACL2", "O-INFP"));
        imports.add(Acl2Symbol.make("ACL2", "O-P"));
        imports.add(Acl2Symbol.make("ACL2", "O-RST"));
        imports.add(Acl2Symbol.make("ACL2", "O<"));
        imports.add(Acl2Symbol.make("ACL2", "O<="));
        imports.add(Acl2Symbol.make("ACL2", "O>"));
        imports.add(Acl2Symbol.make("ACL2", "O>="));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION"));
        imports.add(Acl2Symbol.make("ACL2", "OBSERVATION-CW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ODDP"));
        imports.add(Acl2Symbol.make("ACL2", "ODDS"));
        imports.add(Acl2Symbol.make("ACL2", "OK-IF"));
        imports.add(Acl2Symbol.make("ACL2", "OOPS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-CHANNELS-P-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL!"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-ANY-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNEL-P1"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPEN-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OPEN-TRACE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OPTIMIZE"));
        imports.add(Acl2Symbol.OR);
        imports.add(Acl2Symbol.make("ACL2", "OR-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-GETPROPS"));
        imports.add(Acl2Symbol.make("ACL2", "ORDERED-SYMBOL-ALISTP-REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OTHERWISE"));
        imports.add(Acl2Symbol.make("ACL2", "OUR-DIGIT-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "OUTPUT-STREAM-P"));
        imports.add(Acl2Symbol.make("ACL2", "OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "P!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-ERROR-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-NICKNAMES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-SHADOWING-SYMBOLS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGE-USED-BY-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PACKAGEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PAIRLIS"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS$"));
        imports.add(Acl2Symbol.make("ACL2", "PAIRLIS2"));
        imports.add(Acl2Symbol.make("ACL2", "PAND"));
        imports.add(Acl2Symbol.make("ACL2", "PARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-INTEGER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PARSE-NAMESTRING"));
        imports.add(Acl2Symbol.make("ACL2", "PARTIAL-ENCAPSULATE"));
        imports.add(Acl2Symbol.make("ACL2", "PARTITION-REST-AND-KEYWORD-ARGS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DEVICE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-DIRECTORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-HOST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-MATCH-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-NAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAME-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PATHNAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "PBT"));
        imports.add(Acl2Symbol.make("ACL2", "PC"));
        imports.add(Acl2Symbol.make("ACL2", "PCB"));
        imports.add(Acl2Symbol.make("ACL2", "PCB!"));
        imports.add(Acl2Symbol.make("ACL2", "PCS"));
        imports.add(Acl2Symbol.make("ACL2", "PE"));
        imports.add(Acl2Symbol.make("ACL2", "PE!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PEEK-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "PEEK-CHAR$"));
        imports.add(Acl2Symbol.make("ACL2", "PF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PHASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PI"));
        imports.add(Acl2Symbol.make("SET", "PICK-A-POINT-SUBSET-STRATEGY"));
        imports.add(Acl2Symbol.PKG_IMPORTS);
        imports.add(Acl2Symbol.PKG_WITNESS);
        imports.add(Acl2Symbol.make("ACL2", "PL"));
        imports.add(Acl2Symbol.make("ACL2", "PL2"));
        imports.add(Acl2Symbol.make("ACL2", "PLET"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP"));
        imports.add(Acl2Symbol.make("ACL2", "PLIST-WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PLUSP"));
        imports.add(Acl2Symbol.make("ACL2", "POINTERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POP"));
        imports.add(Acl2Symbol.make("ACL2", "POP-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "POR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQ-AC"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "POSITION-EQUAL-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "POSITION-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "POSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "POSP"));
        imports.add(Acl2Symbol.make("ACL2", "POWER-EVAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-EXIT-IF-LIST-EXHAUSTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-FILL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-INDENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LINEAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-LOGICAL-BLOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-NEWLINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TAB"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PPRINT-TABULAR"));
        imports.add(Acl2Symbol.make("ACL2", "PPROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PR"));
        imports.add(Acl2Symbol.make("ACL2", "PR!"));
        imports.add(Acl2Symbol.make("ACL2", "PREPROCESS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRIN1-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES"));
        imports.add(Acl2Symbol.make("ACL2", "PRIN1-WITH-SLASHES1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC"));
        imports.add(Acl2Symbol.make("ACL2", "PRINC$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINC-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-BASE-P"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-CL-CACHE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-GV"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-NOT-READABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$+"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-FN"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-OBJECT$-PRESERVING-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-RATIONAL-AS-DECIMAL"));
        imports.add(Acl2Symbol.make("ACL2", "PRINT-TIMER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PRINT-UNREADABLE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROBE-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROCLAIM"));
        imports.add(Acl2Symbol.make("ACL2", "PROFILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROG2"));
        imports.add(Acl2Symbol.make("ACL2", "PROG2$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGN"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN!"));
        imports.add(Acl2Symbol.make("ACL2", "PROGN$"));
        imports.add(Acl2Symbol.make("ACL2", "PROGRAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGRAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROGV"));
        imports.add(Acl2Symbol.make("ACL2", "PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "PROOFS-CO"));
        imports.add(Acl2Symbol.make("ACL2", "PROPER-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "PROPS"));
        imports.add(Acl2Symbol.make("ACL2", "PROVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PROVIDE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PSETQ"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "PSEUDO-TERMP"));
        imports.add(Acl2Symbol.make("ACL2", "PSO"));
        imports.add(Acl2Symbol.make("ACL2", "PSO!"));
        imports.add(Acl2Symbol.make("ACL2", "PSOF"));
        imports.add(Acl2Symbol.make("ACL2", "PSOG"));
        imports.add(Acl2Symbol.make("ACL2", "PSPV"));
        imports.add(Acl2Symbol.make("ACL2", "PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF"));
        imports.add(Acl2Symbol.make("ACL2", "PUFF*"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSH"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "PUSH-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "PUSHNEW"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUT-GLOBAL"));
        imports.add(Acl2Symbol.make("ACL2", "PUTPROP"));
        imports.add(Acl2Symbol.make("ACL2", "QUICK-AND-DIRTY-SUBSUMPTION-REPLACEMENT-STEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "QUOTE"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTEP"));
        imports.add(Acl2Symbol.make("ACL2", "QUOTE\176"));
        imports.add(Acl2Symbol.make("ACL2", "R-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "R-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM"));
        imports.add(Acl2Symbol.make("ACL2", "RANDOM$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RANDOM-STATE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "RASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RASSOC-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONAL"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES1"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-IMPLIES2"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RATIONALIZE"));
        imports.add(Acl2Symbol.RATIONALP);
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-*"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-+"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-EXPT-TYPE-PRESCRIPTION"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-IMPLIES-ACL2-NUMBERP"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY--"));
        imports.add(Acl2Symbol.make("ACL2", "RATIONALP-UNARY-/"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "READ-CHAR$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-CHAR-NO-HANG"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-DELIMITED-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-INTO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READ-FILES-P-FORWARD-TO-READ-FILE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "READ-IDATE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-LINE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-SUPPRESS"));
        imports.add(Acl2Symbol.make("ACL2", "READ-OBJECT-WITH-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-PRESERVING-WHITESPACE"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME"));
        imports.add(Acl2Symbol.make("ACL2", "READ-RUN-TIME-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READ-SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READER-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLE-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "READTABLEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REAL"));
        imports.add(Acl2Symbol.make("ACL2", "REAL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "REAL/RATIONALP"));
        imports.add(Acl2Symbol.make("ACL2", "REALFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REALP"));
        imports.add(Acl2Symbol.REALPART);
        imports.add(Acl2Symbol.make("ACL2", "REALPART-COMPLEX"));
        imports.add(Acl2Symbol.make("ACL2", "REALPART-IMAGPART-ELIM"));
        imports.add(Acl2Symbol.make("ACL2", "REBUILD"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF!"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF+"));
        imports.add(Acl2Symbol.make("ACL2", "REDEF-"));
        imports.add(Acl2Symbol.make("ACL2", "REDO-FLAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REDUCE"));
        imports.add(Acl2Symbol.make("ACL2", "REGENERATE-TAU-DATABASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REINITIALIZE-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-BINOP"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-CUSTOM-KEYWORD-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-DUPLICATES"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-DUPLICATES-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-EQUAL-WITH-HINT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-GUARD-HOLDERS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-IF-NOT"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-INVISIBLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-MACRO-FN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMOVE-METHOD"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-NTH-ALIAS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE-UNTOUCHABLE"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "REMOVE1-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REMPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RENAME-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REPLACE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REQUIRE"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-FC-REPORTING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-KILL-RING"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-LD-SPECIALS"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "RESET-PRINT-CONTROL"));
        imports.add(Acl2Symbol.make("ACL2", "RESIZE-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-BIND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-CASE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RESTART-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "RESTORE-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "RETRACT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "RETRIEVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RETURN-FROM"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST"));
        imports.add(Acl2Symbol.make("ACL2", "RETURN-LAST-TABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVAPPEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "REVERSE"));
        imports.add(Acl2Symbol.make("ACL2", "REVERT-WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-QUOTED-CONSTANT"));
        imports.add(Acl2Symbol.make("ACL2", "REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "RFIX"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROOM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROTATEF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ROW-MAJOR-AREF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACA"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "RPLACD"));
        imports.add(Acl2Symbol.make("ACL2", "RW-CACHE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SAFETY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SATISFIES"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-AND-CLEAR-MEMOIZATION-SETTINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SAVE-EXEC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SBIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCALE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SCHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEARCH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SECOND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEQUENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-READ"));
        imports.add(Acl2Symbol.make("ACL2", "SERIALIZE-WRITE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SERIOUS-CONDITION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ABSSTOBJ-DEBUG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BAD-LISP-CONSP-MEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BODY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-DEFUN-HINTS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MEASURE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BOGUS-MUTUAL-RECURSION-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CASE-SPLIT-LIMITATIONS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CBD"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECK-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-CHECKPOINT-SUMMARY-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-COMPILER-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEBUGGER-ENABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-BACKCHAIN-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFAULT-PARENTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DEFERRED-TTAG-NOTES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DIFFERENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE$"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DIFFERENCE-THEORIES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-DISPATCH-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-DUPLICATE-KEYS-ACTION!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-ENFORCE-REDUNDANCY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EQUALP-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-EXCLUSIVE-OR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FC-REPORT-ON-THE-FLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-HARD-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-FMT-SOFT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GAG-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GC-STRATEGY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-GUARD-MSG"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IGNORE-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IN-THEORY-REDUNDANT-OKP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INDUCTION-DEPTH-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-OUTPUT-LST"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBIT-WARNINGS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INHIBITED-SUMMARY-TYPES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-INVISIBLE-FNS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IPRINT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-IRRELEVANT-FORMALS-OK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-KEYWORD-ALIASES!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-PROMPT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-REDEFINITION-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LD-SKIP-PROOFSP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-LET*-ABSTRACTIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-MACRO-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-DEFAULT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MATCH-FREE-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-MEASURE-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-NON-LINEARP"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-OVERRIDE-HINTS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PARALLEL-EXECUTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-PPRINT-DISPATCH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-BASE-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CASE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CIRCLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-CLAUSE-IDS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-ESCAPE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-GV-DEFAULTS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LEVEL"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-LINES"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RADIX"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-READABLY"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PRINT-RIGHT-MARGIN"));
        imports.add(Acl2Symbol.make("ACL2", "SET-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-MODE-ON!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-PROOF-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RAW-WARNING-FORMAT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REGISTER-INVARIANT-RISK"));
        imports.add(Acl2Symbol.make("ACL2", "SET-REWRITE-STACK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RULER-EXTENDERS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-RW-CACHE-STATE!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SERIALIZE-CHARACTER-SYSTEM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SKIP-META-TERMP-CHECKS!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SLOW-ALIST-ACTION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-STATE-OK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SET-SYNTAX-FROM-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TAU-AUTO-MODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-FNS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TEMP-TOUCHABLE-VARS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TOTAL-PARALLELISM-WORK-LIMIT-ERROR"));
        imports.add(Acl2Symbol.make("ACL2", "SET-TRACE-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-VERIFY-GUARDS-EAGERNESS"));
        imports.add(Acl2Symbol.make("ACL2", "SET-W"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PARALLELISM-HACKS-ENABLED!"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WELL-FOUNDED-RELATION"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "SET-WRITE-ACL2X"));
        imports.add(Acl2Symbol.make("ACL2", "SETENV$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETF"));
        imports.add(Acl2Symbol.make("SET", "SETP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SETQ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SEVENTH"));
        imports.add(Acl2Symbol.make("SET", "SFIX"));
        imports.add(Acl2Symbol.make("ACL2", "SGETPROP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHADOWING-IMPORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHARED-INITIALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHIFTF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SHORT-SITE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-ACCUMULATED-PERSISTENCE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BDD"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BODIES"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-BRR-EVISC-TUPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-CUSTOM-KEYWORD-HINT-EXPANSION"));
        imports.add(Acl2Symbol.make("ACL2", "SHOW-FC-CRITERIA"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "SHRINK-T-STACK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "SIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIGNUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ARRAY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BASE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-BIT-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-ARGUMENTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-CONDITION-FORMAT-CONTROL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-STRING-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-VECTOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIMPLE-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "SIMPLIFY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINGLE-FLOAT-NEGATIVE-EPSILON"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SINH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SIXTH"));
        imports.add(Acl2Symbol.make("ACL2", "SKIP-PROOFS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLEEP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-BOUNDP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-EXISTS-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MAKUNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-MISSING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-UNBOUND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SLOT-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOFTWARE-VERSION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SOME"));
        imports.add(Acl2Symbol.make("ACL2", "SOME-SLASHABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SORT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPACE"));
        imports.add(Acl2Symbol.make("ACL2", "SPEC-MV-LET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPECIAL-OPERATOR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SPEED"));
        imports.add(Acl2Symbol.make("ACL2", "SPLITTER-OUTPUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SQRT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STABLE-SORT"));
        imports.add(Acl2Symbol.make("ACL2", "STABLE-UNDER-SIMPLIFICATIONP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-APPEND"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CHAR-P"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P+"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CHAR-P-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-CO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-GENERIC-FUNCTION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-METHOD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STANDARD-OBJECT"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-OI"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-PART"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "STANDARDP"));
        imports.add(Acl2Symbol.make("ACL2", "START-PROOF-TREE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-CLEANUP"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-GET-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-GLOBAL-LET*-PUT-GLOBALS"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-FORWARD"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-MAIN-TIMER"));
        imports.add(Acl2Symbol.make("ACL2", "STATE-P1-UPDATE-NTH-2-WORLD"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STEP"));
        imports.add(Acl2Symbol.make("ACL2", "STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-LET"));
        imports.add(Acl2Symbol.make("ACL2", "STOBJ-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "STOP-PROOF-TREE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORAGE-CONDITION"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STORE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-ERROR-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAM-EXTERNAL-FORMAT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STREAMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING"));
        imports.add(Acl2Symbol.STRING_APPEND);
        imports.add(Acl2Symbol.make("ACL2", "STRING-APPEND-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-CAPITALIZE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-EQUAL1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-GREATERP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-IS-NOT-CIRCULAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LEFT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-LESSP"));
        imports.add(Acl2Symbol.make("ACL2", "STRING-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-GREATERP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-NOT-LESSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-RIGHT-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING-TRIM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING/="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "STRING<-L-TRICHOTOMY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING<="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING="));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRING>="));
        imports.add(Acl2Symbol.STRINGP);
        imports.add(Acl2Symbol.make("ACL2", "STRINGP-SYMBOL-PACKAGE-NAME"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CARS"));
        imports.add(Acl2Symbol.make("ACL2", "STRIP-CDRS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STRUCTURE-OBJECT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "STYLE-WARNING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBLIS"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-LST-SIMPLE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBLIS-FN-SIMPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSEQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQ-LIST"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSEQUENCEP"));
        imports.add(Acl2Symbol.make("SET", "SUBSET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSETP"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSETP-EQUAL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBST-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE"));
        imports.add(Acl2Symbol.make("ACL2", "SUBSTITUTE-AC"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBSTITUTE-IF-NOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SUBTYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "SUITABLY-TAMEP-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$"));
        imports.add(Acl2Symbol.make("ACL2", "SUM$+"));
        imports.add(Acl2Symbol.make("ACL2", "SUMMARY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SVREF"));
        imports.add(Acl2Symbol.make("ACL2", "SWAP-STOBJS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SXHASH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-DOUBLET-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-EQUALITY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-MACROLET"));
        imports.add(Acl2Symbol.SYMBOL_NAME);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL-NAME-LST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PACKAGE"));
        imports.add(Acl2Symbol.SYMBOL_PACKAGE_NAME);
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-PLIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYMBOL-VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-ASYMMETRIC"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-IRREFLEXIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRANSITIVE"));
        imports.add(Acl2Symbol.make("ACL2", "SYMBOL<-TRICHOTOMY"));
        imports.add(Acl2Symbol.SYMBOLP);
        imports.add(Acl2Symbol.make("ACL2", "SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "SYNONYM-STREAM-SYMBOL"));
        imports.add(Acl2Symbol.make("ACL2", "SYNP"));
        imports.add(Acl2Symbol.make("ACL2", "SYNTAXP"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL*"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL+"));
        imports.add(Acl2Symbol.make("ACL2", "SYS-CALL-STATUS"));
        imports.add(Acl2Symbol.T);
        imports.add(Acl2Symbol.make("ACL2", "T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH"));
        imports.add(Acl2Symbol.make("ACL2", "T-STACK-LENGTH1"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "TABLE-ALIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAGBODY"));
        imports.add(Acl2Symbol.make("SET", "TAIL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAILP"));
        imports.add(Acl2Symbol.make("ACL2", "TAKE"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-FUNCTIONP"));
        imports.add(Acl2Symbol.make("ACL2", "TAMEP-LAMBDAP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TAN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TANH"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-DATABASE"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-DOM"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-HI-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVAL-LO-REL"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-INTERVALP"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-STATUS"));
        imports.add(Acl2Symbol.make("ACL2", "TAU-SYSTEM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TENTH"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TERM-ORDER"));
        imports.add(Acl2Symbol.make("ACL2", "TERMINATION-THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "TERMP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TERPRI"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THE"));
        imports.add(Acl2Symbol.make("ACL2", "THE-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM"));
        imports.add(Acl2Symbol.make("ACL2", "THE-FIXNUM!"));
        imports.add(Acl2Symbol.make("ACL2", "THEOREM"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY"));
        imports.add(Acl2Symbol.make("ACL2", "THEORY-INVARIANT"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$"));
        imports.add(Acl2Symbol.make("ACL2", "THEREIS$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THIRD"));
        imports.add(Acl2Symbol.make("ACL2", "THM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "THROW"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TIME"));
        imports.add(Acl2Symbol.make("ACL2", "TIME$"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER"));
        imports.add(Acl2Symbol.make("ACL2", "TIME-TRACKER-TAU"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-INHIBIT-WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "TOGGLE-PC-MACRO"));
        imports.add(Acl2Symbol.make("ACL2", "TOP"));
        imports.add(Acl2Symbol.make("ACL2", "TOP-LEVEL"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRACE"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE!"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "TRACE*"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS!"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-DEFAULT-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS-EVAL-NO-WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "TRANS1"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLAM"));
        imports.add(Acl2Symbol.make("ACL2", "TRANSLATE-AND-TEST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-LOGICAL-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRANSLATE-PATHNAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TREE-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRICHOTOMY"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-FIX"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P"));
        imports.add(Acl2Symbol.make("ACL2", "TRUE-LISTP-UPDATE-NTH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUENAME"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TRUNCATE"));
        imports.add(Acl2Symbol.make("ACL2", "TTAG"));
        imports.add(Acl2Symbol.make("ACL2", "TTAGS-SEEN"));
        imports.add(Acl2Symbol.make("ACL2", "TTHM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-INPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TWO-WAY-STREAM-OUTPUT-STREAM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-DATUM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-ERROR-EXPECTED-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPE-OF"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPECASE"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "TYPEP"));
        imports.add(Acl2Symbol.make("ACL2", "TYPESPEC-CHECK"));
        imports.add(Acl2Symbol.make("ACL2", "U"));
        imports.add(Acl2Symbol.make("ACL2", "UBT"));
        imports.add(Acl2Symbol.make("ACL2", "UBT!"));
        imports.add(Acl2Symbol.make("ACL2", "UBT-PREHISTORY"));
        imports.add(Acl2Symbol.make("ACL2", "UBT?"));
        imports.add(Acl2Symbol.make("ACL2", "UBU"));
        imports.add(Acl2Symbol.make("ACL2", "UBU!"));
        imports.add(Acl2Symbol.make("ACL2", "UBU?"));
        imports.add(Acl2Symbol.UNARY_MINUS);
        imports.add(Acl2Symbol.UNARY_SLASH);
        imports.add(Acl2Symbol.make("ACL2", "UNARY-FUNCTION-SYMBOL-LISTP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-SLOT-INSTANCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNBOUND-VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNDEFINED-FUNCTION"));
        imports.add(Acl2Symbol.make("ACL2", "UNDOCUMENTED"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNEXPORT"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-0"));
        imports.add(Acl2Symbol.make("ACL2", "UNICITY-OF-1"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNINTERN"));
        imports.add(Acl2Symbol.make("SET", "UNION"));
        imports.add(Acl2Symbol.make("ACL2", "UNION$"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQ"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-EQUAL"));
        imports.add(Acl2Symbol.make("ACL2", "UNION-THEORIES"));
        imports.add(Acl2Symbol.make("ACL2", "UNIVERSAL-THEORY"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNLESS"));
        imports.add(Acl2Symbol.make("ACL2", "UNMEMOIZE"));
        imports.add(Acl2Symbol.make("ACL2", "UNMONITOR"));
        imports.add(Acl2Symbol.make("ACL2", "UNQUOTE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNREAD-CHAR"));
        imports.add(Acl2Symbol.make("ACL2", "UNSAVE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNSIGNED-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "UNSIGNED-BYTE-P"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTIL$+"));
        imports.add(Acl2Symbol.make("ACL2", "UNTOUCHABLE-MARKER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNTRACE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRACE$"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANS-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATE"));
        imports.add(Acl2Symbol.make("ACL2", "UNTRANSLATED-THEOREM"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNUSE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UNWIND-PROTECT"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-32-BIT-INTEGER-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-BIG-CLOCK-ENTRY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-FILE-CLOCK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-GLOBAL-TABLE"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-IDATES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-DIFFERENT-CLASS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPDATE-INSTANCE-FOR-REDEFINED-CLASS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-LIST-ALL-PACKAGE-NAMES-LST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-NTH-ARRAY"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-INPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-OPEN-OUTPUT-CHANNELS"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-READ-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-T-STACK"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "UPDATE-WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-ARRAY-ELEMENT-TYPE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "UPGRADED-COMPLEX-PART-TYPE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-CHAR-UPCASE"));
        imports.add(Acl2Symbol.make("ACL2", "UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-PACKAGE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USE-VALUE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "USER-HOMEDIR-PATHNAME"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "USER-STOBJ-ALIST1"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE"));
        imports.add(Acl2Symbol.make("ACL2", "VALUE-TRIPLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VALUES-LIST"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VARIABLE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-POP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTOR-PUSH-EXTEND"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "VECTORP"));
        imports.add(Acl2Symbol.make("ACL2", "VERBOSE-PSTACK"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARD-IMPLICATION"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS+"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-GUARDS-FORMULA"));
        imports.add(Acl2Symbol.make("ACL2", "VERIFY-TERMINATION"));
        imports.add(Acl2Symbol.make("ACL2", "W"));
        imports.add(Acl2Symbol.make("ACL2", "WALKABOUT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WARNING"));
        imports.add(Acl2Symbol.make("ACL2", "WARNING!"));
        imports.add(Acl2Symbol.make("ACL2", "WARRANT"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PARALLELISM"));
        imports.add(Acl2Symbol.make("ACL2", "WATERFALL-PRINTING"));
        imports.add(Acl2Symbol.make("ACL2", "WELL-FORMED-LAMBDA-OBJECTP"));
        imports.add(Acl2Symbol.make("ACL2", "WET"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WHEN"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$"));
        imports.add(Acl2Symbol.make("ACL2", "WHEN$+"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WILD-PATHNAME-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-ACCESSORS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-COMPILATION-UNIT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-CONDITION-RESTARTS"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-FAST-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-ERROR-TRIPLE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-GUARD-CHECKING-EVENT"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-HASH-TABLE-ITERATOR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-INPUT-FROM-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LIVE-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STATE"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-LOCAL-STOBJ"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-FILE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OPEN-STREAM"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-OUTPUT-LOCK"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-OUTPUT-TO-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-PACKAGE-ITERATOR"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-STEP-LIMIT!"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-PROVER-TIME-LIMIT"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-SERIALIZE-CHARACTER"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SIMPLE-RESTART"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-SLOTS"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WITH-STANDARD-IO-SYNTAX"));
        imports.add(Acl2Symbol.make("ACL2", "WITH-STOLEN-ALIST"));
        imports.add(Acl2Symbol.make("ACL2", "WITHOUT-EVISC"));
        imports.add(Acl2Symbol.make("ACL2", "WOF"));
        imports.add(Acl2Symbol.make("ACL2", "WORLD"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-DATA"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-ENTRY-CODE"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-EVAL"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-P"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE-STATUSP"));
        imports.add(Acl2Symbol.make("ACL2", "WORMHOLE1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1"));
        imports.add(Acl2Symbol.make("ACL2", "WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-BYTE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITE-BYTE$"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-CHAR"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-LINE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-SEQUENCE"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-STRING"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "WRITE-TO-STRING"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P"));
        imports.add(Acl2Symbol.make("ACL2", "WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP"));
        imports.add(Acl2Symbol.make("ACL2", "XARGS"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC!"));
        imports.add(Acl2Symbol.make("ACL2", "XDOC-EXTEND"));
        imports.add(Acl2Symbol.make("ACL2", "XOR"));
        imports.add(Acl2Symbol.make("ACL2", "XXXJOIN"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "Y-OR-N-P"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "YES-OR-NO-P"));
        imports.add(Acl2Symbol.make("ACL2", "ZERO"));
        imports.add(Acl2Symbol.make("COMMON-LISP", "ZEROP"));
        imports.add(Acl2Symbol.make("ACL2", "ZIP"));
        imports.add(Acl2Symbol.make("ACL2", "ZP"));
        imports.add(Acl2Symbol.make("ACL2", "ZPF"));
        Acl2Package.define(Acl2PackageName.make("XDOC"), imports);
    }
}
