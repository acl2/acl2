(BVCHOP-OF-LOGXOR
 (3609 30 (:REWRITE MOD-WHEN-<))
 (2562 2562 (:TYPE-PRESCRIPTION EVENP))
 (1708 854 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1708 854 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1708 854 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1453 14 (:REWRITE <-OF-LOGXOR-AND-EXPT-OF-2))
 (854 854 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (752 301 (:REWRITE DEFAULT-<-2))
 (636 26 (:REWRITE INTEGERP-OF-*))
 (615 67 (:REWRITE MOD-WHEN-<-OF-0))
 (602 26 (:REWRITE DEFAULT-UNARY-/))
 (455 301 (:REWRITE DEFAULT-<-1))
 (392 30 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (362 30 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (357 41 (:REWRITE DEFAULT-*-2))
 (282 15 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (240 15 (:REWRITE COMMUTATIVITY-OF-*))
 (238 41 (:REWRITE DEFAULT-*-1))
 (223 15 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (154 48 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (142 21 (:REWRITE INTEGERP-OF-/-OF-EXPT-2))
 (94 93 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (93 93 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (85 7 (:REWRITE DEFAULT-+-2))
 (79 24 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (79 24 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (77 24 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (66 66 (:REWRITE <-OF-LOGXOR-WHEN-CONSTANT))
 (60 30 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (60 30 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (50 48 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (49 14 (:REWRITE LOGXOR-NON-NEGATIVE))
 (48 48 (:LINEAR EXPT-BOUND-LINEAR))
 (48 48 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (25 24 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (25 24 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (24 24 (:LINEAR EXPT-BOUND-LINEAR-2))
 (18 18 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (17 17 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (11 11 (:REWRITE INTEGERP-OF-POWER2-HACK))
 (7 7 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(BVCHOP-OF-LOGNOT-OF-BVCHOP
 (52 37 (:REWRITE DEFAULT-<-2))
 (49 37 (:REWRITE DEFAULT-<-1))
 (42 42 (:TYPE-PRESCRIPTION EVENP))
 (40 4 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (29 6 (:REWRITE DEFAULT-+-1))
 (28 28 (:TYPE-PRESCRIPTION IFIX))
 (28 14 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (28 14 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (28 14 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (28 9 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (23 23 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (20 4 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR-STRONG))
 (18 9 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (16 9 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (16 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (16 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (14 9 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (14 9 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (13 13 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (11 11 (:TYPE-PRESCRIPTION NATP))
 (11 11 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (11 11 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (9 9 (:TYPE-PRESCRIPTION POSP))
 (9 9 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (8 8 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (8 2 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (7 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (6 6 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (6 6 (:REWRITE BVCHOP-SUM-SUBST-CONST-ARG2))
 (6 6 (:REWRITE BVCHOP-SUM-SUBST-CONST))
 (6 6 (:REWRITE BVCHOP-CHOP-LEADING-CONSTANT))
 (6 2 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 (5 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR))
 (4 4 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (3 3 (:REWRITE NOT-EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (2 2 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (2 2 (:LINEAR EXPT-BOUND-LINEAR-2))
 (2 2 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (1 1 (:REWRITE BVCHOPS-SAME-WHEN-BVCHOPS-SAME))
 )
(LOGTAIL-OF-LOGXOR
 (1929 14 (:REWRITE <-OF-LOGXOR-AND-EXPT-OF-2))
 (1917 1917 (:TYPE-PRESCRIPTION EVENP))
 (1278 639 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1278 639 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1278 639 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (762 18 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (715 289 (:REWRITE DEFAULT-<-2))
 (675 27 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (639 639 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (564 64 (:REWRITE <-OF-LOGXOR-WHEN-CONSTANT))
 (497 497 (:TYPE-PRESCRIPTION <=-OF-FLOOR-WHEN-<-TYPE))
 (497 497 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (497 497 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (497 497 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONNEGATIVE-TYPE))
 (497 497 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (497 497 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (475 289 (:REWRITE DEFAULT-<-1))
 (418 63 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (353 54 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (353 54 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (318 18 (:LINEAR FLOOR-BOUND-ARG1-LINEAR))
 (299 13 (:REWRITE DEFAULT-UNARY-/))
 (294 1 (:REWRITE FLOOR-UNIQUE-EQUAL-VERSION))
 (288 73 (:REWRITE DEFAULT-*-2))
 (279 73 (:REWRITE DEFAULT-*-1))
 (178 6 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (162 54 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (149 27 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (143 63 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (143 63 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (142 62 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (120 18 (:REWRITE DEFAULT-+-2))
 (106 106 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (106 106 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (96 24 (:REWRITE UNICITY-OF-1))
 (84 6 (:LINEAR FLOOR-UPPER-BOUND-STRONG-LINEAR-CHEAP))
 (81 27 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (78 6 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (72 24 (:DEFINITION FIX))
 (71 27 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (66 18 (:REWRITE LOGXOR-NON-NEGATIVE))
 (63 63 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (54 54 (:LINEAR EXPT-BOUND-LINEAR))
 (54 54 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (54 54 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (45 45 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (32 32 (:TYPE-PRESCRIPTION INTEGER-LENGTH))
 (27 27 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (27 27 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (27 27 (:LINEAR EXPT-BOUND-LINEAR-2))
 (18 18 (:REWRITE DEFAULT-+-1))
 (18 18 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR=-2))
 (18 18 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR-1))
 (18 6 (:REWRITE <-OF-1-AND-EXPT-GEN))
 (12 12 (:LINEAR <=-OF-*-AND-*-SAME-LINEAR))
 (12 12 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (12 12 (:LINEAR <-OF-*-AND-*-LINEAR))
 (6 6 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (6 6 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (6 6 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (6 6 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 )
(SLICE-OF-LOGXOR
 (40 40 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 (32 16 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (32 16 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (32 16 (:REWRITE BVCHOP-IDENTITY))
 (31 18 (:REWRITE LOGXOR-WHEN-NOT-INTEGERP-ARG2))
 (31 18 (:REWRITE LOGXOR-WHEN-NOT-INTEGERP-ARG1))
 (30 16 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (28 16 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (28 16 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (21 21 (:REWRITE DEFAULT-+-2))
 (21 21 (:REWRITE DEFAULT-+-1))
 (16 16 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (16 16 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (16 16 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (16 16 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (16 16 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (12 12 (:TYPE-PRESCRIPTION POSP))
 (12 12 (:TYPE-PRESCRIPTION NATP))
 (11 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:TYPE-PRESCRIPTION BITP-OF-BVCHOP-OF-1-TYPE))
 (4 4 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE FOLD-CONSTS-IN-+))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-OF-LOGXOR
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (6 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (6 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (5 3 (:REWRITE LOGXOR-WHEN-NOT-INTEGERP-ARG2))
 (5 3 (:REWRITE LOGXOR-WHEN-NOT-INTEGERP-ARG1))
 (5 3 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 4 (:TYPE-PRESCRIPTION SLICE))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-BVCHOP-AND-CONSTANT-HIGH))
 (3 3 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->-FREE))
 (3 3 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<-OF-BVCHOP-AND-CONSTANT-HIGH))
 (2 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-<-2))
 )
(LOGBITP-OF-LOGXOR
 (96 96 (:TYPE-PRESCRIPTION EVENP))
 (64 32 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (64 32 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (64 32 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (32 32 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (32 32 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (8 4 (:REWRITE GETBIT-WHEN-NOT-1))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 4 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (4 4 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (4 4 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (4 4 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (4 4 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (4 4 (:REWRITE GETBIT-WHEN->=-OF-BVCHOP-AND-CONSTANT-HIGH))
 (4 4 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (4 4 (:REWRITE GETBIT-WHEN->-FREE))
 (4 4 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (4 4 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (4 4 (:REWRITE GETBIT-WHEN-<-OF-BVCHOP-AND-CONSTANT-HIGH))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 2 (:REWRITE LOGXOR-WHEN-NOT-INTEGERP-ARG2))
 (3 2 (:REWRITE LOGXOR-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 )
