(INTEGERP-OF-GETBIT)
(NATP-OF-GETBIT)
(GETBIT-OF-0
 (14 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (9 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 1 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (7 4 (:REWRITE DEFAULT-<-2))
 (7 4 (:REWRITE DEFAULT-<-1))
 (5 1 (:DEFINITION NATP))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 )
(GETBIT-0-OF-GETBIT
 (106 3 (:REWRITE BVCHOP-IDENTITY))
 (27 14 (:REWRITE DEFAULT-<-1))
 (27 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (21 1 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (20 14 (:REWRITE DEFAULT-<-2))
 (19 3 (:REWRITE SLICE-OUT-OF-ORDER))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (13 13 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (9 1 (:LINEAR <=-OF-LOGTAIL-SAME-LINEAR))
 (7 7 (:TYPE-PRESCRIPTION LOGTAIL-NON-POSITIVE))
 (7 7 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 (7 1 (:REWRITE LOGTAIL-BECOMES-0))
 (7 1 (:LINEAR LOGTAIL-NON-NEGATIVE-LINEAR))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (6 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (6 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (6 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (6 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (5 5 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 5 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 1 (:DEFINITION NATP))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 1 (:DEFINITION POSP))
 (4 1 (:DEFINITION NFIX))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (3 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (3 3 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 1 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (2 1 (:REWRITE <-OF-LOGTAIL-ARG1))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(BVCHOP-1-OF-GETBIT
 (196 9 (:REWRITE BVCHOP-IDENTITY))
 (40 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (36 2 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR-STRONG))
 (36 2 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR))
 (27 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (25 13 (:REWRITE DEFAULT-<-1))
 (21 1 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (19 13 (:REWRITE DEFAULT-<-2))
 (18 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (13 13 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (11 11 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (11 11 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (11 11 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (11 11 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (9 9 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (9 1 (:LINEAR <=-OF-LOGTAIL-SAME-LINEAR))
 (7 7 (:TYPE-PRESCRIPTION LOGTAIL-NON-POSITIVE))
 (7 7 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 (7 1 (:REWRITE LOGTAIL-BECOMES-0))
 (7 1 (:LINEAR LOGTAIL-NON-NEGATIVE-LINEAR))
 (6 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (6 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (6 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (6 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (5 5 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 5 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 1 (:DEFINITION NATP))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (4 4 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 1 (:DEFINITION POSP))
 (4 1 (:DEFINITION NFIX))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (3 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 1 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (2 1 (:REWRITE <-OF-LOGTAIL-ARG1))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER
 (9 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (6 3 (:REWRITE DEFAULT-<-2))
 (6 3 (:REWRITE DEFAULT-<-1))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 )
(BVCHOP-1-BECOMES-GETBIT
 (86 6 (:REWRITE BVCHOP-IDENTITY))
 (55 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (10 10 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (7 7 (:REWRITE DEFAULT-<-2))
 (7 7 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (6 6 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (6 6 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (6 6 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (6 6 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (6 6 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (6 6 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (6 6 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (6 6 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (5 5 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (5 5 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (4 4 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 )
(SLICE-BECOMES-GETBIT
 (10 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (6 3 (:REWRITE DEFAULT-<-2))
 (6 3 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (4 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (4 2 (:LINEAR SLICE-UPPER-BOUND-LINEAR))
 (3 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 )
(EQUAL-OF-GETBIT-0-AND-BVCHOP-1
 (40 2 (:REWRITE BVCHOP-IDENTITY))
 (28 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (8 2 (:REWRITE DEFAULT-<-1))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 2 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (2 2 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (2 2 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 2 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (2 2 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (2 2 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-OUT-OF-ORDER))
 )
(EQUAL-OF-SLICE-AND-GETBIT)
(UNSIGNED-BYTE-P-1-OF-GETBIT)
(UNSIGNED-BYTE-P-OF-GETBIT
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(GETBIT-BOUND)
(GETBIT-TOO-HIGH
 (144 144 (:TYPE-PRESCRIPTION EVENP))
 (96 48 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (96 48 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (96 48 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (12 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (11 11 (:REWRITE DEFAULT-<-2))
 (11 11 (:REWRITE DEFAULT-<-1))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (6 6 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (6 6 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (6 2 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (3 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (2 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (2 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (2 2 (:LINEAR EXPT-BOUND-LINEAR-2))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 )
(GETBIT-TOO-HIGH-CHEAP-2
 (24 24 (:TYPE-PRESCRIPTION EVENP))
 (16 8 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (16 8 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (16 8 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (8 8 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (8 8 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-OF-BVCHOP
 (137 3 (:REWRITE BVCHOP-IDENTITY))
 (87 11 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (42 2 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (26 16 (:REWRITE DEFAULT-<-1))
 (22 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (18 2 (:LINEAR <=-OF-LOGTAIL-SAME-LINEAR))
 (16 16 (:REWRITE DEFAULT-<-2))
 (14 14 (:TYPE-PRESCRIPTION LOGTAIL-NON-POSITIVE))
 (14 14 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 (14 14 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (14 2 (:REWRITE LOGTAIL-BECOMES-0))
 (14 2 (:LINEAR LOGTAIL-NON-NEGATIVE-LINEAR))
 (12 12 (:REWRITE BOUND-WHEN-USB))
 (12 2 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (11 11 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (11 11 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (11 11 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (8 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (8 2 (:DEFINITION POSP))
 (8 2 (:DEFINITION NFIX))
 (7 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (6 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (6 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (4 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (4 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 2 (:REWRITE <-OF-LOGTAIL-ARG1))
 (3 3 (:TYPE-PRESCRIPTION POSP))
 (3 3 (:TYPE-PRESCRIPTION NATP))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (3 3 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 2 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:TYPE-PRESCRIPTION NATP-OF-BVCHOP-TYPE))
 )
(GETBIT-OF-BVCHOP-TOO-HIGH
 (7 1 (:REWRITE BVCHOP-IDENTITY))
 (4 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (2 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE GETBIT-OF-BVCHOP))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(GETBIT-OF-BVCHOP-BOTH
 (21 3 (:REWRITE BVCHOP-IDENTITY))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (7 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (6 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (5 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (3 3 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION NATP-OF-BVCHOP-TYPE))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-IDENTITY
 (4 1 (:REWRITE DEFAULT-<-1))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(GETBIT-IDENTITY-FREE
 (48 48 (:TYPE-PRESCRIPTION EVENP))
 (32 16 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (32 16 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (32 16 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-OF-0-WHEN-BITP
 (14 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (4 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1 1 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(HIGH-GETBIT-OF-GETBIT-IS-0
 (2025 23 (:REWRITE BVCHOP-IDENTITY))
 (1627 68 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1159 12 (:REWRITE <-OF-LOGTAIL-ARG1))
 (315 22 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (297 297 (:TYPE-PRESCRIPTION EVENP))
 (211 112 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (211 112 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (211 112 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (180 56 (:REWRITE DEFAULT-<-2))
 (132 11 (:REWRITE DEFAULT-*-2))
 (112 112 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (112 112 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (88 22 (:DEFINITION NFIX))
 (75 56 (:REWRITE DEFAULT-<-1))
 (68 68 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (68 68 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (68 68 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (48 26 (:REWRITE DEFAULT-+-2))
 (48 13 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (48 13 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (43 43 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (43 43 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (39 39 (:REWRITE BOUND-WHEN-USB))
 (36 18 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (27 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (26 26 (:REWRITE DEFAULT-+-1))
 (23 23 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (23 23 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (14 14 (:LINEAR EXPT-BOUND-LINEAR))
 (14 14 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (14 14 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (14 14 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (13 13 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (13 13 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (13 13 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (13 13 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (13 13 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (12 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (11 11 (:REWRITE DEFAULT-*-1))
 (11 11 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (7 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (7 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (7 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (7 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (7 7 (:LINEAR EXPT-BOUND-LINEAR-2))
 (5 1 (:DEFINITION NATP))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (4 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (4 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:DEFINITION POSP))
 (3 3 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (3 3 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 )
(SLICE-OF-GETBIT-TOO-HIGH
 (511 17 (:REWRITE BVCHOP-IDENTITY))
 (275 11 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (147 51 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (95 82 (:REWRITE DEFAULT-<-1))
 (85 82 (:REWRITE DEFAULT-<-2))
 (85 20 (:DEFINITION NATP))
 (60 60 (:TYPE-PRESCRIPTION EVENP))
 (54 54 (:REWRITE BOUND-WHEN-USB))
 (54 4 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (51 51 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (51 51 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (51 51 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (48 17 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (44 24 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (44 24 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (44 24 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (44 11 (:DEFINITION NFIX))
 (40 7 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (38 38 (:REWRITE DEFAULT-+-2))
 (38 38 (:REWRITE DEFAULT-+-1))
 (32 4 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR-STRONG))
 (30 15 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (28 28 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (28 9 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (25 5 (:REWRITE COMMUTATIVITY-2-OF-+))
 (24 24 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (24 24 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (24 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (21 17 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (20 20 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (20 20 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (17 17 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (17 17 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (16 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (14 9 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (14 9 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (14 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 (12 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (12 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (11 11 (:TYPE-PRESCRIPTION NATP))
 (10 10 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (10 10 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (10 5 (:REWRITE +-OF-+-OF---SAME))
 (10 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (9 9 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (9 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (8 8 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (8 8 (:LINEAR EXPT-BOUND-LINEAR))
 (8 8 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (8 8 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (8 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (8 4 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (8 2 (:REWRITE <-OF-+-OF---AND-0-ARG2))
 (8 2 (:DEFINITION POSP))
 (7 7 (:TYPE-PRESCRIPTION POSP))
 (7 7 (:REWRITE DEFAULT-UNARY-MINUS))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (4 4 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (4 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR-2))
 (4 2 (:REWRITE <-OF-LOGTAIL-ARG1))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (2 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-OF-SLICE
 (301 13 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (236 2 (:REWRITE <-OF-LOGTAIL-ARG1))
 (65 3 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (55 33 (:REWRITE DEFAULT-<-2))
 (50 2 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (42 42 (:TYPE-PRESCRIPTION EVENP))
 (41 41 (:REWRITE DEFAULT-+-2))
 (41 41 (:REWRITE DEFAULT-+-1))
 (33 33 (:REWRITE DEFAULT-<-1))
 (30 16 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (30 16 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (30 16 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (28 4 (:REWRITE LOGTAIL-BECOMES-0))
 (24 4 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (24 2 (:REWRITE DEFAULT-*-2))
 (23 23 (:REWRITE BOUND-WHEN-USB))
 (16 16 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (16 16 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (16 16 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (16 4 (:DEFINITION POSP))
 (16 2 (:LINEAR <=-OF-LOGTAIL-SAME-LINEAR))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (13 13 (:TYPE-PRESCRIPTION LOGTAIL-NON-POSITIVE))
 (13 13 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 (13 13 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (13 13 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (13 13 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (12 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (12 3 (:DEFINITION NFIX))
 (10 10 (:REWRITE FOLD-CONSTS-IN-+))
 (10 10 (:REWRITE DEFAULT-UNARY-MINUS))
 (9 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (9 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (8 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 2 (:LINEAR LOGTAIL-NON-NEGATIVE-LINEAR))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (6 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (6 2 (:REWRITE CANCEL-FROM-<-OF-+))
 (6 2 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (5 5 (:TYPE-PRESCRIPTION POSP))
 (5 5 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (5 5 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (4 4 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (4 4 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR))
 (4 4 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (4 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (4 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE DEFAULT-*-1))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (2 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (2 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (2 2 (:LINEAR EXPT-BOUND-LINEAR-2))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(GETBIT-OF-SLICE-TOO-HIGH
 (12 1 (:REWRITE UNSIGNED-BYTE-P-OF-SLICE-LEMMA))
 (7 1 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 1 (:REWRITE COMMUTATIVITY-OF-+))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (2 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-OF-SLICE))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 )
(GETBIT-OF-SLICE-GEN
 (21 3 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (11 11 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE DEFAULT-<-2))
 (11 11 (:REWRITE DEFAULT-<-1))
 (9 3 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (7 7 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE DEFAULT-+-1))
 (7 7 (:REWRITE BOUND-WHEN-USB))
 (7 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (6 3 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (3 3 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (3 3 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:TYPE-PRESCRIPTION SLICE))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-WHEN-NOT-INTEGERP-ARG1
 (28 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (26 2 (:REWRITE BVCHOP-IDENTITY))
 (21 1 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (19 1 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (16 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (11 5 (:REWRITE DEFAULT-<-1))
 (10 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 5 (:REWRITE DEFAULT-<-2))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (7 1 (:REWRITE GETBIT-IDENTITY))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 3 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (3 3 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (3 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 2 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (2 2 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (2 2 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 2 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (2 2 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (2 2 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (2 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:TYPE-PRESCRIPTION BITP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE GETBIT-IDENTITY-FREE))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE BVCHOPS-SAME-WHEN-BVCHOPS-SAME))
 (1 1 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(BVCHOP-OF-GETBIT
 (77 32 (:REWRITE DEFAULT-<-2))
 (72 72 (:TYPE-PRESCRIPTION EVENP))
 (56 32 (:REWRITE DEFAULT-<-1))
 (48 24 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (48 24 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (48 24 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (35 5 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (28 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (28 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (24 24 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (24 24 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (24 2 (:REWRITE DEFAULT-+-2))
 (23 23 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (23 23 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (23 23 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (22 22 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (16 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (16 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (14 14 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (14 14 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (14 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (14 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (13 13 (:REWRITE BOUND-WHEN-USB))
 (12 12 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION POSP))
 (10 5 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (10 5 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (10 5 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (10 5 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (10 5 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (10 2 (:DEFINITION NATP))
 (8 8 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (8 8 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (8 8 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (7 7 (:TYPE-PRESCRIPTION NATP))
 (7 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (7 4 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (5 5 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (5 5 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR-2))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(LOGBITP-TO-GETBIT-EQUAL-1
 (10198 41 (:REWRITE MOD-WHEN-<))
 (9702 48 (:REWRITE MOD-WHEN-<-OF-0))
 (8736 8 (:REWRITE MOD-OF-FLOOR-IS-0-WHEN-MULTIPLE))
 (7471 13 (:LINEAR MY-FLOOR-LOWER-BOUND-LINEAR))
 (7258 13 (:LINEAR FLOOR-UPPER-BOUND-LINEAR))
 (6834 6834 (:TYPE-PRESCRIPTION EVENP))
 (4764 40 (:REWRITE FLOOR-MUST-BE-1))
 (4673 2395 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (4673 2395 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (4673 2395 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (4307 39 (:REWRITE FLOOR-WHEN-<))
 (3450 138 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (3306 16 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (2395 2395 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2031 276 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (2031 276 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (1914 822 (:REWRITE DEFAULT-<-2))
 (1625 13 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (1404 822 (:REWRITE DEFAULT-<-1))
 (1404 166 (:REWRITE DEFAULT-*-2))
 (1334 58 (:REWRITE DEFAULT-UNARY-/))
 (1178 8 (:REWRITE <-OF-FLOOR-AND-0))
 (767 13 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (754 13 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (704 276 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (589 138 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (497 39 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (427 427 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (427 427 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (420 138 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (406 166 (:REWRITE DEFAULT-*-1))
 (400 41 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (394 42 (:REWRITE INTEGERP-OF-*))
 (380 39 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (352 138 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (305 41 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (291 291 (:REWRITE BOUND-WHEN-USB))
 (282 282 (:TYPE-PRESCRIPTION <=-OF-FLOOR-WHEN-<-TYPE))
 (282 282 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (282 282 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (282 282 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONNEGATIVE-TYPE))
 (282 282 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (282 282 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (276 276 (:LINEAR EXPT-BOUND-LINEAR))
 (276 276 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (276 276 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (258 27 (:REWRITE DEFAULT-+-2))
 (139 139 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (138 138 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (138 138 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (138 138 (:LINEAR EXPT-BOUND-LINEAR-2))
 (136 41 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (136 41 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (72 10 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (65 65 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (55 55 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (52 13 (:LINEAR FLOOR-BOUND-ARG1-LINEAR))
 (48 48 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (39 39 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (39 39 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (39 39 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (39 39 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (39 39 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (39 13 (:REWRITE <-OF-1-AND-EXPT-GEN))
 (30 10 (:REWRITE INTEGERP-OF-*-1/2-WHEN-POWER-OF-2P))
 (27 27 (:REWRITE DEFAULT-+-1))
 (26 26 (:LINEAR <=-OF-*-AND-*-SAME-LINEAR))
 (26 26 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (26 26 (:LINEAR <-OF-*-AND-*-LINEAR))
 (20 20 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (17 17 (:REWRITE MOD-OF-2-WHEN-EVEN-CHEAP))
 (13 13 (:REWRITE <-OF-FLOOR-OF-CONSTANT-AND-CONSTANT-GEN))
 (13 13 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR=-2))
 (13 13 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR-1))
 (13 13 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (13 13 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (13 13 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (13 13 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (10 10 (:REWRITE INTEGERP-OF-HALF-WHEN-MULT-OF-EXPT))
 (9 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 2 (:REWRITE <=-OF-0-AND-FLOOR-WHEN-BOTH-NONNEGATIVE))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (6 6 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE <-OF-EXPT-AND-0))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE <-OF-0-AND-EXPT))
 (2 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 )
(GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP
 (7 1 (:REWRITE BVCHOP-IDENTITY))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION
 (7 1 (:REWRITE BVCHOP-IDENTITY))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(GETBIT-OF-EXPT
 (24 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (6 6 (:TYPE-PRESCRIPTION EVENP))
 (4 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (4 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (4 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (3 1 (:REWRITE SLICE-OF-EXPT-HIGH))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 )
(GETBIT-WHEN-N-IS-NEGATIVE
 (31 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (27 2 (:REWRITE BVCHOP-IDENTITY))
 (21 1 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (19 1 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (13 4 (:REWRITE DEFAULT-<-1))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (7 1 (:REWRITE GETBIT-IDENTITY))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (5 3 (:REWRITE SLICE-OUT-OF-ORDER))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (3 3 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (3 3 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (3 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 2 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (2 2 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (2 2 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 2 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (2 2 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (2 2 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BITP))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE GETBIT-IDENTITY-FREE))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 )
(GETBIT-OF-EXPT-2-N
 (12 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (3 3 (:TYPE-PRESCRIPTION EVENP))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 1 (:REWRITE SLICE-OF-EXPT-HIGH))
 (3 1 (:REWRITE GETBIT-OF-EXPT))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 )
(GETBIT-OF-LOGTAIL
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (8 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (7 1 (:REWRITE LOGTAIL-BECOMES-0))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 2 (:REWRITE CANCEL-FROM-<-OF-+))
 (6 1 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (5 5 (:REWRITE DEFAULT-<-2))
 (5 5 (:REWRITE DEFAULT-<-1))
 (5 5 (:REWRITE DEFAULT-+-2))
 (5 5 (:REWRITE DEFAULT-+-1))
 (5 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:DEFINITION POSP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 1 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION LOGTAIL-NON-POSITIVE))
 (1 1 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 )
(GETBIT-OF-MOD-OF-EXPT
 (629 1 (:REWRITE MOD-WHEN-<))
 (150 150 (:TYPE-PRESCRIPTION EVENP))
 (100 50 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (100 50 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (100 50 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (91 3 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (83 6 (:LINEAR EXPT-BOUND-LINEAR))
 (81 1 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (80 1 (:LINEAR EXPT-OF-ONE-LESS-LINEAR))
 (74 4 (:LINEAR EXPT-BOUND-LINEAR-2))
 (68 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (60 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (50 50 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (50 50 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (50 50 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (50 50 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (50 50 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (38 26 (:REWRITE DEFAULT-<-2))
 (38 1 (:LINEAR EXPT-HALF-LINEAR))
 (33 33 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (33 3 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (29 26 (:REWRITE DEFAULT-<-1))
 (29 1 (:REWRITE INTEGERP-OF-MOD))
 (26 2 (:REWRITE DEFAULT-*-2))
 (25 25 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (25 25 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (25 2 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (25 1 (:REWRITE DEFAULT-UNARY-/))
 (19 6 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (19 6 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (16 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (14 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (13 1 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (12 4 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (12 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (12 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (10 10 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE BOUND-WHEN-USB))
 (8 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (8 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (6 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (6 1 (:REWRITE MOD-WHEN-<-OF-0))
 (5 5 (:REWRITE DEFAULT-+-2))
 (5 5 (:REWRITE DEFAULT-+-1))
 (5 2 (:REWRITE DEFAULT-*-1))
 (4 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (4 1 (:DEFINITION FIX))
 (3 1 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (2 2 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (2 2 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (2 2 (:TYPE-PRESCRIPTION MOD))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 1 (:REWRITE INTEGERP-OF-MOD-OF-EXPT))
 (2 1 (:REWRITE INTEGERP-OF-*))
 (1 1 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (1 1 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (1 1 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-POWER2-HACK))
 (1 1 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 )
(GETBIT-OF-1
 (11 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (8 5 (:REWRITE DEFAULT-<-2))
 (8 5 (:REWRITE DEFAULT-<-1))
 (6 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (6 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 1 (:REWRITE UNSIGNED-BYTE-P-OF-1))
 (4 1 (:DEFINITION POSP))
 (3 3 (:REWRITE ZP-OPEN))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(BITP-OF-GETBIT)
(GETBIT-LEIBNIZ)
(GETBIT-OF-1-OF-+-OF-*-OF-2
 (6 6 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-WHEN-NOT-1)
(GETBIT-WHEN-NOT-0)
(EQUAL-OF-GETBIT-AND-1-FORWARD-TO-BOUND
 (1566 1566 (:TYPE-PRESCRIPTION EVENP))
 (1056 534 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1056 534 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1056 534 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1056 39 (:DEFINITION EXPT))
 (1039 32 (:REWRITE FLOOR-MUST-BE-1))
 (797 87 (:REWRITE DEFAULT-*-2))
 (695 5 (:REWRITE FLOOR-WHEN-<))
 (534 534 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (373 177 (:REWRITE DEFAULT-<-2))
 (369 3 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (299 177 (:REWRITE DEFAULT-<-1))
 (194 8 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (177 3 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (174 3 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (149 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (126 42 (:REWRITE COMMUTATIVITY-OF-+))
 (122 87 (:REWRITE DEFAULT-*-1))
 (115 93 (:REWRITE DEFAULT-+-2))
 (108 108 (:REWRITE BOUND-WHEN-USB))
 (104 42 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (104 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (98 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (93 93 (:REWRITE DEFAULT-+-1))
 (92 4 (:REWRITE DEFAULT-UNARY-/))
 (81 81 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (75 5 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (70 70 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (70 70 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (70 70 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (70 70 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (66 1 (:REWRITE UNSIGNED-BYTE-P-OF-FLOOR))
 (63 21 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (60 5 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (60 5 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (56 42 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (52 21 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (43 25 (:REWRITE ZIP-OPEN))
 (28 21 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (20 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (20 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (11 11 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (11 11 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (11 11 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (8 8 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR=-2))
 (6 6 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (6 6 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (6 6 (:LINEAR <-OF-*-AND-*-LINEAR))
 (6 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (6 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (5 5 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (5 5 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (5 5 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (5 5 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (5 5 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (5 5 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (5 5 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (5 5 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (4 4 (:REWRITE EQUAL-OF-EXPT2-AND-CONSTANT))
 (4 1 (:REWRITE <-OF-2-AND-EXPT2))
 (3 3 (:TYPE-PRESCRIPTION INTEGERP-OF-*-OF-EXPT2-AND-/-OF-EXPT2-TYPE))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (3 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (2 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 )
(UNSIGNED-BYTE-P-OF-BVCHOP-ONE-MORE-HELPER
 (6360 1 (:REWRITE BVCHOP-IDENTITY))
 (3565 8 (:REWRITE MOD-WHEN-<))
 (3169 8 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (2589 2589 (:TYPE-PRESCRIPTION EVENP))
 (2561 13 (:REWRITE FLOOR-WHEN-<))
 (2553 16 (:REWRITE FLOOR-WHEN-<=))
 (2103 3 (:LINEAR MY-FLOOR-LOWER-BOUND-LINEAR))
 (2071 16 (:REWRITE FLOOR-MUST-BE-1))
 (2037 3 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR-1))
 (2031 3 (:LINEAR FLOOR-UPPER-BOUND-LINEAR))
 (1890 3 (:LINEAR FLOOR-BOUND-ARG1-LINEAR))
 (1728 865 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1728 865 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1728 865 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1188 33 (:LINEAR EXPT-HALF-LINEAR))
 (1056 33 (:LINEAR EXPT-OF-ONE-LESS-LINEAR))
 (1054 1 (:REWRITE MOD-OF-FLOOR-IS-0-WHEN-MULTIPLE))
 (865 865 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (593 175 (:REWRITE DEFAULT-<-2))
 (578 83 (:LINEAR EXPT-BOUND-LINEAR-2))
 (549 3 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (436 175 (:REWRITE DEFAULT-<-1))
 (395 395 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (395 395 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (366 1 (:LINEAR MOD-BOUND-LINEAR-ARG2-STRONG))
 (321 100 (:LINEAR EXPT-BOUND-LINEAR))
 (321 100 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (295 1 (:REWRITE UNSIGNED-BYTE-P-OF-MOD-WHEN-<=-OF-EXPT))
 (238 1 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (235 1 (:LINEAR MOD-BOUND-LINEAR-ARG2))
 (230 10 (:REWRITE DEFAULT-UNARY-/))
 (227 1 (:REWRITE LOGTAIL-OF-ONE-LESS-WHEN-SIGNED-BYTE-P))
 (225 1 (:DEFINITION SIGNED-BYTE-P))
 (195 13 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (195 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (195 1 (:REWRITE LOGTAIL-BECOMES-0))
 (193 149 (:REWRITE DEFAULT-+-2))
 (191 18 (:REWRITE DEFAULT-*-2))
 (180 100 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (177 3 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (174 3 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (156 13 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (149 149 (:REWRITE DEFAULT-+-1))
 (147 6 (:LINEAR <=-OF-*-AND-*-SAME-LINEAR))
 (140 50 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (113 5 (:REWRITE INTEGERP-OF-*))
 (104 8 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (101 50 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (100 100 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (100 100 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (100 100 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (99 33 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (85 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (77 77 (:REWRITE BOUND-WHEN-USB))
 (59 18 (:REWRITE DEFAULT-*-1))
 (53 53 (:TYPE-PRESCRIPTION <=-OF-FLOOR-WHEN-<-TYPE))
 (53 53 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (53 53 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (53 53 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (53 53 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (50 50 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (50 50 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (28 9 (:REWRITE MOD-WHEN-<-OF-0))
 (27 8 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (27 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (23 1 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (20 2 (:REWRITE UNSIGNED-BYTE-P-OF-EXPT2))
 (20 1 (:REWRITE UNSIGNED-BYTE-P-OF-FLOOR))
 (20 1 (:REWRITE MOD-OF-2-WHEN-EVEN-CHEAP))
 (20 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (20 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (16 4 (:REWRITE INTEGERP-OF-/-OF-EXPT-2))
 (16 1 (:REWRITE UNSIGNED-BYTE-P-OF-MOD2))
 (16 1 (:REWRITE UNSIGNED-BYTE-P-OF-MOD))
 (14 3 (:REWRITE DEFAULT-UNARY-MINUS))
 (13 13 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (13 13 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (13 13 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (13 13 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (13 13 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (12 12 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (9 9 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (9 3 (:REWRITE <-OF-1-AND-EXPT-GEN))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (6 6 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (6 6 (:LINEAR <-OF-*-AND-*-LINEAR))
 (6 1 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (4 4 (:REWRITE INTEGERP-OF-POWER2-HACK))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:REWRITE UNSIGNED-BYTE-P-OF-MOD-OF-EXPT))
 (4 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (4 1 (:REWRITE <-OF-EXPT-AND-EXPT-SAME-BASE))
 (3 3 (:REWRITE <-OF-FLOOR-OF-CONSTANT-AND-CONSTANT-GEN))
 (3 3 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR=-2))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (3 1 (:REWRITE INTEGERP-OF-*-1/2-WHEN-POWER-OF-2P))
 (3 1 (:REWRITE CANCEL-FROM-<-OF-+))
 (2 2 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (2 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:TYPE-PRESCRIPTION SIGNED-BYTE-P))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (1 1 (:REWRITE INTEGERP-OF-HALF-WHEN-MULT-OF-EXPT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(UNSIGNED-BYTE-P-OF-BVCHOP-ONE-MORE
 (9 3 (:REWRITE BVCHOP-IDENTITY))
 (7 1 (:REWRITE UNSIGNED-BYTE-P-OF-BVCHOP-WHEN-ALREADY))
 (4 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 1 (:REWRITE UNSIGNED-BYTE-P-OF-BVCHOP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (3 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (3 3 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-OF-*-OF-2
 (1244 2 (:REWRITE LOGTAIL-OF-ONE-LESS-WHEN-SIGNED-BYTE-P))
 (1240 2 (:DEFINITION SIGNED-BYTE-P))
 (1206 2 (:DEFINITION INTEGER-RANGE-P))
 (903 10 (:REWRITE BVCHOP-IDENTITY))
 (761 17 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (602 2 (:REWRITE <-OF-LOGTAIL-ARG1))
 (384 6 (:LINEAR EXPT-OF-ONE-LESS-LINEAR))
 (372 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (354 354 (:TYPE-PRESCRIPTION EVENP))
 (300 12 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (247 129 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (247 129 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (247 129 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (216 6 (:LINEAR EXPT-HALF-LINEAR))
 (131 65 (:REWRITE DEFAULT-<-2))
 (129 129 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (129 129 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (129 129 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (126 126 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (126 126 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (102 24 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (102 24 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (102 12 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (99 11 (:REWRITE DEFAULT-*-2))
 (84 2 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR))
 (70 70 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (70 70 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (65 65 (:REWRITE DEFAULT-<-1))
 (56 7 (:REWRITE UNSIGNED-BYTE-P-OF-TIMES-2))
 (48 24 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (36 36 (:REWRITE BOUND-WHEN-USB))
 (30 12 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (30 12 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (30 2 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (29 29 (:REWRITE DEFAULT-+-2))
 (29 29 (:REWRITE DEFAULT-+-1))
 (27 5 (:REWRITE DEFAULT-UNARY-MINUS))
 (26 8 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 (24 24 (:LINEAR EXPT-BOUND-LINEAR))
 (24 24 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (24 24 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (23 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (18 18 (:LINEAR EXPT-BOUND-LINEAR-2))
 (18 6 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (16 2 (:LINEAR <=-OF-LOGTAIL-SAME-LINEAR))
 (14 2 (:REWRITE LOGTAIL-BECOMES-0))
 (12 12 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (12 12 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (12 8 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (12 2 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (12 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (12 2 (:DEFINITION NFIX))
 (11 11 (:REWRITE DEFAULT-*-1))
 (10 10 (:TYPE-PRESCRIPTION LOGTAIL-NON-POSITIVE))
 (10 10 (:TYPE-PRESCRIPTION LOGTAIL$INLINE))
 (10 10 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (10 10 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (9 9 (:TYPE-PRESCRIPTION NATP))
 (9 9 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (9 9 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (8 2 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (8 2 (:LINEAR LOGTAIL-NON-NEGATIVE-LINEAR))
 (8 2 (:DEFINITION POSP))
 (7 7 (:REWRITE UNSIGNED-BYTE-P-OF-*-GEN))
 (7 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (6 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (4 4 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 2 (:REWRITE +-OF-+-OF---SAME))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG1))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 1 (:REWRITE CANCEL-FROM-<-OF-+))
 (2 2 (:TYPE-PRESCRIPTION SIGNED-BYTE-P))
 (2 2 (:TYPE-PRESCRIPTION POSP))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (2 2 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (2 2 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 2 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (2 2 (:DEFINITION FIX))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (1 1 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(GETBIT-OF-*-OF-2-ARG2+
 (11 11 (:REWRITE DEFAULT-*-2))
 (11 11 (:REWRITE DEFAULT-*-1))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 5 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (4 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 4 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (4 4 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (4 4 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 )
(SUB1-SUB1-INDUCT)
(GETBIT-OF-*-OF-EXPT-ARG1
 (124 14 (:REWRITE DEFAULT-*-2))
 (60 60 (:TYPE-PRESCRIPTION EVENP))
 (58 14 (:REWRITE DEFAULT-*-1))
 (41 8 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (40 20 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (40 20 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (40 20 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (26 26 (:REWRITE DEFAULT-+-2))
 (26 26 (:REWRITE DEFAULT-+-1))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (20 20 (:REWRITE DEFAULT-<-2))
 (20 20 (:REWRITE DEFAULT-<-1))
 (20 8 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (17 17 (:REWRITE BOUND-WHEN-USB))
 (16 8 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (8 8 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (7 7 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (7 7 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (6 6 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 3 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE ZP-OPEN))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 )
(GETBIT-OF-*-OF-EXPT-ARG2
 (26 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (25 3 (:REWRITE DEFAULT-*-2))
 (15 15 (:TYPE-PRESCRIPTION EVENP))
 (14 3 (:REWRITE DEFAULT-*-1))
 (10 5 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (10 5 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (10 5 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (10 4 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (8 4 (:REWRITE GETBIT-WHEN-NOT-1))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 2 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (5 5 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (5 5 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (5 5 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (4 4 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (4 4 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (2 2 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-0-OF-TIMES-CONSTANT
 (327 17 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (246 12 (:REWRITE BVCHOP-IDENTITY))
 (190 4 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (185 3 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (177 3 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (56 2 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR-STRONG))
 (56 2 (:LINEAR BVCHOP-UPPER-BOUND-LINEAR))
 (23 3 (:REWRITE GETBIT-IDENTITY))
 (22 18 (:REWRITE DEFAULT-<-1))
 (18 18 (:REWRITE DEFAULT-<-2))
 (18 2 (:REWRITE BVCHOP-BOUND-2))
 (18 2 (:REWRITE BVCHOP-BOUND))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (14 14 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (14 14 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (14 14 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (12 12 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (12 12 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (12 12 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (12 10 (:REWRITE DEFAULT-*-2))
 (12 10 (:REWRITE DEFAULT-*-1))
 (10 10 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (10 10 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (10 10 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (10 10 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (10 10 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (10 10 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (10 4 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-OF-*-GEN))
 (8 8 (:LINEAR <=-OF-*-AND-*-SAME-LINEAR))
 (8 8 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (8 8 (:LINEAR <-OF-*-AND-*-LINEAR))
 (8 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (6 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 4 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 (4 4 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (4 4 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (4 4 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (4 4 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (4 4 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (4 3 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (3 3 (:TYPE-PRESCRIPTION BITP))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (3 3 (:REWRITE SLICE-OUT-OF-ORDER))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 3 (:REWRITE GETBIT-IDENTITY-FREE))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE BVCHOP-NUMERIC-BOUND))
 (2 2 (:REWRITE <-OF-BVCHOP-WHEN-<-OF-BVCHOP-BIGGER))
 )
(GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT
 (8 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (7 7 (:REWRITE DEFAULT-<-2))
 (7 7 (:REWRITE DEFAULT-<-1))
 (7 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 4 (:REWRITE BOUND-WHEN-USB))
 (4 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (3 1 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBITS-SAME-WHEN-BVCHOPS-SAME
 (126 126 (:TYPE-PRESCRIPTION EVENP))
 (92 10 (:REWRITE BVCHOP-IDENTITY))
 (86 44 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (86 44 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (86 44 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (44 32 (:REWRITE DEFAULT-<-1))
 (36 1 (:LINEAR EXPT-HALF-LINEAR))
 (32 32 (:REWRITE DEFAULT-<-2))
 (32 10 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (32 8 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (30 30 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (30 30 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (29 7 (:REWRITE DEFAULT-+-2))
 (20 20 (:REWRITE BOUND-WHEN-USB))
 (16 8 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (16 8 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (14 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (14 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (13 1 (:REWRITE DEFAULT-*-2))
 (12 6 (:REWRITE GETBIT-WHEN-NOT-1))
 (12 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (12 4 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (12 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (12 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (11 11 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (10 10 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (10 10 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (10 10 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (10 10 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (8 8 (:TYPE-PRESCRIPTION POSP))
 (8 8 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (8 8 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (8 4 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (7 7 (:REWRITE DEFAULT-+-1))
 (7 4 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (6 6 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (6 6 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (6 6 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (6 6 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (6 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (6 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (4 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 1 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG1))
 (1 1 (:REWRITE DEFAULT-*-1))
 )
(GETBIT-OF-+-OF--1-AND-EXPT
 (13624 14 (:REWRITE MOD-WHEN-<-OF-0))
 (7275 7275 (:TYPE-PRESCRIPTION EVENP))
 (4851 2426 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (4851 2426 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (4851 2426 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (3856 17 (:REWRITE USB-PLUS-FROM-BOUNDS))
 (3396 9 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (2426 2426 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2109 1 (:REWRITE BVCHOP-IDENTITY))
 (1760 50 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1265 55 (:REWRITE DEFAULT-UNARY-/))
 (1110 15 (:REWRITE LOGTAIL-OF-SUM))
 (1069 100 (:REWRITE DEFAULT-*-2))
 (1027 749 (:REWRITE DEFAULT-<-1))
 (980 980 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (980 980 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (903 749 (:REWRITE DEFAULT-<-2))
 (864 24 (:LINEAR EXPT-HALF-LINEAR))
 (763 242 (:REWRITE DEFAULT-+-2))
 (716 100 (:REWRITE DEFAULT-*-1))
 (658 28 (:REWRITE INTEGERP-OF-*))
 (612 252 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (429 126 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (429 126 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (418 242 (:REWRITE DEFAULT-+-1))
 (405 405 (:REWRITE BOUND-WHEN-USB))
 (387 1 (:REWRITE UNSIGNED-BYTE-P-OF-LOGTAIL-STRONG))
 (366 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (323 33 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF--1))
 (318 252 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (224 16 (:REWRITE COMMUTATIVITY-OF-+))
 (210 16 (:REWRITE UNSIGNED-BYTE-P-OF-EXPT2))
 (207 42 (:REWRITE DEFAULT-UNARY-MINUS))
 (195 15 (:REWRITE *-OF--1))
 (166 17 (:REWRITE UNSIGNED-BYTE-P-OF-+))
 (159 126 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (159 126 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (147 13 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (138 10 (:REWRITE MOD-OF-2-WHEN-EVEN-CHEAP))
 (132 44 (:REWRITE <-OF-+-OF---AND-0-ARG2))
 (120 15 (:REWRITE INTEGERP-OF-/-OF-EXPT-2))
 (120 15 (:REWRITE INTEGERP-OF-*-OF-EXPT2-AND-/-OF-EXPT2))
 (99 9 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF--1-AND-EXPT))
 (96 7 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (96 7 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (96 7 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (90 15 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (84 7 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (72 24 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (67 67 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (60 15 (:DEFINITION POSP))
 (50 50 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (42 42 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (42 42 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (29 1 (:REWRITE DISTRIBUTIVITY))
 (27 9 (:REWRITE INTEGERP-OF-*-1/2-WHEN-POWER-OF-2P))
 (18 18 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (17 17 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-CONSTANT-STRONG))
 (15 15 (:TYPE-PRESCRIPTION POSP))
 (15 15 (:REWRITE *-OF---ARG1))
 (14 14 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (14 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (14 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (13 13 (:REWRITE INTEGERP-OF-HALF-WHEN-MULT-OF-EXPT))
 (12 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (12 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (12 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (7 7 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (6 6 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (5 1 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE MOD-OF-EXPT-WHEN-EQUAL-OF-MOD-SUBST-CONSTANT))
 (4 1 (:REWRITE MOD-OF-+-OF-CONSTANT))
 (4 1 (:REWRITE CANCEL-FROM-<-OF-+))
 (4 1 (:DEFINITION NFIX))
 (3 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (3 1 (:REWRITE SLICE-OF-+-OF-EXPT-GEN))
 (3 1 (:REWRITE SLICE-OF-+-OF--1-AND-EXPT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 1 (:REWRITE UNICITY-OF-0))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE MOD-OF-+-SUBST-CONSTANT))
 (1 1 (:REWRITE MOD-OF-+-REDUCE-POSITIVE-CONSTANT))
 (1 1 (:REWRITE MOD-OF-+-OF---WHEN-EQUAL-OF-MOD-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (1 1 (:DEFINITION FIX))
 )
(GETBIT-OF-0-AND-+-OF-1-AND-*-OF-2
 (42 1 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (40 1 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (39 3 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-CONSTANT-STRONG))
 (24 7 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 (19 1 (:REWRITE GETBIT-IDENTITY))
 (19 1 (:REWRITE BVCHOP-IDENTITY))
 (14 3 (:REWRITE USB-PLUS-FROM-BOUNDS))
 (14 1 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (13 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (11 1 (:REWRITE COMMUTATIVITY-OF-*))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (8 1 (:REWRITE DISTRIBUTIVITY))
 (5 1 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (4 4 (:REWRITE DEFAULT-*-2))
 (4 4 (:REWRITE DEFAULT-*-1))
 (4 3 (:REWRITE UNSIGNED-BYTE-P-OF-+))
 (4 1 (:REWRITE MOD-OF-+-OF-CONSTANT))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 1 (:REWRITE MOD-WHEN-<-OF-0))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (2 2 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 1 (:REWRITE UNICITY-OF-1))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (2 1 (:REWRITE BVCHOP-CHOP-LEADING-CONSTANT))
 (1 1 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (1 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (1 1 (:TYPE-PRESCRIPTION BITP))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (1 1 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (1 1 (:REWRITE MOD-OF-+-SUBST-CONSTANT))
 (1 1 (:REWRITE MOD-OF-+-REDUCE-POSITIVE-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE GETBIT-IDENTITY-FREE))
 (1 1 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-SUM-SUBST-CONST-ARG2))
 (1 1 (:REWRITE BVCHOP-SUM-SUBST-CONST))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (1 1 (:DEFINITION FIX))
 )
(GETBIT-WHEN-SLICE-IS-KNOWN-TO-BE-ALL-ONES
 (159 159 (:TYPE-PRESCRIPTION EVENP))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (35 5 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (30 30 (:REWRITE DEFAULT-<-2))
 (30 30 (:REWRITE DEFAULT-<-1))
 (21 20 (:REWRITE DEFAULT-+-2))
 (20 20 (:REWRITE DEFAULT-+-1))
 (18 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (15 5 (:REWRITE SLICE-OUT-OF-ORDER))
 (12 12 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (12 12 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (12 12 (:REWRITE BOUND-WHEN-USB))
 (12 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (12 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (10 5 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (9 9 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (9 3 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (7 7 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (6 6 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (6 6 (:LINEAR EXPT-BOUND-LINEAR))
 (6 6 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (6 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (6 6 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (5 5 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (5 5 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (5 5 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (5 5 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (5 5 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (5 5 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (5 5 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 3 (:LINEAR EXPT-BOUND-LINEAR-2))
 (3 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE EQUAL-OF-EXPT2-AND-CONSTANT))
 )
(NOT-EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT
 (7 1 (:REWRITE BVCHOP-IDENTITY))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT-WIDEN
 (83770 68 (:REWRITE MOD-OF-FLOOR-IS-0-WHEN-MULTIPLE))
 (34104 104 (:REWRITE MOD-WHEN-<))
 (33004 104 (:REWRITE MOD-WHEN-<-OF-0))
 (26325 26325 (:TYPE-PRESCRIPTION EVENP))
 (23578 105 (:LINEAR MY-FLOOR-LOWER-BOUND-LINEAR))
 (22149 105 (:LINEAR FLOOR-UPPER-BOUND-LINEAR))
 (21994 4 (:REWRITE MOD-LESS-THAN-1))
 (17554 8779 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (17554 8779 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (17554 8779 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (14260 75 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (12448 146 (:REWRITE FLOOR-MUST-BE-1))
 (11495 105 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (10464 146 (:REWRITE FLOOR-WHEN-<))
 (10124 146 (:REWRITE FLOOR-WHEN-<=))
 (9332 104 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (8779 8779 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (7859 61 (:REWRITE <-OF-FLOOR-AND-0))
 (6296 2372 (:REWRITE DEFAULT-<-2))
 (5933 735 (:REWRITE DEFAULT-*-2))
 (5186 2372 (:REWRITE DEFAULT-<-1))
 (4006 178 (:REWRITE DEFAULT-UNARY-/))
 (3437 735 (:REWRITE DEFAULT-*-1))
 (2248 146 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (2206 146 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (1982 298 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (1850 2 (:REWRITE BVCHOP-IDENTITY))
 (1834 16 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1628 596 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (1510 1510 (:TYPE-PRESCRIPTION <=-OF-FLOOR-WHEN-<-TYPE))
 (1510 1510 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (1510 1510 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (1510 1510 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONNEGATIVE-TYPE))
 (1510 1510 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (1510 1510 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (1356 104 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (1224 98 (:REWRITE DEFAULT-+-2))
 (1148 104 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (1070 104 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (1057 1057 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1057 1057 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (1018 52 (:REWRITE MOD-OF-2-WHEN-EVEN-CHEAP))
 (854 854 (:REWRITE BOUND-WHEN-USB))
 (844 92 (:REWRITE INTEGERP-OF-*))
 (814 298 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (799 298 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (718 46 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (632 104 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (596 596 (:LINEAR EXPT-BOUND-LINEAR))
 (596 596 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (596 596 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (555 105 (:LINEAR FLOOR-BOUND-ARG1-LINEAR))
 (480 40 (:LINEAR FLOOR-UPPER-BOUND-STRONG-LINEAR-CHEAP))
 (406 98 (:REWRITE DEFAULT-+-1))
 (300 100 (:REWRITE <-OF-1-AND-EXPT-GEN))
 (298 298 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (298 298 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (298 298 (:LINEAR EXPT-BOUND-LINEAR-2))
 (192 24 (:REWRITE INTEGERP-OF-/-OF-EXPT-2))
 (182 182 (:LINEAR <-OF-*-AND-*-LINEAR))
 (176 176 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (170 146 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (166 166 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (164 164 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (164 164 (:TYPE-PRESCRIPTION MOD))
 (154 154 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (150 150 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (150 150 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (146 146 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (146 146 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (146 146 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (146 146 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (126 42 (:REWRITE INTEGERP-OF-*-1/2-WHEN-POWER-OF-2P))
 (105 105 (:REWRITE <-OF-FLOOR-OF-CONSTANT-AND-CONSTANT-GEN))
 (105 105 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR=-2))
 (105 105 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR-1))
 (104 104 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (103 19 (:REWRITE <=-OF-0-AND-FLOOR-WHEN-BOTH-NONNEGATIVE))
 (84 84 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (42 42 (:REWRITE INTEGERP-OF-HALF-WHEN-MULT-OF-EXPT))
 (42 42 (:REWRITE <-OF-EXPT-AND-0))
 (40 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (40 2 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (38 2 (:REWRITE UNSIGNED-BYTE-P-OF-FLOOR))
 (32 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (20 20 (:REWRITE INTEGERP-OF-POWER2-HACK))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (19 19 (:REWRITE <-OF-0-AND-EXPT))
 (16 16 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (16 16 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (16 16 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (14 2 (:REWRITE LOGTAIL-BECOMES-0))
 (12 2 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (8 8 (:REWRITE RATIONALP-*))
 (8 2 (:DEFINITION POSP))
 (6 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (4 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (4 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (2 2 (:TYPE-PRESCRIPTION POSP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (2 2 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (2 2 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (2 2 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (2 2 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (2 2 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (2 2 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(GETBIT-0-OF--
 (57 8 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (54 4 (:REWRITE BVCHOP-IDENTITY))
 (39 2 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (35 2 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (14 2 (:REWRITE GETBIT-IDENTITY))
 (13 4 (:REWRITE DEFAULT-<-1))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (8 8 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (6 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (4 4 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (4 4 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (4 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (4 4 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (4 4 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (3 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (3 2 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 (2 2 (:TYPE-PRESCRIPTION BITP))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (2 2 (:REWRITE NOT-EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT))
 (2 2 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE GETBIT-IDENTITY-FREE))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(GETBIT-OF-+-OF-EXPT-GEN
 (25 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (14 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (13 1 (:REWRITE DEFAULT-+-2))
 (9 9 (:TYPE-PRESCRIPTION EVENP))
 (6 3 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (6 3 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (6 3 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (6 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 3 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (3 3 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (3 3 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(GETBIT-OF--1
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(EQUAL-OF-GETBIT-SAME
 (38 2 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (8 2 (:REWRITE GETBIT-IDENTITY))
 (8 2 (:REWRITE DEFAULT-<-1))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (4 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:TYPE-PRESCRIPTION BITP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (2 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE GETBIT-IDENTITY-FREE))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 )
(MOD-OF-2-BECOMES-GETBIT-0
 (81 6 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (20 5 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (18 1 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (16 6 (:REWRITE MOD-WHEN-<-OF-0))
 (16 6 (:REWRITE MOD-WHEN-<))
 (16 1 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (15 5 (:REWRITE INTEGERP-OF-*-1/2-WHEN-POWER-OF-2P))
 (15 5 (:REWRITE COMMUTATIVITY-OF-*))
 (13 13 (:REWRITE DEFAULT-<-2))
 (13 13 (:REWRITE DEFAULT-<-1))
 (13 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (10 10 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (10 10 (:REWRITE DEFAULT-*-2))
 (10 10 (:REWRITE DEFAULT-*-1))
 (8 2 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (7 1 (:REWRITE GETBIT-IDENTITY))
 (7 1 (:REWRITE BVCHOP-IDENTITY))
 (6 6 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (6 6 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (6 6 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (6 6 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (6 6 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (6 6 (:REWRITE MOD-OF-2-WHEN-EVEN-CHEAP))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (5 5 (:REWRITE INTEGERP-OF-HALF-WHEN-MULT-OF-EXPT))
 (5 5 (:REWRITE INTEGERP-OF-*))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (2 2 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1 1 (:TYPE-PRESCRIPTION BITP))
 (1 1 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE GETBIT-IDENTITY-FREE))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
(GETBIT-OF-EXPT-GEN
 (354 354 (:TYPE-PRESCRIPTION EVENP))
 (250 132 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (250 132 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (250 132 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (140 44 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (137 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (132 132 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (129 9 (:REWRITE UNSIGNED-BYTE-P-OF-EXPT2))
 (118 118 (:REWRITE DEFAULT-<-2))
 (118 118 (:REWRITE DEFAULT-<-1))
 (88 22 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (58 22 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (51 51 (:REWRITE BOUND-WHEN-USB))
 (38 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (29 29 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (29 29 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (28 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (28 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (24 8 (:REWRITE <-OF-EXPT-AND-2))
 (22 22 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (22 22 (:LINEAR EXPT-BOUND-LINEAR))
 (22 7 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (19 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (15 15 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-+-1))
 (14 14 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (14 14 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (14 14 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (13 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (12 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (12 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (12 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (11 11 (:LINEAR EXPT-BOUND-LINEAR-2))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (8 8 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (8 8 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (7 7 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (7 7 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (3 1 (:REWRITE SLICE-OF-EXPT-HIGH))
 (3 1 (:REWRITE SLICE-OF-EXPT))
 (3 1 (:REWRITE GETBIT-OF-EXPT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE NOT-EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-IF-WHEN-CONSTANTS))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(GETBIT-OF-IF-TWO-CONSTANTS)
(GETBIT-OF-ASH
 (87 87 (:TYPE-PRESCRIPTION EVENP))
 (76 1 (:REWRITE FLOOR-WHEN-<))
 (76 1 (:REWRITE FLOOR-MUST-BE-1))
 (72 1 (:REWRITE FLOOR-WHEN-<=))
 (58 29 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (58 29 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (58 29 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (42 20 (:REWRITE DEFAULT-<-1))
 (31 20 (:REWRITE DEFAULT-<-2))
 (29 29 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (29 29 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (29 2 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (22 7 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (19 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF))
 (15 1 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (13 2 (:REWRITE DEFAULT-*-2))
 (13 2 (:REWRITE DEFAULT-*-1))
 (12 1 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (12 1 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (12 1 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (12 1 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (12 1 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 3 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (9 1 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG2))
 (8 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (8 2 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (8 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (7 3 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (6 6 (:LINEAR <=-OF-*-AND-*-SAME-LINEAR))
 (6 6 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (6 6 (:LINEAR <-OF-*-AND-*-LINEAR))
 (6 2 (:REWRITE CANCEL-FROM-<-OF-+))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (3 3 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (3 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (3 2 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 (1 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-IF-TWO-CONSTANTS))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE GETBIT-OF-IF-TWO-CONSTANTS))
 (1 1 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (1 1 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (1 1 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 )
(GETBIT-WHEN-NEGATIVE-AND-SMALL
 (195 195 (:TYPE-PRESCRIPTION EVENP))
 (130 65 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (130 65 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (130 65 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (65 65 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (65 65 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (24 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (23 1 (:REWRITE FLOOR-WHEN-<=))
 (23 1 (:REWRITE FLOOR-MUST-BE-1))
 (18 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (18 1 (:REWRITE LOGTAIL-BECOMES-0))
 (15 1 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (13 13 (:REWRITE DEFAULT-<-2))
 (13 13 (:REWRITE DEFAULT-<-1))
 (12 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (12 1 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (12 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (12 1 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (8 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (7 7 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (7 7 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 2 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (6 1 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (4 4 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (4 1 (:DEFINITION POSP))
 (3 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (2 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (2 2 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (2 2 (:LINEAR EXPT-BOUND-LINEAR-2))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(GETBIT-WHEN-<
 (99 99 (:TYPE-PRESCRIPTION EVENP))
 (66 33 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (66 33 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (66 33 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (33 33 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (24 9 (:REWRITE DEFAULT-<-2))
 (21 9 (:REWRITE DEFAULT-<-1))
 (12 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (12 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (9 9 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (9 9 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (9 9 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (7 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (7 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (6 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (6 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (6 1 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (2 2 (:LINEAR EXPT-BOUND-LINEAR))
 (2 2 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (2 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (2 1 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:LINEAR EXPT-BOUND-LINEAR-2))
 )
(GETBIT-WHEN-<-FREE
 (36 36 (:TYPE-PRESCRIPTION EVENP))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (12 12 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN-<-OF-CONSTANT
 (57 57 (:TYPE-PRESCRIPTION EVENP))
 (38 19 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (38 19 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (38 19 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (19 19 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (19 19 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (19 19 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN-<=
 (36 36 (:TYPE-PRESCRIPTION EVENP))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (12 12 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN-<=-FREE
 (36 36 (:TYPE-PRESCRIPTION EVENP))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (24 12 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (12 12 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN-<=-OF-CONSTANT
 (57 57 (:TYPE-PRESCRIPTION EVENP))
 (38 19 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (38 19 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (38 19 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (19 19 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (19 19 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (19 19 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN->=
 (8703 4 (:REWRITE BVCHOP-IDENTITY))
 (4226 10 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (3234 3234 (:TYPE-PRESCRIPTION EVENP))
 (2168 1090 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (2168 1090 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (2168 1090 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1090 1090 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1030 95 (:REWRITE DEFAULT-*-2))
 (614 10 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (606 10 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (531 9 (:REWRITE FLOOR-WHEN-<=))
 (427 88 (:REWRITE DEFAULT-<-1))
 (425 95 (:REWRITE DEFAULT-*-1))
 (368 16 (:REWRITE DEFAULT-UNARY-/))
 (319 88 (:REWRITE DEFAULT-<-2))
 (296 8 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (237 4 (:REWRITE UNSIGNED-BYTE-P-OF-FLOOR))
 (196 10 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (180 10 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (135 9 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (108 9 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (108 9 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (94 13 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (92 92 (:TYPE-PRESCRIPTION <=-OF-FLOOR-WHEN-<-TYPE))
 (92 92 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (92 92 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (92 92 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (92 92 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (85 1 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (64 9 (:REWRITE DEFAULT-+-2))
 (56 1 (:REWRITE LOGTAIL-BECOMES-0))
 (43 43 (:REWRITE BOUND-WHEN-USB))
 (36 11 (:REWRITE <-OF-1-AND-EXPT-GEN))
 (33 33 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (33 33 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (26 2 (:LINEAR FLOOR-UPPER-BOUND-STRONG-LINEAR-CHEAP))
 (22 10 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (20 20 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (20 20 (:LINEAR <-OF-*-AND-*-LINEAR))
 (20 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (20 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (16 16 (:TYPE-PRESCRIPTION INTEGERP-OF-*-OF-/-OF-EXPT2-AND-EXPT2-TYPE))
 (14 5 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (14 5 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (12 12 (:TYPE-PRESCRIPTION INTEGERP-OF-*-OF-EXPT2-AND-/-OF-EXPT2-TYPE))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (10 10 (:LINEAR EXPT-BOUND-LINEAR))
 (10 10 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (10 10 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (10 10 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (10 10 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (9 9 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (9 9 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (9 9 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (9 9 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (9 9 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (9 9 (:REWRITE FLOOR-WHEN-<))
 (9 9 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (9 9 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (9 9 (:REWRITE DEFAULT-+-1))
 (8 8 (:REWRITE <-OF-FLOOR-OF-CONSTANT-AND-CONSTANT-GEN))
 (6 1 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (5 5 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (5 5 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (5 5 (:LINEAR EXPT-BOUND-LINEAR-2))
 (4 4 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (4 4 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (4 1 (:REWRITE <-OF-EXPT-AND-EXPT-SAME-BASE))
 (4 1 (:REWRITE <-OF-2-AND-EXPT2))
 (4 1 (:DEFINITION POSP))
 (3 3 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (3 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR-2))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (2 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE NOT-EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT))
 (1 1 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 )
(GETBIT-WHEN->=-FREE
 (63 63 (:TYPE-PRESCRIPTION EVENP))
 (42 21 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (42 21 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (42 21 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (21 21 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN->=-OF-CONSTANT
 (63 63 (:TYPE-PRESCRIPTION EVENP))
 (42 21 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (42 21 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (42 21 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (21 21 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN->
 (672 672 (:TYPE-PRESCRIPTION EVENP))
 (448 224 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (448 224 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (448 224 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (224 224 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (118 11 (:REWRITE BOUND-WHEN-USB))
 (72 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (39 1 (:REWRITE CANCEL-FROM-<-OF-+))
 (26 4 (:REWRITE DEFAULT-+-2))
 (25 14 (:REWRITE DEFAULT-<-2))
 (25 14 (:REWRITE DEFAULT-<-1))
 (16 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (14 14 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (14 14 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (10 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (10 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (8 8 (:LINEAR EXPT-BOUND-LINEAR))
 (8 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (8 8 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (5 2 (:REWRITE <-OF-EXPT-AND-EXPT-SAME-BASE))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (4 4 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (4 4 (:LINEAR EXPT-BOUND-LINEAR-2))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-WHEN->-FREE
 (66 66 (:TYPE-PRESCRIPTION EVENP))
 (44 22 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (44 22 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (44 22 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (22 22 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN->-OF-CONSTANT
 (66 66 (:TYPE-PRESCRIPTION EVENP))
 (44 22 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (44 22 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (44 22 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (22 22 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-WHEN->=-OF-HIGH-HELPER
 (1740 1740 (:TYPE-PRESCRIPTION EVENP))
 (1160 580 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1160 580 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1160 580 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (580 580 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (207 3 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (192 6 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (191 53 (:REWRITE DEFAULT-+-2))
 (136 70 (:REWRITE DEFAULT-<-2))
 (120 53 (:REWRITE DEFAULT-+-1))
 (112 1 (:LINEAR SLICE-UPPER-BOUND-LINEAR))
 (108 3 (:LINEAR EXPT-HALF-LINEAR))
 (104 1 (:REWRITE USB-PLUS-FROM-BOUNDS))
 (101 101 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (101 101 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (89 8 (:REWRITE DEFAULT-*-2))
 (70 70 (:REWRITE DEFAULT-<-1))
 (54 8 (:REWRITE DEFAULT-*-1))
 (52 17 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (45 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (44 20 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (44 20 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (40 10 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (40 10 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (23 2 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF--1))
 (22 10 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (22 10 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (16 1 (:REWRITE UNSIGNED-BYTE-P-OF-EXPT2))
 (12 3 (:REWRITE <-OF-EXPT-AND-EXPT-SAME-BASE))
 (11 1 (:REWRITE UNSIGNED-BYTE-P-OF-+))
 (9 3 (:REWRITE SLICE-OUT-OF-ORDER))
 (9 3 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (7 7 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (7 7 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (6 6 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (6 1 (:REWRITE COMMUTATIVITY-2-OF-+))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (3 3 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (3 3 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-NOT-LONGER))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-CONSTANT-STRONG))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN->-FREE))
 (1 1 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-EXPT2-AND-CONSTANT))
 )
(GETBIT-WHEN->=-OF-BVCHOP-AND-CONSTANT-HIGH
 (1077 1077 (:TYPE-PRESCRIPTION EVENP))
 (720 361 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (720 361 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (720 361 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (361 361 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (224 2 (:REWRITE BVCHOP-BOUND-2))
 (101 54 (:REWRITE DEFAULT-<-2))
 (96 54 (:REWRITE DEFAULT-<-1))
 (93 11 (:REWRITE BVCHOP-IDENTITY))
 (82 16 (:REWRITE DEFAULT-+-2))
 (72 2 (:LINEAR EXPT-HALF-LINEAR))
 (62 62 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (62 62 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (60 16 (:REWRITE DEFAULT-+-1))
 (33 9 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (32 32 (:REWRITE BOUND-WHEN-USB))
 (32 10 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (28 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (26 2 (:REWRITE DEFAULT-*-2))
 (24 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (24 8 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (24 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (24 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (24 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (18 9 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (17 9 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (14 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (12 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (12 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (11 11 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (11 11 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (11 11 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (11 11 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (10 10 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (9 9 (:TYPE-PRESCRIPTION POSP))
 (9 9 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (9 9 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (7 7 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (7 7 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (7 7 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 2 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->-FREE))
 (3 3 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE DEFAULT-*-1))
 (2 2 (:REWRITE BVCHOP-NUMERIC-BOUND))
 (2 2 (:REWRITE BVCHOP-BOUND))
 (2 2 (:REWRITE <-OF-BVCHOP-WHEN-<-OF-BVCHOP-BIGGER))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(GETBIT-WHEN-<-OF-BVCHOP-AND-CONSTANT-HIGH
 (1068 1068 (:TYPE-PRESCRIPTION EVENP))
 (714 358 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (714 358 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (714 358 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (358 358 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (149 1 (:REWRITE BVCHOP-BOUND-2))
 (97 20 (:REWRITE DEFAULT-+-2))
 (95 54 (:REWRITE DEFAULT-<-1))
 (93 11 (:REWRITE BVCHOP-IDENTITY))
 (88 54 (:REWRITE DEFAULT-<-2))
 (72 2 (:LINEAR EXPT-HALF-LINEAR))
 (64 20 (:REWRITE DEFAULT-+-1))
 (62 62 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (62 62 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (62 3 (:REWRITE GETBIT-WHEN->-FREE))
 (34 12 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (33 9 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (32 32 (:REWRITE BOUND-WHEN-USB))
 (28 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (26 2 (:REWRITE DEFAULT-*-2))
 (24 12 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (24 8 (:REWRITE <-OF-+-OF---AND-0-ARG1))
 (24 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (24 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (24 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (18 9 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (17 9 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (14 2 (:LINEAR <=-OF-BVCHOP-SAME-LINEAR))
 (12 12 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (12 12 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (12 12 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (12 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (12 6 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (11 11 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (11 11 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (11 11 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (11 11 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (9 9 (:TYPE-PRESCRIPTION POSP))
 (9 9 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (9 9 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (7 1 (:REWRITE UNSIGNED-BYTE-P-OF-BVCHOP-WHEN-ALREADY))
 (6 6 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (6 6 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (6 6 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 2 (:REWRITE +-OF-EXPT2-OF-ONE-LESS-AND-EXPT2-OF-ONE-LESS))
 (4 1 (:REWRITE UNSIGNED-BYTE-P-OF-BVCHOP))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-BVCHOP-AND-CONSTANT-HIGH))
 (3 3 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (3 1 (:REWRITE UNSIGNED-BYTE-P-OF-BVCHOP-ONE-MORE-HELPER))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-0-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE DEFAULT-*-1))
 (2 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE BVCHOP-NUMERIC-BOUND))
 (1 1 (:REWRITE BVCHOP-BOUND-OTHER))
 (1 1 (:REWRITE BVCHOP-BOUND))
 (1 1 (:REWRITE <-OF-BVCHOP-WHEN-<-OF-BVCHOP-BIGGER))
 )
(NOT-0-WHEN-BIT-NOT-0
 (9 9 (:TYPE-PRESCRIPTION EVENP))
 (6 3 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (6 3 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (6 3 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(GETBIT-OF-FLOOR-OF-2
 (3440 3 (:REWRITE BVCHOP-IDENTITY))
 (3419 16 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (1539 6 (:LINEAR MY-FLOOR-LOWER-BOUND-LINEAR))
 (1515 6 (:LINEAR FLOOR-UPPER-BOUND-LINEAR))
 (1473 17 (:REWRITE FLOOR-MUST-BE-1))
 (1376 17 (:REWRITE FLOOR-WHEN-<))
 (1273 17 (:REWRITE FLOOR-WHEN-<=))
 (1074 21 (:LINEAR <-OF-EXPT2-SAME-LINEAR))
 (909 909 (:TYPE-PRESCRIPTION EVENP))
 (676 71 (:REWRITE DEFAULT-*-2))
 (617 314 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (617 314 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (617 314 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (384 42 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (384 42 (:LINEAR <=-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (370 186 (:REWRITE DEFAULT-<-2))
 (339 186 (:REWRITE DEFAULT-<-1))
 (314 314 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (313 71 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONNEGATIVE-AND-NONPOSITIVE-TYPE))
 (153 17 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (123 101 (:REWRITE DEFAULT-+-2))
 (118 2 (:LINEAR <-OF-*-SAME-LINEAR-2))
 (116 2 (:LINEAR <-OF-*-SAME-LINEAR-SPECIAL))
 (102 17 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (102 17 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (101 101 (:REWRITE DEFAULT-+-1))
 (98 42 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (97 97 (:REWRITE BOUND-WHEN-USB))
 (92 4 (:REWRITE DEFAULT-UNARY-/))
 (84 84 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (84 84 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (84 6 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (79 21 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (79 21 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (71 71 (:TYPE-PRESCRIPTION <=-OF-FLOOR-WHEN-<-TYPE))
 (71 71 (:TYPE-PRESCRIPTION <=-OF-FLOOR-AND-0-WHEN-NONPOSITIVE-AND-NONNEGATIVE-TYPE))
 (71 71 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONPOSITIVE-TYPE))
 (71 71 (:TYPE-PRESCRIPTION <=-OF-0-AND-FLOOR-WHEN-BOTH-NONNEGATIVE-TYPE))
 (71 71 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-POSITIVE-AND-NEGATIVE-TYPE))
 (71 71 (:TYPE-PRESCRIPTION <-OF-FLOOR-AND-0-WHEN-NEGATIVE-AND-POSITIVE-TYPE))
 (71 71 (:REWRITE DEFAULT-*-1))
 (67 41 (:REWRITE ZIP-OPEN))
 (51 3 (:REWRITE SLICE-TOO-HIGH-IS-0))
 (49 21 (:LINEAR <=-OF-2-AND-EXPT2-LINEAR))
 (49 5 (:REWRITE UNSIGNED-BYTE-P-OF-FLOOR))
 (49 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (49 3 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (42 42 (:LINEAR EXPT-BOUND-LINEAR))
 (42 42 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (42 42 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-BASE-LINEAR))
 (42 3 (:REWRITE UNSIGNED-BYTE-P-OF-FLOOR-BY-2-STRONG))
 (38 6 (:LINEAR FLOOR-BOUND-STRICT-LINEAR))
 (35 3 (:REWRITE LOGTAIL-BECOMES-0))
 (25 17 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (25 17 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (24 8 (:REWRITE COMMUTATIVITY-OF-*))
 (21 21 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (21 21 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 (21 21 (:LINEAR EXPT-BOUND-LINEAR-2))
 (21 6 (:LINEAR FLOOR-BOUND-ARG1-LINEAR))
 (17 17 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (17 17 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (17 17 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (17 17 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (16 16 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (16 16 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (16 16 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (16 16 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (14 14 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (13 13 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (13 13 (:REWRITE <-OF-CONSTANT-AND-*-OF-CONSTANT))
 (12 3 (:DEFINITION NATP))
 (11 3 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (11 3 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER))
 (11 3 (:REWRITE LOGTAIL-WHEN-NOT-INTEGERP-ARG2))
 (11 3 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (9 1 (:REWRITE SLICE-OF-FLOOR-OF-EXPT-CONSTANT-VERSION))
 (8 3 (:REWRITE SLICE-OUT-OF-ORDER))
 (8 3 (:REWRITE LOGTAIL-WHEN-NOT-POSP-ARG1))
 (7 5 (:REWRITE <-OF-FLOOR-OF-CONSTANT-AND-CONSTANT-GEN))
 (6 6 (:REWRITE <-OF-*-OF-CONSTANT-AND-CONSTANT))
 (6 6 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR=-2))
 (6 6 (:LINEAR FLOOR-WEAK-MONOTONE-LINEAR-1))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (6 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (5 3 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (5 3 (:REWRITE SLICE-WHEN-INDICES-ARE-NEGATIVE))
 (5 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (4 4 (:LINEAR <=-OF-*-AND-*-SAME-LINEAR))
 (4 4 (:LINEAR <=-OF-*-AND-*-SAME-ALT-LINEAR))
 (4 4 (:LINEAR <-OF-*-AND-*-LINEAR))
 (4 1 (:DEFINITION POSP))
 (3 3 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (3 3 (:REWRITE SLICE-TOO-HIGH-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (3 3 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->=-OF-BVCHOP-AND-CONSTANT-HIGH))
 (3 3 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN->-FREE))
 (3 3 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-<-OF-BVCHOP-AND-CONSTANT-HIGH))
 (3 3 (:REWRITE DEFAULT-UNARY-MINUS))
 (3 3 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (3 3 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (3 3 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (3 3 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (3 3 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (3 3 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 (3 1 (:REWRITE CANCEL-FROM-<-OF-+))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-4))
 (2 2 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-3))
 (2 2 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-2))
 (2 2 (:LINEAR <-OF-*-AND-*-SAME-LINEAR-1))
 (1 1 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:REWRITE NOT-EQUAL-OF-BVCHOP-WHEN-EQUAL-OF-GETBIT))
 (1 1 (:REWRITE BVCHOP-IMPOSSIBLE-VALUE))
 )
(GETBIT-OF-0-BOUND-WHEN-NEGATIVE-LINEAR
 (48 48 (:TYPE-PRESCRIPTION EVENP))
 (32 16 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (32 16 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (32 16 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 )
(INTEGERP-OF-*-OF-1/2
 (29 3 (:LINEAR MOD-BOUND-LINEAR-ARG2))
 (21 7 (:REWRITE MOD-WHEN-<-OF-0))
 (18 1 (:REWRITE GETBIT-OF-0-WHEN-BITP))
 (16 16 (:REWRITE DEFAULT-*-2))
 (16 16 (:REWRITE DEFAULT-*-1))
 (16 1 (:REWRITE BITP-BECOMES-UNSIGNED-BYTE-P))
 (13 13 (:REWRITE DEFAULT-<-2))
 (13 13 (:REWRITE DEFAULT-<-1))
 (13 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (12 3 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (7 7 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (7 3 (:REWRITE INTEGERP-OF-*-1/2-WHEN-POWER-OF-2P))
 (7 1 (:REWRITE GETBIT-IDENTITY))
 (7 1 (:REWRITE BVCHOP-IDENTITY))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 2 (:REWRITE MOD-WHEN-<))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (5 5 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (4 4 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (4 4 (:REWRITE INTEGERP-OF-HALF-WHEN-MULT-OF-EXPT))
 (4 4 (:REWRITE INTEGERP-OF-*))
 (3 3 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (3 3 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (2 2 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (2 2 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (2 2 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (2 2 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (2 2 (:REWRITE MOD-OF-2-WHEN-EVEN-CHEAP))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 1 (:REWRITE GETBIT-WHEN-NOT-1))
 (2 1 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (1 1 (:TYPE-PRESCRIPTION BITP))
 (1 1 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (1 1 (:REWRITE GETBIT-WHEN-VAL-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (1 1 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (1 1 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (1 1 (:REWRITE GETBIT-WHEN->=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN->=-OF-BVCHOP-AND-CONSTANT-HIGH))
 (1 1 (:REWRITE GETBIT-WHEN->-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN->-FREE))
 (1 1 (:REWRITE GETBIT-WHEN-<=-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-<-OF-CONSTANT))
 (1 1 (:REWRITE GETBIT-WHEN-<-OF-BVCHOP-AND-CONSTANT-HIGH))
 (1 1 (:REWRITE GETBIT-IDENTITY-FREE))
 (1 1 (:REWRITE BVCHOP-WITH-N-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-WITH-N-NEGATIVE))
 (1 1 (:REWRITE BVCHOP-WHEN-SIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCHOP-WHEN-NOT-NATP-ARG1-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER-CHEAP))
 (1 1 (:REWRITE BVCHOP-WHEN-I-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCHOP-SUBST-CONSTANT))
 (1 1 (:REWRITE BVCHOP-OF-EXPT-ALT))
 (1 1 (:REWRITE BVCHOP-IDENTITY-CHEAP))
 )
