(FOO)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$NOT-NORMALIZED$)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR$1)
(BAR-BEFORE-VS-AFTER-0)
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY)
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR-SIMP)
(BAR-BEFORE-VS-AFTER-0)
(BAR-SIMP$NOT-NORMALIZED)
(BAR-SIMP-COPY)
(BAR-SIMP-COPY-DEF)
(BAR-SIMP-IS-BAR-SIMP-COPY)
(BAR-SIMPLIFIED-LEMMA)
(BAR-SIMPLIFIED)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR-SIMP)
(BAR-BEFORE-VS-AFTER-0)
(BAR-SIMP$NOT-NORMALIZED)
(BAR-SIMP-COPY)
(BAR-SIMP-COPY-DEF)
(BAR-SIMP-IS-BAR-SIMP-COPY)
(BAR-SIMPLIFIED-LEMMA)
(BAR-SIMPLIFIED)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR-SIMP)
(BAR-BEFORE-VS-AFTER-0)
(BAR-SIMP$NOT-NORMALIZED)
(BAR-SIMP-COPY)
(BAR-SIMP-COPY-DEF)
(BAR-SIMP-IS-BAR-SIMP-COPY)
(BAR-SIMPLIFIED-LEMMA)
(BAR-SIMPLIFIED)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(INTEGER-LISTP-OF-CDR
     (1 1 (:REWRITE DEFAULT-CDR))
     (1 1 (:REWRITE DEFAULT-CAR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(INTEGERP-OF-CAR
     (1 1 (:REWRITE DEFAULT-CAR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-LST$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-LST-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO-LST$1$NOT-NORMALIZED)
(FLAG-FOO$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-FOO$1-EQUIVALENCES)
(FOO$1-COPY)
(FOO-LST$1-COPY)
(FOO$1-COPY-DEF)
(FOO-LST$1-COPY-DEF)
(FLAG-LEMMA-FOR-FOO$1-IS-FOO$1-COPY)
(FOO$1-IS-FOO$1-COPY)
(FOO-LST$1-IS-FOO-LST$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-LST-BECOMES-FOO-LST$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO-LST-BECOMES-FOO-LST$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-LST$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO-LST$1$NOT-NORMALIZED)
(FLAG-FOO$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-FOO$1-EQUIVALENCES)
(FOO$1-COPY)
(FOO-LST$1-COPY)
(FOO$1-COPY-DEF)
(FOO-LST$1-COPY-DEF)
(FLAG-LEMMA-FOR-FOO$1-IS-FOO$1-COPY)
(FOO$1-IS-FOO$1-COPY)
(FOO-LST$1-IS-FOO-LST$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-LST-BECOMES-FOO-LST$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO-LST-BECOMES-FOO-LST$1)
(F1)
(ACL2-NUMBERP-OF-CAR
     (1 1 (:REWRITE DEFAULT-CAR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F1-HYPS)
(F2-HYPS)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F1-HYPS-PRESERVED-FOR-F1$1-LEMMA)
(F1-HYPS-PRESERVED-FOR-F1$1)
(F2-HYPS-PRESERVED-FOR-F2$1-LEMMA)
(F2-HYPS-PRESERVED-FOR-F2$1)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(FLAG-F1$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(F1)
(ACL2-NUMBERP-OF-CAR
     (1 1 (:REWRITE DEFAULT-CAR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F1-HYPS)
(F2-HYPS)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F1-HYPS-PRESERVED-FOR-F1$1-LEMMA)
(F1-HYPS-PRESERVED-FOR-F1$1)
(F2-HYPS-PRESERVED-FOR-F2$1-LEMMA)
(F2-HYPS-PRESERVED-FOR-F2$1)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(FLAG-F1$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(F1 (330 15 (:DEFINITION LENGTH))
    (285 15 (:DEFINITION LEN))
    (281 135 (:REWRITE DEFAULT-+-2))
    (187 135 (:REWRITE DEFAULT-+-1))
    (177 18 (:REWRITE INTEGERP-OF-CAR))
    (171 9 (:DEFINITION INTEGER-LISTP))
    (120 30 (:REWRITE COMMUTATIVITY-OF-+))
    (120 30 (:DEFINITION INTEGER-ABS))
    (60 60
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
    (60 60
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
    (60 60
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
    (60 60
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
    (57 57 (:TYPE-PRESCRIPTION INTEGER-LISTP))
    (56 40 (:REWRITE DEFAULT-<-2))
    (45 45
        (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
    (45 30 (:REWRITE STR::CONSP-OF-EXPLODE))
    (44 40 (:REWRITE DEFAULT-<-1))
    (37 37 (:REWRITE DEFAULT-CAR))
    (30 30 (:REWRITE DEFAULT-UNARY-MINUS))
    (30 15 (:REWRITE INTEGER-LISTP-OF-CDR))
    (30 15
        (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
    (15 15 (:TYPE-PRESCRIPTION LEN))
    (15 15
        (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
    (15 15 (:REWRITE DEFAULT-REALPART))
    (15 15 (:REWRITE DEFAULT-NUMERATOR))
    (15 15 (:REWRITE DEFAULT-IMAGPART))
    (15 15 (:REWRITE DEFAULT-DENOMINATOR))
    (10 10 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
    (5 5
       (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP)))
(ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP
     (7 3 (:REWRITE DEFAULT-CAR))
     (4 4
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (4 4
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (4 4
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (4 4
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (2 2
        (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
     (1 1 (:REWRITE DEFAULT-CDR)))
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F1-HYPS)
(F2-HYPS)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F1-HYPS-PRESERVED-FOR-F1$1-LEMMA
     (5 5 (:REWRITE DEFAULT-CDR))
     (5 5 (:REWRITE DEFAULT-CAR))
     (2 2
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (2 2
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (2 2
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (2 2
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (1 1 (:REWRITE DEFAULT-<-2))
     (1 1 (:REWRITE DEFAULT-<-1)))
(F1-HYPS-PRESERVED-FOR-F1$1)
(F2-HYPS-PRESERVED-FOR-F2$1-LEMMA (1 1 (:REWRITE DEFAULT-CDR))
                                  (1 1 (:REWRITE DEFAULT-CAR)))
(F2-HYPS-PRESERVED-FOR-F2$1)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(FLAG-F1$1 (330 15 (:DEFINITION LENGTH))
           (285 15 (:DEFINITION LEN))
           (281 135 (:REWRITE DEFAULT-+-2))
           (218 40 (:REWRITE DEFAULT-<-2))
           (187 135 (:REWRITE DEFAULT-+-1))
           (177 18 (:REWRITE INTEGERP-OF-CAR))
           (171 9 (:DEFINITION INTEGER-LISTP))
           (162 18
                (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
           (156 9 (:DEFINITION ACL2-NUMBER-LISTP))
           (120 30 (:REWRITE COMMUTATIVITY-OF-+))
           (120 30 (:DEFINITION INTEGER-ABS))
           (69 69
               (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                         . 2))
           (69 69
               (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                         . 1))
           (69 69
               (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                         . 2))
           (69 69
               (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                         . 1))
           (57 57 (:TYPE-PRESCRIPTION INTEGER-LISTP))
           (52 52 (:REWRITE DEFAULT-CAR))
           (45 45
               (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
           (45 30 (:REWRITE STR::CONSP-OF-EXPLODE))
           (44 40 (:REWRITE DEFAULT-<-1))
           (42 42
               (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
           (30 30 (:REWRITE DEFAULT-UNARY-MINUS))
           (30 15 (:REWRITE INTEGER-LISTP-OF-CDR))
           (30 15
               (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
           (20 20
               (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
           (15 15 (:TYPE-PRESCRIPTION LEN))
           (15 15
               (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
           (15 15 (:REWRITE DEFAULT-REALPART))
           (15 15 (:REWRITE DEFAULT-NUMERATOR))
           (15 15 (:REWRITE DEFAULT-IMAGPART))
           (15 15 (:REWRITE DEFAULT-DENOMINATOR))
           (10 10 (:LINEAR ACL2-COUNT-WHEN-MEMBER)))
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(F1)
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F3$NOT-NORMALIZED)
(F4$NOT-NORMALIZED)
(F5$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F4-BEFORE-VS-AFTER-0)
(F5-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(F3$1$NOT-NORMALIZED)
(F4$1$NOT-NORMALIZED)
(F5$1$NOT-NORMALIZED)
(FLAG-F1$1 (4 2 (:TYPE-PRESCRIPTION RETURN-LAST))
           (2 2
              (:TYPE-PRESCRIPTION THROW-NONEXEC-ERROR)))
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F3$1-COPY)
(F4$1-COPY)
(F5$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(F3$1-COPY-DEF)
(F4$1-COPY-DEF)
(F5$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F3$1-IS-F3$1-COPY)
(F4$1-IS-F4$1-COPY)
(F5$1-IS-F5$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F3-BECOMES-F3$1-LEMMA)
(F4-BECOMES-F4$1-LEMMA)
(F5-BECOMES-F5$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(F3-BECOMES-F3$1)
(F4-BECOMES-F4$1)
(F5-BECOMES-F5$1)
(F1)
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(FLAG-F1$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(F1 (1364 62 (:DEFINITION LENGTH))
    (1250 597 (:REWRITE DEFAULT-+-2))
    (1178 62 (:DEFINITION LEN))
    (857 597 (:REWRITE DEFAULT-+-1))
    (496 124 (:DEFINITION INTEGER-ABS))
    (204 204
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 2))
    (204 204
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 1))
    (204 204
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 2))
    (204 204
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 1))
    (186 186
         (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
    (186 124 (:REWRITE STR::CONSP-OF-EXPLODE))
    (182 140 (:REWRITE DEFAULT-<-2))
    (168 140 (:REWRITE DEFAULT-<-1))
    (124 124 (:REWRITE DEFAULT-UNARY-MINUS))
    (124 62
         (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
    (73 73 (:REWRITE DEFAULT-CAR))
    (62 62 (:TYPE-PRESCRIPTION LEN))
    (62 62
        (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
    (62 62 (:REWRITE DEFAULT-REALPART))
    (62 62 (:REWRITE DEFAULT-NUMERATOR))
    (62 62 (:REWRITE DEFAULT-IMAGPART))
    (62 62 (:REWRITE DEFAULT-DENOMINATOR))
    (44 44 (:LINEAR ACL2-COUNT-WHEN-MEMBER)))
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(FLAG-F1$1 (2684 122 (:DEFINITION LENGTH))
           (2466 1177 (:REWRITE DEFAULT-+-2))
           (2318 122 (:DEFINITION LEN))
           (1690 1177 (:REWRITE DEFAULT-+-1))
           (976 244 (:DEFINITION INTEGER-ABS))
           (402 402
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                          . 2))
           (402 402
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                          . 1))
           (402 402
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                          . 2))
           (402 402
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                          . 1))
           (366 366
                (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
           (366 244 (:REWRITE STR::CONSP-OF-EXPLODE))
           (360 276 (:REWRITE DEFAULT-<-2))
           (332 276 (:REWRITE DEFAULT-<-1))
           (244 244 (:REWRITE DEFAULT-UNARY-MINUS))
           (244 122
                (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
           (144 144 (:REWRITE DEFAULT-CAR))
           (122 122 (:TYPE-PRESCRIPTION LEN))
           (122 122
                (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
           (122 122 (:REWRITE DEFAULT-REALPART))
           (122 122 (:REWRITE DEFAULT-NUMERATOR))
           (122 122 (:REWRITE DEFAULT-IMAGPART))
           (122 122 (:REWRITE DEFAULT-DENOMINATOR))
           (88 88 (:LINEAR ACL2-COUNT-WHEN-MEMBER)))
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(FOO (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO)
(DOUBLE)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(DOUBLE)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(DOUBLE)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(DOUBLE)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(DOUBLE)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(DOUBLE-GOOD)
(DOUBLE-BAD (3 3
               (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
            (2 1 (:REWRITE DEFAULT-+-2))
            (2 1 (:REWRITE DEFAULT-+-1))
            (2 1 (:REWRITE DEFAULT-*-2))
            (1 1 (:REWRITE DEFAULT-*-1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(ZEROFN)
(DOUBLE-GOOD)
(DOUBLE-BAD)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(DOUBLE-GOOD)
(DOUBLE-BAD (3 3
               (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
            (2 1 (:REWRITE DEFAULT-+-2))
            (2 1 (:REWRITE DEFAULT-+-1))
            (2 1 (:REWRITE DEFAULT-*-2))
            (1 1 (:REWRITE DEFAULT-*-1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(INTEGERP-WRAPPER)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(MY-CDR)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA
 (318 53
      (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (106 106 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (106 53 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (56
    56
    (:REWRITE TRUE-LISTP-OF-CDR-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP))
 (53 53 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (53 53
     (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (53 53
     (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (53 53
     (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (53 53
     (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (53 53
     (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (53 53 (:REWRITE SET::IN-SET))
 (37 37 (:REWRITE DEFAULT-CDR))
 (35 35
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
               . 2))
 (35 35
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
               . 1))
 (35 35
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
               . 2))
 (35 35
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
               . 1)))
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1))
     (1 1 (:TYPE-PRESCRIPTION FOO)))
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(BAR (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1))
     (1 1 (:TYPE-PRESCRIPTION BAR)))
(BAR$NOT-NORMALIZED)
(BAR$1 (1 1 (:TYPE-PRESCRIPTION BAR$1)))
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY (1 1 (:TYPE-PRESCRIPTION BAR$1-COPY)))
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(BAR$1)
(FOO (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1))
     (1 1 (:TYPE-PRESCRIPTION FOO)))
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(BAR (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1))
     (1 1 (:TYPE-PRESCRIPTION BAR)))
(BAR$NOT-NORMALIZED)
(BAR$1 (1 1 (:TYPE-PRESCRIPTION BAR$1)))
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY (1 1 (:TYPE-PRESCRIPTION BAR$1-COPY)))
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(BAR$1)
(FOO (3 3 (:REWRITE DEFAULT-<-2))
     (3 3 (:REWRITE DEFAULT-<-1))
     (1 1 (:REWRITE ZP-OPEN))
     (1 1 (:REWRITE DEFAULT-+-2))
     (1 1 (:REWRITE DEFAULT-+-1)))
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(P0)
(P1)
(P1A)
(P2)
(P2A)
(F (1 1 (:TYPE-PRESCRIPTION F)))
(G (1 1 (:TYPE-PRESCRIPTION G)))
(P0-IMPLIES-P1A-EQUALS-P1)
(P1-AND-P2-IMPLY-F-ID)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$2)
(FOO-BEFORE-VS-AFTER-0)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA)
(FOO-BECOMES-FOO$2)
(F1 (506 23 (:DEFINITION LENGTH))
    (476 230 (:REWRITE DEFAULT-+-2))
    (437 23 (:DEFINITION LEN))
    (354 36 (:REWRITE INTEGERP-OF-CAR))
    (342 18 (:DEFINITION INTEGER-LISTP))
    (319 230 (:REWRITE DEFAULT-+-1))
    (216 54 (:REWRITE COMMUTATIVITY-OF-+))
    (200 50 (:DEFINITION INTEGER-ABS))
    (114 114 (:TYPE-PRESCRIPTION INTEGER-LISTP))
    (97 97
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
    (97 97
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
    (97 97
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
    (97 97
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
    (84 64 (:REWRITE DEFAULT-<-2))
    (75 64 (:REWRITE DEFAULT-<-1))
    (69 69
        (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
    (69 46 (:REWRITE STR::CONSP-OF-EXPLODE))
    (64 64 (:REWRITE DEFAULT-CAR))
    (60 30 (:REWRITE INTEGER-LISTP-OF-CDR))
    (50 50 (:REWRITE DEFAULT-UNARY-MINUS))
    (46 23
        (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
    (27 27 (:REWRITE DEFAULT-REALPART))
    (27 27 (:REWRITE DEFAULT-NUMERATOR))
    (27 27 (:REWRITE DEFAULT-IMAGPART))
    (27 27 (:REWRITE DEFAULT-DENOMINATOR))
    (23 23 (:TYPE-PRESCRIPTION LEN))
    (23 23
        (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
    (20 20 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
    (4 4
       (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP)))
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F3$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F3-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(F3$1$NOT-NORMALIZED)
(FLAG-F1$1 (1518 69 (:DEFINITION LENGTH))
           (1428 690 (:REWRITE DEFAULT-+-2))
           (1311 69 (:DEFINITION LEN))
           (1062 108 (:REWRITE INTEGERP-OF-CAR))
           (1026 54 (:DEFINITION INTEGER-LISTP))
           (957 690 (:REWRITE DEFAULT-+-1))
           (648 162 (:REWRITE COMMUTATIVITY-OF-+))
           (600 150 (:DEFINITION INTEGER-ABS))
           (342 342 (:TYPE-PRESCRIPTION INTEGER-LISTP))
           (291 291
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                          . 2))
           (291 291
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                          . 1))
           (291 291
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                          . 2))
           (291 291
                (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                          . 1))
           (252 192 (:REWRITE DEFAULT-<-2))
           (225 192 (:REWRITE DEFAULT-<-1))
           (207 207
                (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
           (207 138 (:REWRITE STR::CONSP-OF-EXPLODE))
           (195 195 (:REWRITE DEFAULT-CAR))
           (180 90 (:REWRITE INTEGER-LISTP-OF-CDR))
           (150 150 (:REWRITE DEFAULT-UNARY-MINUS))
           (138 69
                (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
           (81 81 (:REWRITE DEFAULT-REALPART))
           (81 81 (:REWRITE DEFAULT-NUMERATOR))
           (81 81 (:REWRITE DEFAULT-IMAGPART))
           (81 81 (:REWRITE DEFAULT-DENOMINATOR))
           (69 69 (:TYPE-PRESCRIPTION LEN))
           (69 69
               (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
           (60 60 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
           (12 12
               (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP)))
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F3$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(F3$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F3$1-IS-F3$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F3-BECOMES-F3$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(F3-BECOMES-F3$1)
(FOO)
(BAR)
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(FOO (1 1 (:TYPE-PRESCRIPTION FOO)))
(BAR)
(F (11 11 (:TYPE-PRESCRIPTION FOO)))
(F$NOT-NORMALIZED)
(F$1 (11 11 (:TYPE-PRESCRIPTION FOO)))
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(FOO (1 1 (:TYPE-PRESCRIPTION FOO)))
(BAR)
(F (11 11 (:TYPE-PRESCRIPTION FOO)))
(F$NOT-NORMALIZED)
(F$1 (11 11 (:TYPE-PRESCRIPTION FOO)))
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(FOO (1 1 (:TYPE-PRESCRIPTION FOO)))
(BAR)
(F (11 11 (:TYPE-PRESCRIPTION FOO)))
(F$NOT-NORMALIZED)
(F$1 (11 11 (:TYPE-PRESCRIPTION FOO)))
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(FOO)
(MEMBER-EQUAL-FOO (1 1 (:REWRITE SUBSETP-MEMBER . 4))
                  (1 1 (:REWRITE SUBSETP-MEMBER . 3))
                  (1 1 (:REWRITE SUBSETP-MEMBER . 2))
                  (1 1 (:REWRITE SUBSETP-MEMBER . 1))
                  (1 1 (:REWRITE INTERSECTP-MEMBER . 3))
                  (1 1 (:REWRITE INTERSECTP-MEMBER . 2)))
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(F$1)
(FOO)
(MEMBER-EQUAL-FOO (1 1 (:REWRITE SUBSETP-MEMBER . 4))
                  (1 1 (:REWRITE SUBSETP-MEMBER . 3))
                  (1 1 (:REWRITE SUBSETP-MEMBER . 2))
                  (1 1 (:REWRITE SUBSETP-MEMBER . 1))
                  (1 1 (:REWRITE INTERSECTP-MEMBER . 3))
                  (1 1 (:REWRITE INTERSECTP-MEMBER . 2)))
(MY-EQUIV)
(MY-EQUIV-IS-AN-EQUIVALENCE)
(MY-IF)
(IFF-IMPLIES-EQUAL-MY-IF-1 (38 38 (:TYPE-PRESCRIPTION MY-IF)))
(MY-EQUIV-IMPLIES-EQUAL-MY-IF-1 (24 24 (:TYPE-PRESCRIPTION MY-IF)))
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(F$1)
(FIX-TRUE-LISTP)
(MEMBER-FIX-TRUE-LISTP
     (184 40 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
     (155 40 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
     (105 2 (:REWRITE SUBSETP-OF-CONS))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 2))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 1))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 2))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 1))
     (93 7
         (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
     (46 46 (:REWRITE SUBSETP-TRANS2))
     (46 46 (:REWRITE SUBSETP-TRANS))
     (35 35 (:REWRITE SUBSETP-MEMBER . 2))
     (32 32 (:REWRITE SUBSETP-MEMBER . 4))
     (32 32 (:REWRITE INTERSECTP-MEMBER . 3))
     (32 32 (:REWRITE INTERSECTP-MEMBER . 2))
     (27 27 (:REWRITE DEFAULT-CAR))
     (19 19 (:REWRITE DEFAULT-CDR)))
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(MY-CONSP)
(MY-CDR)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$1)
(CLAUSEP)
(ALL-CLAUSEP)
(ADD-TO-CLAUSE-SET)
(UNION-CLAUSE-SETS
 (528 88
      (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (527 16 (:DEFINITION MEMBER-EQUAL))
 (478 32 (:REWRITE SUBSETP-CAR-MEMBER))
 (198 18
      (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (182 182
      (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                . 2))
 (182 182
      (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                . 1))
 (182 182
      (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                . 2))
 (182 182
      (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                . 1))
 (178 50 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (176 176 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (176 88 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (160 32 (:REWRITE MEMBER-WHEN-ATOM))
 (137 137 (:REWRITE DEFAULT-CDR))
 (100 100 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (98
    98
    (:REWRITE TRUE-LISTP-OF-CDR-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP))
 (88 88 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (88 88
     (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (88 88
     (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (88 88
     (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (88 88
     (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (88 88
     (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (88 88 (:REWRITE SET::IN-SET))
 (88 88 (:REWRITE DEFAULT-CAR))
 (50 50 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (50 50 (:REWRITE SUBSETP-TRANS2))
 (50 50 (:REWRITE SUBSETP-TRANS))
 (32 32 (:REWRITE SUBSETP-MEMBER . 4))
 (32 32 (:REWRITE SUBSETP-MEMBER . 3))
 (32 32 (:REWRITE SUBSETP-MEMBER . 2))
 (32 32 (:REWRITE SUBSETP-MEMBER . 1))
 (32 32 (:REWRITE INTERSECTP-MEMBER . 3))
 (32 32 (:REWRITE INTERSECTP-MEMBER . 2)))
(UNION-CLAUSE-SETS$NOT-NORMALIZED)
(UNION-CLAUSE-SETS$1)
(UNION-CLAUSE-SETS-BEFORE-VS-AFTER-0)
(UNION-CLAUSE-SETS$1$NOT-NORMALIZED)
(UNION-CLAUSE-SETS$1-COPY)
(UNION-CLAUSE-SETS$1-COPY-DEF)
(UNION-CLAUSE-SETS$1-IS-UNION-CLAUSE-SETS$1-COPY)
(UNION-CLAUSE-SETS-BECOMES-UNION-CLAUSE-SETS$1-LEMMA)
(UNION-CLAUSE-SETS-BECOMES-UNION-CLAUSE-SETS$1)
(UNION-CLAUSE-SETS$1)
(MY-CONSP)
(MY-CDR)
(F1 (1 1 (:TYPE-PRESCRIPTION F1)))
(F1-ID (23 20 (:REWRITE DEFAULT-CDR))
       (16 13 (:REWRITE DEFAULT-CAR))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                     . 2))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                     . 1))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                     . 2))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                     . 1)))
(F1$NOT-NORMALIZED)
(F1$1 (1 1 (:TYPE-PRESCRIPTION F1$1)))
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY (1 1 (:TYPE-PRESCRIPTION F1$1-COPY)))
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$1)
(MY-CONSP)
(MY-CDR)
(F1 (1 1 (:TYPE-PRESCRIPTION F1)))
(F1-ID (23 20 (:REWRITE DEFAULT-CDR))
       (16 13 (:REWRITE DEFAULT-CAR))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                     . 2))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                     . 1))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                     . 2))
       (13 13
           (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                     . 1)))
(F1$NOT-NORMALIZED)
(F1$1 (1 1 (:TYPE-PRESCRIPTION F1$1)))
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY (1 1 (:TYPE-PRESCRIPTION F1$1-COPY)))
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$1 (2 2 (:REWRITE DEFAULT-CDR))
      (2 2
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 2))
      (2 2
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 1))
      (2 2
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 2))
      (2 2
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 1)))
(F1$NOT-NORMALIZED)
(F1$1 (1 1 (:TYPE-PRESCRIPTION F1$1)))
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY (1 1 (:TYPE-PRESCRIPTION F1$1-COPY)))
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$1)
(K)
(FOO (3 3 (:TYPE-PRESCRIPTION K)))
(FOO$NOT-NORMALIZED)
(FOO$1 (3 3 (:TYPE-PRESCRIPTION K)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(F1A)
(F1A$NOT-NORMALIZED)
(F1A$1)
(F1A-BEFORE-VS-AFTER-0)
(F1A$1$NOT-NORMALIZED)
(F1A$1-COPY)
(F1A$1-COPY-DEF)
(F1A$1-IS-F1A$1-COPY)
(F1A-BECOMES-F1A$1-LEMMA)
(F1A-BECOMES-F1A$1)
(F1B)
(F1B$NOT-NORMALIZED)
(F1B$1)
(F1B-BEFORE-VS-AFTER-0)
(F1B$1$NOT-NORMALIZED)
(F1B$1-COPY)
(F1B$1-COPY-DEF)
(F1B$1-IS-F1B$1-COPY)
(F1B-BECOMES-F1B$1-LEMMA)
(F1B-BECOMES-F1B$1)
(F1C)
(F1C$NOT-NORMALIZED)
(F1C$1)
(F1C-BEFORE-VS-AFTER-0)
(F1C$1$NOT-NORMALIZED)
(F1C$1-COPY)
(F1C$1-COPY-DEF)
(F1C$1-IS-F1C$1-COPY)
(F1C-BECOMES-F1C$1-LEMMA)
(F1C-BECOMES-F1C$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F3)
(F3$NOT-NORMALIZED)
(F3$1)
(F3-BEFORE-VS-AFTER-0)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY)
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA)
(F3-BECOMES-F3$1)
(F4)
(F4$NOT-NORMALIZED)
(F4$1)
(F4-BEFORE-VS-AFTER-0)
(F4$1$NOT-NORMALIZED)
(F4$1-COPY)
(F4$1-COPY-DEF)
(F4$1-IS-F4$1-COPY)
(F4-BECOMES-F4$1-LEMMA)
(F4-BECOMES-F4$1)
(F5A)
(F5A$NOT-NORMALIZED)
(F5A$1)
(F5A-BEFORE-VS-AFTER-0)
(F5A$1$NOT-NORMALIZED)
(F5A$1-COPY)
(F5A$1-COPY-DEF)
(F5A$1-IS-F5A$1-COPY)
(F5A-BECOMES-F5A$1-LEMMA)
(F5A-BECOMES-F5A$1)
(F5B)
(F5B$NOT-NORMALIZED)
(F5B$1)
(F5B-BEFORE-VS-AFTER-0)
(F5B$1$NOT-NORMALIZED)
(F5B$1-COPY)
(F5B$1-COPY-DEF)
(F5B$1-IS-F5B$1-COPY)
(F5B-BECOMES-F5B$1-LEMMA)
(F5B-BECOMES-F5B$1)
(F6)
(F6$NOT-NORMALIZED)
(F6$1)
(F6-BEFORE-VS-AFTER-0)
(F6$1$NOT-NORMALIZED)
(F6$1-COPY)
(F6$1-COPY-DEF)
(F6$1-IS-F6$1-COPY)
(F6-BECOMES-F6$1-LEMMA)
(F6-BECOMES-F6$1)
(F7A)
(F7A$NOT-NORMALIZED)
(F7A$1)
(F7A-BEFORE-VS-AFTER-0)
(F7A$1$NOT-NORMALIZED)
(F7A$1-COPY)
(F7A$1-COPY-DEF)
(F7A$1-IS-F7A$1-COPY)
(F7A-BECOMES-F7A$1-LEMMA)
(F7A-BECOMES-F7A$1)
(F7B)
(F7B$NOT-NORMALIZED)
(F7B$1)
(F7B-BEFORE-VS-AFTER-0)
(F7B$1$NOT-NORMALIZED)
(F7B$1-COPY)
(F7B$1-COPY-DEF)
(F7B$1-IS-F7B$1-COPY)
(F7B-BECOMES-F7B$1-LEMMA)
(F7B-BECOMES-F7B$1)
(F8A)
(F8A$NOT-NORMALIZED)
(F8A$1)
(F8A-BEFORE-VS-AFTER-0)
(F8A$1$NOT-NORMALIZED)
(F8A$1-COPY)
(F8A$1-COPY-DEF)
(F8A$1-IS-F8A$1-COPY)
(F8A-BECOMES-F8A$1-LEMMA)
(F8A-BECOMES-F8A$1)
(F8B)
(F8B$NOT-NORMALIZED)
(F8B$1)
(F8B-BEFORE-VS-AFTER-0)
(F8B$1$NOT-NORMALIZED)
(F8B$1-COPY)
(F8B$1-COPY-DEF)
(F8B$1-IS-F8B$1-COPY)
(F8B-BECOMES-F8B$1-LEMMA)
(F8B-BECOMES-F8B$1)
(F9A)
(F9A$NOT-NORMALIZED)
(F9A$1)
(F9A-BEFORE-VS-AFTER-0)
(F9A$1$NOT-NORMALIZED)
(F9A$1-COPY)
(F9A$1-COPY-DEF)
(F9A$1-IS-F9A$1-COPY)
(F9A-BECOMES-F9A$1-LEMMA)
(F9A-BECOMES-F9A$1)
(F9B)
(F9B$NOT-NORMALIZED)
(F9B$1)
(F9B-BEFORE-VS-AFTER-0)
(F9B$1$NOT-NORMALIZED)
(F9B$1-COPY)
(F9B$1-COPY-DEF)
(F9B$1-IS-F9B$1-COPY)
(F9B-BECOMES-F9B$1-LEMMA)
(F9B-BECOMES-F9B$1)
(F10A (5 5 (:TYPE-PRESCRIPTION IDENTITY)))
(F10A$NOT-NORMALIZED)
(F10A$1)
(F10A-BEFORE-VS-AFTER-0)
(F10A$1$NOT-NORMALIZED)
(F10A$1-COPY)
(F10A$1-COPY-DEF)
(F10A$1-IS-F10A$1-COPY)
(F10A-BECOMES-F10A$1-LEMMA)
(F10A-BECOMES-F10A$1)
(F10B (5 5 (:TYPE-PRESCRIPTION IDENTITY)))
(F10B$NOT-NORMALIZED)
(F10B$1)
(F10B-BEFORE-VS-AFTER-0)
(F10B$1$NOT-NORMALIZED)
(F10B$1-COPY)
(F10B$1-COPY-DEF)
(F10B$1-IS-F10B$1-COPY)
(F10B-BECOMES-F10B$1-LEMMA)
(F10B-BECOMES-F10B$1)
(F11 (12 12 (:TYPE-PRESCRIPTION IDENTITY)))
(F11$NOT-NORMALIZED)
(F11$1)
(F11-BEFORE-VS-AFTER-0)
(F11$1$NOT-NORMALIZED)
(F11$1-COPY)
(F11$1-COPY-DEF)
(F11$1-IS-F11$1-COPY)
(F11-BECOMES-F11$1-LEMMA)
(F11-BECOMES-F11$1)
(F12)
(F12$NOT-NORMALIZED)
(F12$1)
(F12-BEFORE-VS-AFTER-0)
(F12$1$NOT-NORMALIZED)
(F12$1-COPY)
(F12$1-COPY-DEF)
(F12$1-IS-F12$1-COPY)
(F12-BECOMES-F12$1-LEMMA)
(F12-BECOMES-F12$1)
(F13)
(F13$NOT-NORMALIZED)
(F13$1)
(F13-BEFORE-VS-AFTER-0)
(F13$1$NOT-NORMALIZED)
(F13$1-COPY)
(F13$1-COPY-DEF)
(F13$1-IS-F13$1-COPY)
(F13-BECOMES-F13$1-LEMMA)
(F13-BECOMES-F13$1)
(F14)
(F14$NOT-NORMALIZED)
(F14$1)
(F14-BEFORE-VS-AFTER-0)
(F14$1$NOT-NORMALIZED)
(F14$1-COPY)
(F14$1-COPY-DEF)
(F14$1-IS-F14$1-COPY)
(F14-BECOMES-F14$1-LEMMA)
(F14-BECOMES-F14$1)
(F13A)
(F13A$NOT-NORMALIZED)
(F13A$1)
(F13A-BEFORE-VS-AFTER-0)
(F13A$1$NOT-NORMALIZED)
(F13A$1-COPY)
(F13A$1-COPY-DEF)
(F13A$1-IS-F13A$1-COPY)
(F13A-BECOMES-F13A$1-LEMMA)
(F13A-BECOMES-F13A$1)
(F14A)
(F14A$NOT-NORMALIZED)
(F14A$1)
(F14A-BEFORE-VS-AFTER-0)
(F14A$1$NOT-NORMALIZED)
(F14A$1-COPY)
(F14A$1-COPY-DEF)
(F14A$1-IS-F14A$1-COPY)
(F14A-BECOMES-F14A$1-LEMMA)
(F14A-BECOMES-F14A$1)
(G1)
(G1$NOT-NORMALIZED)
(G1$1)
(G1-BEFORE-VS-AFTER-0)
(G1$1$NOT-NORMALIZED)
(G1$1-COPY)
(G1$1-COPY-DEF)
(G1$1-IS-G1$1-COPY)
(G1-BECOMES-G1$1-LEMMA)
(G1-BECOMES-G1$1)
(G2)
(G2$NOT-NORMALIZED)
(G2$1)
(G2-BEFORE-VS-AFTER-0)
(G2$1$NOT-NORMALIZED)
(G2$1-COPY)
(G2$1-COPY-DEF)
(G2$1-IS-G2$1-COPY)
(G2-BECOMES-G2$1-LEMMA)
(G2-BECOMES-G2$1)
(G3)
(G3$NOT-NORMALIZED)
(G3$1)
(G3-BEFORE-VS-AFTER-0)
(G3$1$NOT-NORMALIZED)
(G3$1-COPY)
(G3$1-COPY-DEF)
(G3$1-IS-G3$1-COPY)
(G3-BECOMES-G3$1-LEMMA)
(G3-BECOMES-G3$1)
(FOO)
(FOO (8 4
        (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
     (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
     (4 4 (:TYPE-PRESCRIPTION BINARY-APPEND)))
(FOO$NOT-NORMALIZED)
(FOO$1 (10 5
           (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
       (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP))
       (5 5 (:TYPE-PRESCRIPTION BINARY-APPEND)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO (8 4
        (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
     (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
     (4 4 (:TYPE-PRESCRIPTION BINARY-APPEND)))
(FOO$NOT-NORMALIZED)
(FOO$1 (10 5
           (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
       (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP))
       (5 5 (:TYPE-PRESCRIPTION BINARY-APPEND)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO (8 4
        (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
     (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
     (4 4 (:TYPE-PRESCRIPTION BINARY-APPEND)))
(FOO$NOT-NORMALIZED)
(FOO$1 (10 5
           (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
       (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP))
       (5 5 (:TYPE-PRESCRIPTION BINARY-APPEND)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1-BEFORE-VS-AFTER-1)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$NOT-NORMALIZED)
(F1$2)
(F1-BEFORE-VS-AFTER-0)
(F1$2$NOT-NORMALIZED)
(F1$2-COPY)
(F1$2-COPY-DEF)
(F1$2-IS-F1$2-COPY)
(F1-BECOMES-F1$2-LEMMA)
(F1-BECOMES-F1$2)
(F1$NOT-NORMALIZED)
(F1$3)
(F1-BEFORE-VS-AFTER-0)
(F1$3$NOT-NORMALIZED)
(F1$3-COPY)
(F1$3-COPY-DEF)
(F1$3-IS-F1$3-COPY)
(F1-BECOMES-F1$3-LEMMA)
(F1-BECOMES-F1$3)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-1)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F2$NOT-NORMALIZED)
(F2$2)
(F2-BEFORE-VS-AFTER-0)
(F2$2$NOT-NORMALIZED)
(F2$2-COPY)
(F2$2-COPY-DEF)
(F2$2-IS-F2$2-COPY)
(F2-BECOMES-F2$2-LEMMA)
(F2-BECOMES-F2$2)
(F2$NOT-NORMALIZED)
(F2$3)
(F2-BEFORE-VS-AFTER-0)
(F2$3$NOT-NORMALIZED)
(F2$3-COPY)
(F2$3-COPY-DEF)
(F2$3-IS-F2$3-COPY)
(F2-BECOMES-F2$3-LEMMA)
(F2-BECOMES-F2$3)
(F3)
(F3$NOT-NORMALIZED)
(F3$1)
(F3-BEFORE-VS-AFTER-0)
(F3-BEFORE-VS-AFTER-1)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY)
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA)
(F3-BECOMES-F3$1)
(F3$NOT-NORMALIZED)
(F3$2)
(F3-BEFORE-VS-AFTER-0)
(F3-BEFORE-VS-AFTER-1)
(F3$2$NOT-NORMALIZED)
(F3$2-COPY)
(F3$2-COPY-DEF)
(F3$2-IS-F3$2-COPY)
(F3-BECOMES-F3$2-LEMMA)
(F3-BECOMES-F3$2)
(F4)
(F4$NOT-NORMALIZED)
(F4$1)
(F4-BEFORE-VS-AFTER-0)
(F4-BEFORE-VS-AFTER-1)
(F4-BEFORE-VS-AFTER-2)
(F4$1$NOT-NORMALIZED)
(F4$1-COPY)
(F4$1-COPY-DEF)
(F4$1-IS-F4$1-COPY)
(F4-BECOMES-F4$1-LEMMA)
(F4-BECOMES-F4$1)
(F5)
(F5$NOT-NORMALIZED)
(F5$1)
(F5-BEFORE-VS-AFTER-0)
(F5-BEFORE-VS-AFTER-1)
(F5-BEFORE-VS-AFTER-2)
(F5$1$NOT-NORMALIZED)
(F5$1-COPY)
(F5$1-COPY-DEF)
(F5$1-IS-F5$1-COPY)
(F5-BECOMES-F5$1-LEMMA)
(F5-BECOMES-F5$1)
(F6 (1 1 (:TYPE-PRESCRIPTION F6)))
(F6$NOT-NORMALIZED)
(F6$1)
(F6-BEFORE-VS-AFTER-0)
(F6-BEFORE-VS-AFTER-1)
(F6$1$NOT-NORMALIZED)
(F6$1-COPY)
(F6$1-COPY-DEF)
(F6$1-IS-F6$1-COPY)
(F6-BECOMES-F6$1-LEMMA)
(F6-BECOMES-F6$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$NOT-NORMALIZED)
(F1$2)
(F1-BEFORE-VS-AFTER-0)
(F1$2$NOT-NORMALIZED)
(F1$2-COPY)
(F1$2-COPY-DEF)
(F1$2-IS-F1$2-COPY)
(F1-BECOMES-F1$2-LEMMA)
(F1-BECOMES-F1$2)
(F1$NOT-NORMALIZED)
(F1$3)
(F1-BEFORE-VS-AFTER-0)
(F1$3$NOT-NORMALIZED)
(F1$3-COPY)
(F1$3-COPY-DEF)
(F1$3-IS-F1$3-COPY)
(F1-BECOMES-F1$3-LEMMA)
(F1-BECOMES-F1$3)
(F1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(PROG2$$)
(CW$-FN)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1 (1 1 (:TYPE-PRESCRIPTION F1$1)))
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY (1 1 (:TYPE-PRESCRIPTION F1$1-COPY)))
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1 (1 1 (:TYPE-PRESCRIPTION F2$1)))
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY (1 1 (:TYPE-PRESCRIPTION F2$1-COPY)))
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F3)
(F3$NOT-NORMALIZED)
(F3$1 (1 1 (:TYPE-PRESCRIPTION F3$1)))
(F3-BEFORE-VS-AFTER-0)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY (1 1 (:TYPE-PRESCRIPTION F3$1-COPY)))
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA)
(F3-BECOMES-F3$1)
(F4)
(F4$NOT-NORMALIZED)
(F4$1 (1 1 (:TYPE-PRESCRIPTION F4$1)))
(F4-BEFORE-VS-AFTER-0)
(F4$1$NOT-NORMALIZED)
(F4$1-COPY (1 1 (:TYPE-PRESCRIPTION F4$1-COPY)))
(F4$1-COPY-DEF)
(F4$1-IS-F4$1-COPY)
(F4-BECOMES-F4$1-LEMMA)
(F4-BECOMES-F4$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1 (1 1 (:TYPE-PRESCRIPTION F1$1)))
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY (1 1 (:TYPE-PRESCRIPTION F1$1-COPY)))
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1 (1 1 (:TYPE-PRESCRIPTION F2$1)))
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY (1 1 (:TYPE-PRESCRIPTION F2$1-COPY)))
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F3)
(F3$NOT-NORMALIZED)
(F3$1 (1 1 (:TYPE-PRESCRIPTION F3$1)))
(F3-BEFORE-VS-AFTER-0)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY (1 1 (:TYPE-PRESCRIPTION F3$1-COPY)))
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA)
(F3-BECOMES-F3$1)
(F4)
(F4$NOT-NORMALIZED)
(F4$1 (1 1 (:TYPE-PRESCRIPTION F4$1)))
(F4-BEFORE-VS-AFTER-0)
(F4$1$NOT-NORMALIZED)
(F4$1-COPY (1 1 (:TYPE-PRESCRIPTION F4$1-COPY)))
(F4$1-COPY-DEF)
(F4$1-IS-F4$1-COPY)
(F4-BECOMES-F4$1-LEMMA)
(F4-BECOMES-F4$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F3)
(F3$NOT-NORMALIZED)
(F3$1)
(F3-BEFORE-VS-AFTER-0)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY)
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA)
(F3-BECOMES-F3$1)
(F4)
(F4$NOT-NORMALIZED)
(F4$1)
(F4-BEFORE-VS-AFTER-0)
(F4$1$NOT-NORMALIZED)
(F4$1-COPY)
(F4$1-COPY-DEF)
(F4$1-IS-F4$1-COPY)
(F4-BECOMES-F4$1-LEMMA)
(F4-BECOMES-F4$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F1-BECOMES-F1$1)
(F1$NOT-NORMALIZED)
(F1$2)
(F1-BEFORE-VS-AFTER-0)
(F1$2$NOT-NORMALIZED)
(F1$2-COPY)
(F1$2-COPY-DEF)
(F1$2-IS-F1$2-COPY)
(F1-BECOMES-F1$2-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F1-BECOMES-F1$2)
(G)
(G$NOT-NORMALIZED)
(G$1)
(G-BEFORE-VS-AFTER-0)
(G$1$NOT-NORMALIZED)
(G$1-COPY)
(G$1-COPY-DEF)
(G$1-IS-G$1-COPY)
(G-BECOMES-G$1-LEMMA)
(G-BECOMES-G$1)
(F1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0 (4 4 (:DEFINITION MV-NTH)))
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F)
(G)
(H)
(H$NOT-NORMALIZED)
(H$1)
(H-BEFORE-VS-AFTER-0)
(H$1$NOT-NORMALIZED)
(H$1-COPY)
(H$1-COPY-DEF)
(H$1-IS-H$1-COPY)
(H-BECOMES-H$1-LEMMA)
(H-BECOMES-H$1)
(G$NOT-NORMALIZED)
(G$1)
(G-BEFORE-VS-AFTER-0 (4 4 (:DEFINITION MV-NTH)))
(G$1$NOT-NORMALIZED)
(G$1-COPY)
(G$1-COPY-DEF)
(G$1-IS-G$1-COPY)
(G-BECOMES-G$1-LEMMA)
(G-BECOMES-G$1)
(FOO)
(TRUE-LISTP-FOO)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR$1)
(BAR-BEFORE-VS-AFTER-0 (5 5 (:DEFINITION MV-NTH)))
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY)
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(FOO)
(BAR)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(BAR$NOT-NORMALIZED)
(BAR$1)
(BAR-BEFORE-VS-AFTER-0)
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY)
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FIX-TRUE-LISTP)
(FOO (1 1 (:REWRITE DEFAULT-CDR))
     (1 1 (:REWRITE DEFAULT-CAR)))
(CAR-RATIONAL-LISTP
     (8 4 (:REWRITE DEFAULT-CAR))
     (3 3
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (3 3
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (3 3
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (3 3
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (1 1
        (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
     (1 1 (:REWRITE DEFAULT-CDR)))
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA (2 2 (:REWRITE DEFAULT-CDR))
                                  (2 2 (:REWRITE DEFAULT-CAR)))
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(LENB)
(LEN-BECOMES-LENB
     (16 8 (:REWRITE DEFAULT-+-2))
     (8 8 (:REWRITE DEFAULT-CDR))
     (8 8 (:REWRITE DEFAULT-+-1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(LENB$NOT-NORMALIZED)
(LENB$1)
(LENB-BEFORE-VS-AFTER-0)
(LENB$1$NOT-NORMALIZED)
(LENB$1-COPY)
(LENB$1-COPY-DEF)
(LENB$1-IS-LENB$1-COPY)
(LENB-BECOMES-LENB$1-LEMMA)
(LENB-BECOMES-LENB$1)
(LENB)
(LEN-BECOMES-LENB
 (36 6
     (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (16 8 (:REWRITE DEFAULT-+-2))
 (12 12 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (12 12 (:REWRITE DEFAULT-CDR))
 (12 6 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (8 8
    (:REWRITE TRUE-LISTP-OF-CDR-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP))
 (8 8 (:REWRITE DEFAULT-+-1))
 (8 8
    (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
              . 2))
 (8 8
    (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
              . 1))
 (8 8
    (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
              . 2))
 (8 8
    (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
              . 1))
 (6 6 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (6 6
    (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (6 6
    (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (6 6
    (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (6 6
    (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (6 6
    (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (6 6 (:REWRITE SET::IN-SET)))
(LENB$NOT-NORMALIZED)
(LENB-HYPS)
(LENB$1)
(LENB-BEFORE-VS-AFTER-0)
(LENB-HYPS-PRESERVED-FOR-LENB$1-LEMMA)
(LENB-HYPS-PRESERVED-FOR-LENB$1)
(LENB$1$NOT-NORMALIZED)
(LENB$1-COPY)
(LENB$1-COPY-DEF)
(LENB$1-IS-LENB$1-COPY)
(LENB-BECOMES-LENB$1-LEMMA)
(LENB-BECOMES-LENB$1)
(LENB$1)
(LENB)
(LENB-BECOMES-LEN
     (12 6 (:REWRITE DEFAULT-+-2))
     (6 6 (:REWRITE DEFAULT-+-1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (4 4 (:REWRITE DEFAULT-CDR)))
(LENB$NOT-NORMALIZED)
(LENB$1)
(LENB-BEFORE-VS-AFTER-0)
(LENB$1$NOT-NORMALIZED)
(LENB$1-COPY)
(LENB$1-COPY-DEF)
(LENB$1-IS-LENB$1-COPY)
(LENB-BECOMES-LENB$1-LEMMA)
(LENB-BECOMES-LENB$1)
(LENB$1)
(BAR (3 3 (:REWRITE DEFAULT-<-2))
     (3 3 (:REWRITE DEFAULT-<-1))
     (1 1 (:REWRITE ZP-OPEN))
     (1 1 (:REWRITE DEFAULT-+-2))
     (1 1 (:REWRITE DEFAULT-+-1)))
(BAR$NOT-NORMALIZED)
(BAR$1)
(BAR-BEFORE-VS-AFTER-0)
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY)
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$NOT-NORMALIZED)
(FOO$2)
(FOO-BEFORE-VS-AFTER-0)
(FOO-BEFORE-VS-AFTER-1)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA)
(FOO-BECOMES-FOO$2)
(G)
(G$NOT-NORMALIZED)
(G$1)
(G-BEFORE-VS-AFTER-0)
(G$1$NOT-NORMALIZED)
(G$1-COPY)
(G$1-COPY-DEF)
(G$1-IS-G$1-COPY)
(G-BECOMES-G$1-LEMMA)
(G-BECOMES-G$1)
(H1)
(H1$NOT-NORMALIZED)
(H1$1)
(H1-BEFORE-VS-AFTER-0)
(H1$1$NOT-NORMALIZED)
(H1$1-COPY)
(H1$1-COPY-DEF)
(H1$1-IS-H1$1-COPY)
(H1-BECOMES-H1$1-LEMMA)
(H1-BECOMES-H1$1)
(H2)
(H2$NOT-NORMALIZED)
(H2$1)
(H2-BEFORE-VS-AFTER-0)
(H2$1$NOT-NORMALIZED)
(H2$1-COPY)
(H2$1-COPY-DEF)
(H2$1-IS-H2$1-COPY)
(H2-BECOMES-H2$1-LEMMA)
(H2-BECOMES-H2$1)
(H3)
(H3$NOT-NORMALIZED)
(H3$1)
(H3-BEFORE-VS-AFTER-0)
(H3$1$NOT-NORMALIZED)
(H3$1-COPY)
(H3$1-COPY-DEF)
(H3$1-IS-H3$1-COPY)
(H3-BECOMES-H3$1-LEMMA)
(H3-BECOMES-H3$1)
(H4)
(H4$NOT-NORMALIZED)
(H4$1)
(H4-BEFORE-VS-AFTER-0)
(H4$1$NOT-NORMALIZED)
(H4$1-COPY)
(H4$1-COPY-DEF)
(H4$1-IS-H4$1-COPY)
(H4-BECOMES-H4$1-LEMMA)
(H4-BECOMES-H4$1)
(H5)
(H5$NOT-NORMALIZED)
(H5$1)
(H5-BEFORE-VS-AFTER-0)
(H5$1$NOT-NORMALIZED)
(H5$1-COPY)
(H5$1-COPY-DEF)
(H5$1-IS-H5$1-COPY)
(H5-BECOMES-H5$1-LEMMA)
(H5-BECOMES-H5$1)
(H)
(H$NOT-NORMALIZED)
(H$1)
(H-BEFORE-VS-AFTER-0)
(H$1$NOT-NORMALIZED)
(H$1-COPY)
(H$1-COPY-DEF)
(H$1-IS-H$1-COPY)
(H-BECOMES-H$1-LEMMA)
(H-BECOMES-H$1)
(TRIANGLE-PRODUCT1)
(CLAUSE-LISTP)
(ALL-RESOLVENTS-OF-PAIRS)
(ADD-FACTORS)
(EMPTY-CLAUSE)
(CLAUSE-SET-CONTAINS-ANSWER-CLAUSEP)
(GET-ANSWER-CLAUSE)
(CLAUSE-SET-DIFFERENCE)
(KEEP-PAIRS-THAT-CONTAIN-UNITS)
(EXISTS-RESOLVING-PAIR-WITH-RESOLVENT-P)
(FOO (10 5
         (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
     (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(SELECT-PAIRS)
(ANSWER-SEARCH-STUB)
(ANSWER-SEARCH)
(ANSWER-SEARCH$NOT-NORMALIZED)
(ANSWER-SEARCH$1 (12 6
                     (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
                 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(ANSWER-SEARCH-BEFORE-VS-AFTER-0)
(ANSWER-SEARCH$1$NOT-NORMALIZED)
(ANSWER-SEARCH$1-COPY)
(ANSWER-SEARCH$1-COPY-DEF)
(ANSWER-SEARCH$1-IS-ANSWER-SEARCH$1-COPY)
(ANSWER-SEARCH-BECOMES-ANSWER-SEARCH$1-LEMMA)
(ANSWER-SEARCH-BECOMES-ANSWER-SEARCH$1)
(UPDATE-HINFO.X (10 5
                    (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND)))
(ALL-RESOLVENTS-OF-PAIRS.X)
(ANSWER-SEARCH.X)
(ANSWER-SEARCH.X$NOT-NORMALIZED)
(ANSWER-SEARCH.X$1 (12 6
                       (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
                   (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(ANSWER-SEARCH.X-BEFORE-VS-AFTER-0)
(ANSWER-SEARCH.X$1$NOT-NORMALIZED)
(ANSWER-SEARCH.X$1-COPY)
(ANSWER-SEARCH.X$1-COPY-DEF)
(ANSWER-SEARCH.X$1-IS-ANSWER-SEARCH.X$1-COPY)
(ANSWER-SEARCH.X-BECOMES-ANSWER-SEARCH.X$1-LEMMA)
(ANSWER-SEARCH.X-BECOMES-ANSWER-SEARCH.X$1)
(UPDATE-HINFO.Y (10 5
                    (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND)))
(ALL-RESOLVENTS-OF-PAIRS.Y)
(ANSWER-SEARCH.Y (12 6
                     (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
                 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(ANSWER-SEARCH.Y$NOT-NORMALIZED)
(ANSWER-SEARCH.Y$1 (24 12
                       (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
                   (12 12 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(ANSWER-SEARCH.Y-BEFORE-VS-AFTER-0)
(ANSWER-SEARCH.Y$1$NOT-NORMALIZED)
(ANSWER-SEARCH.Y$1-COPY)
(ANSWER-SEARCH.Y$1-COPY-DEF)
(ANSWER-SEARCH.Y$1-IS-ANSWER-SEARCH.Y$1-COPY)
(ANSWER-SEARCH.Y-BECOMES-ANSWER-SEARCH.Y$1-LEMMA)
(ANSWER-SEARCH.Y-BECOMES-ANSWER-SEARCH.Y$1)
(F1)
(APP3 (10 5
          (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
      (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(F2)
(G (1 1 (:TYPE-PRESCRIPTION G)))
(G$NOT-NORMALIZED)
(G$1 (10 5
         (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
     (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP))
     (1 1 (:TYPE-PRESCRIPTION G$1)))
(G-BEFORE-VS-AFTER-0)
(G$1$NOT-NORMALIZED)
(G$1-COPY (1 1 (:TYPE-PRESCRIPTION G$1-COPY)))
(G$1-COPY-DEF)
(G$1-IS-G$1-COPY)
(G-BECOMES-G$1-LEMMA)
(G-BECOMES-G$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(STARTING-ACCOUNT-BALANCE)
(NEW-CLIENT-INFO)
(NEW-CLIENT-INFO$NOT-NORMALIZED)
(NEW-CLIENT-INFO$1)
(NEW-CLIENT-INFO-BEFORE-VS-AFTER-0)
(NEW-CLIENT-INFO$1$NOT-NORMALIZED)
(NEW-CLIENT-INFO$1-COPY)
(NEW-CLIENT-INFO$1-COPY-DEF)
(NEW-CLIENT-INFO$1-IS-NEW-CLIENT-INFO$1-COPY)
(NEW-CLIENT-INFO-BECOMES-NEW-CLIENT-INFO$1-LEMMA)
(NEW-CLIENT-INFO-BECOMES-NEW-CLIENT-INFO$1)
(STARTING-ACCOUNT-BALANCE)
(NEW-CLIENT-INFO)
(NEW-CLIENT-INFO$NOT-NORMALIZED)
(NEW-CLIENT-INFO$1)
(NEW-CLIENT-INFO-BEFORE-VS-AFTER-0)
(NEW-CLIENT-INFO$1$NOT-NORMALIZED)
(NEW-CLIENT-INFO$1-COPY)
(NEW-CLIENT-INFO$1-COPY-DEF)
(NEW-CLIENT-INFO$1-IS-NEW-CLIENT-INFO$1-COPY)
(NEW-CLIENT-INFO-BECOMES-NEW-CLIENT-INFO$1-LEMMA)
(NEW-CLIENT-INFO-BECOMES-NEW-CLIENT-INFO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO$NOT-NORMALIZED)
(FOO$2)
(FOO-BEFORE-VS-AFTER-0)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA)
(FOO-BECOMES-FOO$2)
(FOO$2)
(BAR (1 1 (:TYPE-PRESCRIPTION BAR)))
(PSEUDO-TERMP$NOT-NORMALIZED)
(PSEUDO-TERM-LISTP$NOT-NORMALIZED)
(PSEUDO-TERMP$1)
(PSEUDO-TERMP-BEFORE-VS-AFTER-0)
(PSEUDO-TERM-LISTP-BEFORE-VS-AFTER-0)
(PSEUDO-TERMP$1$NOT-NORMALIZED)
(PSEUDO-TERM-LISTP$1$NOT-NORMALIZED)
(FLAG-PSEUDO-TERMP$1
 (365 159 (:REWRITE DEFAULT-+-2))
 (222 159 (:REWRITE DEFAULT-+-1))
 (220 10 (:DEFINITION LENGTH))
 (194 124 (:REWRITE DEFAULT-CDR))
 (162 27
      (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (122 4 (:DEFINITION SYMBOL-LISTP))
 (116 104 (:REWRITE DEFAULT-CAR))
 (98 13 (:REWRITE INTEGERP-OF-CAR))
 (84 84
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
               . 2))
 (84 84
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
               . 1))
 (84 84
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
               . 2))
 (84 84
     (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
               . 1))
 (80 20 (:DEFINITION INTEGER-ABS))
 (70 5 (:DEFINITION INTEGER-LISTP))
 (54 54 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (54 27 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (43 26 (:REWRITE DEFAULT-<-2))
 (42
    42
    (:REWRITE TRUE-LISTP-OF-CDR-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP))
 (39 3
     (:REWRITE SYMBOLP-OF-CAAR-WHEN-SYMBOL-TRUELIST-ALISTP))
 (39 3
     (:REWRITE SYMBOLP-OF-CAAR-WHEN-SYMBOL-SYMBOL-ALISTP))
 (33 33 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (32 26 (:REWRITE DEFAULT-<-1))
 (30 30
     (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (30 20 (:REWRITE STR::CONSP-OF-EXPLODE))
 (27 27 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (27 27
     (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (27 27
     (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (27 27
     (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (27 27
     (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (27 27
     (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (27 27 (:REWRITE SET::IN-SET))
 (21 3
     (:REWRITE SYMBOL-TRUELIST-ALISTP-OF-CDR-WHEN-SYMBOL-TRUELIST-ALISTP))
 (21 3
     (:REWRITE SYMBOL-SYMBOL-ALISTP-OF-CDR-WHEN-SYMBOL-SYMBOL-ALISTP))
 (20 20 (:REWRITE DEFAULT-UNARY-MINUS))
 (20 10
     (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (16 16
     (:REWRITE SYMBOL-TRUELIST-ALISTP-WHEN-SUBSETP-EQUAL))
 (14 7 (:REWRITE INTEGER-LISTP-OF-CDR))
 (12 12
     (:REWRITE SYMBOL-SYMBOL-ALISTP-WHEN-SUBSETP-EQUAL))
 (12 2
     (:REWRITE TRUE-LISTP-OF-CDAR-WHEN-SYMBOL-TRUELIST-ALISTP))
 (10 10
     (:REWRITE SYMBOLP-OF-CAR-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP))
 (10 10
     (:REWRITE SYMBOLP-OF-CAR-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP))
 (10 10
     (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (10 10 (:REWRITE DEFAULT-REALPART))
 (10 10 (:REWRITE DEFAULT-NUMERATOR))
 (10 10 (:REWRITE DEFAULT-IMAGPART))
 (10 10 (:REWRITE DEFAULT-DENOMINATOR))
 (10 10 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (8 8
    (:REWRITE SYMBOL-TRUELIST-ALISTP-WHEN-NOT-CONSP))
 (6 6
    (:REWRITE SYMBOL-SYMBOL-ALISTP-WHEN-NOT-CONSP))
 (3 3 (:TYPE-PRESCRIPTION ATOM))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS)))
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-PSEUDO-TERMP$1-EQUIVALENCES)
(PSEUDO-TERMP$1-COPY)
(PSEUDO-TERM-LISTP$1-COPY)
(PSEUDO-TERMP$1-COPY-DEF)
(PSEUDO-TERM-LISTP$1-COPY-DEF)
(FLAG-LEMMA-FOR-PSEUDO-TERMP$1-IS-PSEUDO-TERMP$1-COPY)
(PSEUDO-TERMP$1-IS-PSEUDO-TERMP$1-COPY)
(PSEUDO-TERM-LISTP$1-IS-PSEUDO-TERM-LISTP$1-COPY)
(PSEUDO-TERMP-BECOMES-PSEUDO-TERMP$1-LEMMA)
(PSEUDO-TERM-LISTP-BECOMES-PSEUDO-TERM-LISTP$1-LEMMA)
(PSEUDO-TERMP-BECOMES-PSEUDO-TERMP$1)
(PSEUDO-TERM-LISTP-BECOMES-PSEUDO-TERM-LISTP$1)
(PSEUDO-TERMP$1)
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(F)
(G)
(F-IS-G)
(H)
(H$NOT-NORMALIZED)
(H$1)
(H-BEFORE-VS-AFTER-0)
(H$1$NOT-NORMALIZED)
(H$1-COPY)
(H$1-COPY-DEF)
(H$1-IS-H$1-COPY)
(H-BECOMES-H$1-LEMMA)
(H-BECOMES-H$1)
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(F$NOT-NORMALIZED)
(F$2)
(F-BEFORE-VS-AFTER-0)
(F$2$NOT-NORMALIZED)
(F$2-COPY)
(F$2-COPY-DEF)
(F$2-IS-F$2-COPY)
(F-BECOMES-F$2-LEMMA)
(F-BECOMES-F$2)
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(F$NOT-NORMALIZED)
(F$2)
(F-BEFORE-VS-AFTER-0)
(F$2$NOT-NORMALIZED)
(F$2-COPY)
(F$2-COPY-DEF)
(F$2-IS-F$2-COPY)
(F-BECOMES-F$2-LEMMA)
(F-BECOMES-F$2)
(F$NOT-NORMALIZED)
(F$3)
(F-BEFORE-VS-AFTER-0)
(F$3$NOT-NORMALIZED)
(F$3-COPY)
(F$3-COPY-DEF)
(F$3-IS-F$3-COPY)
(F-BECOMES-F$3-LEMMA)
(F-BECOMES-F$3)
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(F)
(F$NOT-NORMALIZED)
(F$1)
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY)
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(TRIANGLE-PRODUCT1)
(CLAUSE-LISTP)
(ALL-RESOLVENTS-OF-PAIRS)
(ADD-FACTORS)
(EMPTY-CLAUSE)
(CLAUSE-SET-CONTAINS-ANSWER-CLAUSEP)
(GET-ANSWER-CLAUSE)
(CLAUSE-SET-DIFFERENCE)
(KEEP-PAIRS-THAT-CONTAIN-UNITS)
(EXISTS-RESOLVING-PAIR-WITH-RESOLVENT-P)
(FOO (10 5
         (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
     (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(SELECT-PAIRS)
(ANSWER-SEARCH-STUB)
(ANSWER-SEARCH)
(ANSWER-SEARCH$NOT-NORMALIZED)
(ANSWER-SEARCH$1)
(ANSWER-SEARCH-BEFORE-VS-AFTER-0)
(ANSWER-SEARCH$1$NOT-NORMALIZED)
(ANSWER-SEARCH$1-COPY)
(ANSWER-SEARCH$1-COPY-DEF)
(ANSWER-SEARCH$1-IS-ANSWER-SEARCH$1-COPY)
(ANSWER-SEARCH-BECOMES-ANSWER-SEARCH$1-LEMMA)
(ANSWER-SEARCH-BECOMES-ANSWER-SEARCH$1)
(UPDATE-HINFO.X (10 5
                    (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND)))
(ALL-RESOLVENTS-OF-PAIRS.X)
(ANSWER-SEARCH.X)
(ANSWER-SEARCH.X$NOT-NORMALIZED)
(ANSWER-SEARCH.X$1 (12 6
                       (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
                   (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(ANSWER-SEARCH.X-BEFORE-VS-AFTER-0)
(ANSWER-SEARCH.X$1$NOT-NORMALIZED)
(ANSWER-SEARCH.X$1-COPY)
(ANSWER-SEARCH.X$1-COPY-DEF)
(ANSWER-SEARCH.X$1-IS-ANSWER-SEARCH.X$1-COPY)
(ANSWER-SEARCH.X-BECOMES-ANSWER-SEARCH.X$1-LEMMA)
(ANSWER-SEARCH.X-BECOMES-ANSWER-SEARCH.X$1)
(ANSWER-SEARCH.X$NOT-NORMALIZED)
(ANSWER-SEARCH.X$2 (12 6
                       (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
                   (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(ANSWER-SEARCH.X-BEFORE-VS-AFTER-0)
(ANSWER-SEARCH.X$2$NOT-NORMALIZED)
(ANSWER-SEARCH.X$2-COPY)
(ANSWER-SEARCH.X$2-COPY-DEF)
(ANSWER-SEARCH.X$2-IS-ANSWER-SEARCH.X$2-COPY)
(ANSWER-SEARCH.X-BECOMES-ANSWER-SEARCH.X$2-LEMMA)
(ANSWER-SEARCH.X-BECOMES-ANSWER-SEARCH.X$2)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(DR-STATE (1 1 (:TYPE-PRESCRIPTION DR-STATE)))
(DR-STATE-EXT)
(COORD-STATE (1 1 (:TYPE-PRESCRIPTION COORD-STATE)))
(TO-DR-STATE-EXT (1 1 (:TYPE-PRESCRIPTION TO-DR-STATE-EXT)))
(TO-DR-STATE-EXT-OF-DR-STATE (6 3 (:TYPE-PRESCRIPTION TO-DR-STATE-EXT))
                             (3 3 (:TYPE-PRESCRIPTION DR-STATE-EXT))
                             (3 3 (:TYPE-PRESCRIPTION DR-STATE)))
(ADD-FOO1)
(ADD-FOO)
(ADD-FOO$NOT-NORMALIZED)
(ADD-FOO$1)
(ADD-FOO-BEFORE-VS-AFTER-0)
(ADD-FOO$1$NOT-NORMALIZED)
(ADD-FOO$1-COPY)
(ADD-FOO$1-COPY-DEF)
(ADD-FOO$1-IS-ADD-FOO$1-COPY)
(ADD-FOO-BECOMES-ADD-FOO$1-LEMMA)
(ADD-FOO-BECOMES-ADD-FOO$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F3)
(F3$NOT-NORMALIZED)
(F3$1)
(F3-BEFORE-VS-AFTER-0)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY)
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA)
(F3-BECOMES-F3$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(FOO9)
(FOO9$NOT-NORMALIZED)
(FOO9$1)
(FOO9-BEFORE-VS-AFTER-0 (5 5 (:DEFINITION MV-NTH)))
(FOO9$1$NOT-NORMALIZED)
(FOO9$1-COPY)
(FOO9$1-COPY-DEF)
(FOO9$1-IS-FOO9$1-COPY)
(FOO9-BECOMES-FOO9$1-LEMMA)
(FOO9-BECOMES-FOO9$1)
(FOO)
(BAR)
(F1)
(F1$NOT-NORMALIZED)
(F2$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F2-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F2$1$NOT-NORMALIZED)
(FLAG-F1$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F1$1-EQUIVALENCES)
(F1$1-COPY)
(F2$1-COPY)
(F1$1-COPY-DEF)
(F2$1-COPY-DEF)
(FLAG-LEMMA-FOR-F1$1-IS-F1$1-COPY)
(F1$1-IS-F1$1-COPY)
(F2$1-IS-F2$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F2-BECOMES-F2$1-LEMMA)
(F1-BECOMES-F1$1)
(F2-BECOMES-F2$1)
(FOO)
(F1)
(MY-CONSP)
(MY-CAR)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1 (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                    . 2))
       (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                    . 1))
       (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                    . 2))
       (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                    . 1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1 (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                    . 2))
       (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                    . 1))
       (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                    . 2))
       (3 3
          (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                    . 1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(MY-INTEGER-LISTP)
(P)
(FOO (32 4 (:REWRITE INTEGERP-OF-CAR))
     (30 2 (:DEFINITION INTEGER-LISTP))
     (13 13 (:TYPE-PRESCRIPTION INTEGER-LISTP))
     (6 3 (:REWRITE INTEGER-LISTP-OF-CDR))
     (5 5 (:REWRITE DEFAULT-CAR))
     (4 4 (:REWRITE DEFAULT-CDR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(F2$1)
(MY-CDDR)
(MY-TRUE-LISTP)
(F0 (198 9 (:DEFINITION LENGTH))
    (190 89 (:REWRITE DEFAULT-+-2))
    (171 9 (:DEFINITION LEN))
    (124 89 (:REWRITE DEFAULT-+-1))
    (99 3 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
    (87 6 (:DEFINITION MEMBER-EQUAL))
    (72 18 (:REWRITE COMMUTATIVITY-OF-+))
    (72 18 (:DEFINITION INTEGER-ABS))
    (40 40
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
    (40 40
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
    (40 40
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
    (40 40
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
    (31 23 (:REWRITE DEFAULT-<-2))
    (27 27
        (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
    (27 23 (:REWRITE DEFAULT-<-1))
    (27 18 (:REWRITE STR::CONSP-OF-EXPLODE))
    (26 26 (:REWRITE DEFAULT-CAR))
    (18 18 (:REWRITE DEFAULT-UNARY-MINUS))
    (18 9
        (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
    (12 12 (:REWRITE SUBSETP-MEMBER . 2))
    (12 12 (:REWRITE SUBSETP-MEMBER . 1))
    (12 12 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
    (9 9 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
    (9 9 (:TYPE-PRESCRIPTION LEN))
    (9 9
       (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
    (9 9 (:REWRITE DEFAULT-REALPART))
    (9 9 (:REWRITE DEFAULT-NUMERATOR))
    (9 9 (:REWRITE DEFAULT-IMAGPART))
    (9 9 (:REWRITE DEFAULT-DENOMINATOR))
    (6 6
       (:REWRITE SYMBOLP-OF-CAR-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP))
    (6 6
       (:REWRITE SYMBOLP-OF-CAR-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP))
    (3 3 (:REWRITE MEMBER-SELF)))
(F0$NOT-NORMALIZED)
(F0-HYPS)
(F0$1)
(F0$1-BEFORE-VS-AFTER-0)
(F0-HYPS-PRESERVED-FOR-F0-LEMMA)
(F0-HYPS-PRESERVED-FOR-F0)
(F0$1$NOT-NORMALIZED)
(F0-COPY)
(F0-COPY-DEF)
(F0-IS-F0-COPY)
(F0-BECOMES-F0$1-LEMMA)
(F0-BECOMES-F0$1)
(F0$1)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR$1)
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY)
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(FOO (1 1
        (:TYPE-PRESCRIPTION NONNEGATIVE-PRODUCT)))
(FOO$NOT-NORMALIZED)
(FOO$1 (6 6
          (:TYPE-PRESCRIPTION NONNEGATIVE-PRODUCT)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(MV2)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA (4 4 (:DEFINITION MV-NTH)))
(FOO-BECOMES-FOO$1)
(FOO$NOT-NORMALIZED)
(FOO$2)
(FOO-BEFORE-VS-AFTER-0)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA (4 4 (:DEFINITION MV-NTH)))
(FOO-BECOMES-FOO$2)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F2-BECOMES-F2$1)
(F3)
(F3$NOT-NORMALIZED)
(F3$1)
(F3-BEFORE-VS-AFTER-0)
(F3$1$NOT-NORMALIZED)
(F3$1-COPY)
(F3$1-COPY-DEF)
(F3$1-IS-F3$1-COPY)
(F3-BECOMES-F3$1-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F3-BECOMES-F3$1)
(F4)
(F4$NOT-NORMALIZED)
(F4$1)
(F4-BEFORE-VS-AFTER-0)
(F4$1$NOT-NORMALIZED)
(F4$1-COPY)
(F4$1-COPY-DEF)
(F4$1-IS-F4$1-COPY)
(F4-BECOMES-F4$1-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F4-BECOMES-F4$1)
(F5)
(F5$NOT-NORMALIZED)
(F5$1)
(F5-BEFORE-VS-AFTER-0)
(F5$1$NOT-NORMALIZED)
(F5$1-COPY)
(F5$1-COPY-DEF)
(F5$1-IS-F5$1-COPY)
(F5-BECOMES-F5$1-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F5-BECOMES-F5$1)
(F6)
(F6$NOT-NORMALIZED)
(F6$1)
(F6-BEFORE-VS-AFTER-0)
(F6$1$NOT-NORMALIZED)
(F6$1-COPY)
(F6$1-COPY-DEF)
(F6$1-IS-F6$1-COPY)
(F6-BECOMES-F6$1-LEMMA (8 8 (:DEFINITION MV-NTH)))
(F6-BECOMES-F6$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(F)
(G)
(G$NOT-NORMALIZED)
(G$1)
(G-BEFORE-VS-AFTER-0)
(G$1$NOT-NORMALIZED)
(G$1-COPY)
(G$1-COPY-DEF)
(G$1-IS-G$1-COPY)
(F)
(CAR-F (75 30
           (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
       (40 30 (:TYPE-PRESCRIPTION BINARY-APPEND))
       (30 30 (:TYPE-PRESCRIPTION TRUE-LISTP)))
(F$NOT-NORMALIZED)
(F$1 (1 1 (:TYPE-PRESCRIPTION F$1)))
(F-BEFORE-VS-AFTER-0)
(F$1$NOT-NORMALIZED)
(F$1-COPY (1 1 (:TYPE-PRESCRIPTION F$1-COPY)))
(F$1-COPY-DEF)
(F$1-IS-F$1-COPY)
(F-BECOMES-F$1-LEMMA)
(F-BECOMES-F$1)
(PROGRAM-MODE-TEST)
(PROGRAM-MODE-TEST$NOT-NORMALIZED)
(PROGRAM-MODE-TEST$1)
(PROGRAM-MODE-TEST-BEFORE-VS-AFTER-0)
(PROGRAM-MODE-TEST$1$NOT-NORMALIZED)
(PROGRAM-MODE-TEST$1-COPY)
(PROGRAM-MODE-TEST$1-COPY-DEF)
(PROGRAM-MODE-TEST$1-IS-PROGRAM-MODE-TEST$1-COPY)
(PROGRAM-MODE-TEST-BECOMES-PROGRAM-MODE-TEST$1-LEMMA)
(PROGRAM-MODE-TEST-BECOMES-PROGRAM-MODE-TEST$1)
(PROGRAM-MODE-TEST$1)
