(FOO)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR-SIMP)
(BAR-BEFORE-VS-AFTER-0)
(BAR-SIMP$NOT-NORMALIZED)
(BAR-SIMP-COPY)
(BAR-SIMP-COPY-DEF)
(BAR-SIMP-IS-BAR-SIMP-COPY)
(BAR-SIMPLIFIED-LEMMA)
(BAR-SIMPLIFIED)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(INTEGER-LISTP-OF-CDR
     (1 1 (:REWRITE DEFAULT-CDR))
     (1 1 (:REWRITE DEFAULT-CAR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(INTEGERP-OF-CAR
     (1 1 (:REWRITE DEFAULT-CAR))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (1 1
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1)))
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-LST$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO-LST$1$NOT-NORMALIZED)
(FLAG-FOO$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-FOO$1-EQUIVALENCES)
(FOO$1-COPY)
(FOO-LST$1-COPY)
(FOO$1-COPY-DEF)
(FOO-LST$1-COPY-DEF)
(FLAG-LEMMA-FOR-FOO$1-IS-FOO$1-COPY)
(FOO$1-IS-FOO$1-COPY)
(FOO-LST$1-IS-FOO-LST$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-LST-BECOMES-FOO-LST$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO-LST-BECOMES-FOO-LST$1)
(FOO (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1)))
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1))
     (1 1 (:TYPE-PRESCRIPTION FOO)))
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(BAR (15 7 (:REWRITE DEFAULT-CDR))
     (10 5 (:REWRITE DEFAULT-+-2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                  . 1))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 2))
     (6 6
        (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                  . 1))
     (5 5 (:REWRITE DEFAULT-+-1))
     (2 1 (:REWRITE DEFAULT-<-2))
     (2 1 (:REWRITE DEFAULT-<-1))
     (1 1 (:TYPE-PRESCRIPTION BAR)))
(BAR$NOT-NORMALIZED)
(BAR$1 (1 1 (:TYPE-PRESCRIPTION BAR$1)))
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY (1 1 (:TYPE-PRESCRIPTION BAR$1-COPY)))
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(BAR$1)
(P0)
(P1)
(P1A)
(P2)
(P2A)
(F (1 1 (:TYPE-PRESCRIPTION F)))
(G (1 1 (:TYPE-PRESCRIPTION G)))
(P0-IMPLIES-P1A-EQUALS-P1)
(P1-AND-P2-IMPLY-F-ID)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$2)
(FOO-BEFORE-VS-AFTER-0)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA)
(FOO-BECOMES-FOO$2)
(F1)
(F2)
(F2$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F2$1-COPY)
(F2$1-COPY-DEF)
(F2$1-IS-F2$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F2-BECOMES-F2$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$1)
(FOO$NOT-NORMALIZED)
(FOO$2)
(FOO-BEFORE-VS-AFTER-0)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA)
(FOO-BECOMES-FOO$2)
(FOO$2)
(BAR (1 1 (:TYPE-PRESCRIPTION BAR)))
(FIX-TRUE-LISTP)
(MEMBER-FIX-TRUE-LISTP
     (184 40 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
     (155 40 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
     (105 2 (:REWRITE SUBSETP-OF-CONS))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 2))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-TRUELIST-ALISTP
                   . 1))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 2))
     (95 95
         (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-SYMBOL-SYMBOL-ALISTP
                   . 1))
     (93 7
         (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
     (46 46 (:REWRITE SUBSETP-TRANS2))
     (46 46 (:REWRITE SUBSETP-TRANS))
     (35 35 (:REWRITE SUBSETP-MEMBER . 2))
     (32 32 (:REWRITE SUBSETP-MEMBER . 4))
     (32 32 (:REWRITE INTERSECTP-MEMBER . 3))
     (32 32 (:REWRITE INTERSECTP-MEMBER . 2))
     (27 27 (:REWRITE DEFAULT-CAR))
     (19 19 (:REWRITE DEFAULT-CDR)))
(FOO)
(FOO-SUFF)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO$1-SUFF)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO-SUFF)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO$1-SUFF)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO-WITNESS-STRENGTHEN)
(FOO)
(FOO-NECC)
(FOO$NOT-NORMALIZED)
(FOO$1-WITNESS-STRENGTHEN)
(FOO$1)
(FOO$1-NECC)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(?F1)
(G1[?F1])
(G1[?F1]-NECC)
(G1[?F1]$NOT-NORMALIZED)
(G1[?F1]$1)
(G1[?F1]$1-NECC)
(G1[?F1]-BECOMES-G1[?F1]$1-LEMMA)
(G1[?F1]-BECOMES-G1[?F1]$1)
(FOO)
(ABC)
(FOO-HYPS)
(FOO$NOT-NORMALIZED)
(FOO-HYPS$)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS$-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS$-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(ABC)
(FOO-HYPS-PRESERVED-FOR-FOO
     (1 1
        (:TYPE-PRESCRIPTION FOO-HYPS-PRESERVED-FOR-FOO)))
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO$-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO$)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO-BEFORE-VS-AFTER-0)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0$)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO$NOT-NORMALIZED)
(FOO$1 (1 1 (:TYPE-PRESCRIPTION FOO$1)))
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY (1 1 (:TYPE-PRESCRIPTION FOO$1-COPY)))
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA$)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO-HYPS)
(FOO$1)
(FOO$1-BEFORE-VS-AFTER-0)
(FOO-HYPS-PRESERVED-FOR-FOO-LEMMA)
(FOO-HYPS-PRESERVED-FOR-FOO)
(FOO$1$NOT-NORMALIZED)
(FOO-COPY)
(FOO-COPY-DEF)
(FOO-IS-FOO-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO)
(FOO-SUFF)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO2)
(FOO2$NOT-NORMALIZED)
(FOO2$1 (12 12
            (:TYPE-PRESCRIPTION NONNEGATIVE-PRODUCT)))
(FOO2-BEFORE-VS-AFTER-0)
(FOO2$1$NOT-NORMALIZED)
(FOO2$1-COPY)
(FOO2$1-COPY-DEF)
(FOO2$1-IS-FOO2$1-COPY)
(FOO2-BECOMES-FOO2$1-LEMMA)
(FOO2-BECOMES-FOO2$1)
(FOO2$1)
(BAR)
(BAR$NOT-NORMALIZED)
(BAR$1)
(BAR-BEFORE-VS-AFTER-0)
(BAR$1$NOT-NORMALIZED)
(BAR$1-COPY)
(BAR$1-COPY-DEF)
(BAR$1-IS-BAR$1-COPY)
(BAR-BECOMES-BAR$1-LEMMA)
(BAR-BECOMES-BAR$1)
(FOO)
(FOO$NOT-NORMALIZED)
(FOO$1)
(FOO-BEFORE-VS-AFTER-0)
(FOO$1$NOT-NORMALIZED)
(FOO$1-COPY)
(FOO$1-COPY-DEF)
(FOO$1-IS-FOO$1-COPY)
(FOO-BECOMES-FOO$1-LEMMA)
(FOO-BECOMES-FOO$1)
(FOO$NOT-NORMALIZED)
(FOO$2)
(FOO$2$NOT-NORMALIZED)
(FOO$2-COPY)
(FOO$2-COPY-DEF)
(FOO$2-IS-FOO$2-COPY)
(FOO-BECOMES-FOO$2-LEMMA)
(FOO-BECOMES-FOO$2)
(F1)
(F1$NOT-NORMALIZED)
(F1$1)
(F1-BEFORE-VS-AFTER-0)
(F1$1$NOT-NORMALIZED)
(F1$1-COPY)
(F1$1-COPY-DEF)
(F1$1-IS-F1$1-COPY)
(F1-BECOMES-F1$1-LEMMA)
(F1-BECOMES-F1$1)
(F2)
(F2$NOT-NORMALIZED)
(F3$NOT-NORMALIZED)
(F2$1)
(F2-BEFORE-VS-AFTER-0)
(F3-BEFORE-VS-AFTER-0)
(F2$1$NOT-NORMALIZED)
(F3$1$NOT-NORMALIZED)
(FLAG-F2$1)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F2$1-EQUIVALENCES)
(F2$1-COPY)
(F3$1-COPY)
(F2$1-COPY-DEF)
(F3$1-COPY-DEF)
(FLAG-LEMMA-FOR-F2$1-IS-F2$1-COPY)
(F2$1-IS-F2$1-COPY)
(F3$1-IS-F3$1-COPY)
(F2-BECOMES-F2$1-LEMMA)
(F3-BECOMES-F3$1-LEMMA)
(F2-BECOMES-F2$1)
(F3-BECOMES-F3$1)
(F2$NOT-NORMALIZED)
(F3$NOT-NORMALIZED)
(F2$2)
(F2$2$NOT-NORMALIZED)
(F3$2$NOT-NORMALIZED)
(FLAG-F2$2)
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-F2$2-EQUIVALENCES)
(F2$2-COPY)
(F3$2-COPY)
(F2$2-COPY-DEF)
(F3$2-COPY-DEF)
(FLAG-LEMMA-FOR-F2$2-IS-F2$2-COPY)
(F2$2-IS-F2$2-COPY)
(F3$2-IS-F3$2-COPY)
(F2-BECOMES-F2$2-LEMMA)
(F3-BECOMES-F3$2-LEMMA)
(F2-BECOMES-F2$2)
(F3-BECOMES-F3$2)
(F4)
(F4-SUFF)
(F4$NOT-NORMALIZED)
(F4$1)
(F4$1-SUFF)
(F4-BECOMES-F4$1-LEMMA)
(F4-BECOMES-F4$1)
(F5)
(F5$NOT-NORMALIZED)
(F5$1)
(F5-BEFORE-VS-AFTER-0)
(F5$1$NOT-NORMALIZED)
(F5$1-COPY)
(F5$1-COPY-DEF)
(F5$1-IS-F5$1-COPY)
(F5-BECOMES-F5$1-LEMMA)
(F5-BECOMES-F5$1)
