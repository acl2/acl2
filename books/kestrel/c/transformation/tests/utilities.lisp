; C Library
;
; Copyright (C) 2025 Kestrel Institute (http://www.kestrel.edu)
;
; License: A 3-clause BSD license. See the LICENSE file distributed with ACL2.
;
; Authors: Grant Jurgensen (grant@kestrel.edu)
;          Alessandro Coglio (www.alessandrocoglio.info)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(in-package "C2C")

(include-book "std/system/theorem-symbolp" :dir :system)
(include-book "std/util/bstar" :dir :system)
(include-book "std/util/defines" :dir :system)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define assert-file-contents-fn
  (file content state)
  (b* (((unless (stringp file))
        (mv (msg "~x0 must be a string." file) nil state))
       (actual-content (read-file-into-string file))
       (state (increment-file-clock state)))
    (value `(assert-event
              (equal
                ,actual-content
                ,content)))))

(defmacro assert-file-contents
  (&key file content)
  `(make-event (assert-file-contents-fn ',file ',content state)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Find the highest positive integer <i>
; such that <const>-thm-<i> is a theorem in the world
; but <const>-thm-<i> is not.
; Those are the names of the theorems generated by transformations,
; where <const> is the name of the constant that holds the new code,
; i.e. the code resulting from the transformation.
; This function returns 0 if no theorem with that name pattern exists.
(defun find-highest-thm-index (const i wrld)
  (declare (xargs :mode :program))
  (if (acl2::theorem-symbolp (packn-pos (list const '-thm- i) const) wrld)
      (find-highest-thm-index const (1+ i) wrld)
    (1- i)))

; Find the name <const>-thm-<i> of the theorem in the world
; with the highest positive integer <i>.
; Throw a hard error if no theorem is found.
(defun find-highest-indexed-thm (const wrld)
  (declare (xargs :mode :program))
  (let ((i (find-highest-thm-index const 1 wrld)))
    (if (= i 0)
        (hard-error 'test "No theorem index found." nil)
      (packn-pos (list const '-thm- i) const))))

; Check whether the theorem <const>-thm-<i> in the world
; with the highest positive integer index <i>
; mentions c::exec-fun in its formula.
; That is, check if proof generation went all the way up to the function level.
(defun highest-thm-has-exec-fun-p (const wrld)
  (declare (xargs :mode :program))
  (let* ((thm (find-highest-indexed-thm const wrld))
         (formula (acl2::formula thm t wrld)))
    (acl2::ffnnamep 'c::exec-fun formula)))

; Event macro to call highest-thm-has-exec-fun-p above.
(defmacro assert-highest-thm-has-exec-fun (const)
  `(assert-event (highest-thm-has-exec-fun-p ',const (w state))))
