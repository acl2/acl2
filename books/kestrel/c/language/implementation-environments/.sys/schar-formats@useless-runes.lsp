(TMP-DEFTYPES-BOOLEANP-OF-BOOL-FIX$INLINE)
(C::SCHAR-FORMATP
 (40 10 (:REWRITE FTY::PROVE-EQUAL-OF-CONS-WHEN-FIRST-QUOTEP))
 (4 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 )
(C::CONSP-WHEN-SCHAR-FORMATP)
(C::SCHAR-FORMAT-FIX$INLINE)
(C::SCHAR-FORMATP-OF-SCHAR-FORMAT-FIX
 (14 6 (:REWRITE BOOL-FIX-WHEN-BOOLEANP))
 (12 4 (:REWRITE C::SIGNED-FORMAT-FIX-WHEN-SIGNED-FORMATP))
 (8 8 (:TYPE-PRESCRIPTION C::SIGNED-FORMATP))
 (8 8 (:TYPE-PRESCRIPTION BOOLEANP))
 )
(C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMATP
 (5 2 (:REWRITE FTY::PROVE-EQUAL-OF-CONS-WHEN-FIRST-QUOTEP))
 (1 1 (:DEFINITION STRIP-CARS))
 (1 1 (:DEFINITION ALISTP))
 )
(C::SCHAR-FORMAT-FIX$INLINE
 (31 14 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (28 16 (:REWRITE FTY::PROVE-EQUAL-OF-CONS-WHEN-FIRST-QUOTEP))
 (22 14 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (22 14 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (18 9 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (14 14 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:REWRITE FTY::EQUAL-OF-CONS-BY-EQUAL-OF-STRIP-CARS))
 (3 3 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 )
(FTY::TMP-DEFFIXTYPE-IDEMPOTENT)
(C::SCHAR-FORMAT-EQUIV$INLINE)
(C::SCHAR-FORMAT-EQUIV-IS-AN-EQUIVALENCE)
(C::SCHAR-FORMAT-EQUIV-IMPLIES-EQUAL-SCHAR-FORMAT-FIX-1)
(C::SCHAR-FORMAT-FIX-UNDER-SCHAR-FORMAT-EQUIV)
(C::EQUAL-OF-SCHAR-FORMAT-FIX-1-FORWARD-TO-SCHAR-FORMAT-EQUIV)
(C::EQUAL-OF-SCHAR-FORMAT-FIX-2-FORWARD-TO-SCHAR-FORMAT-EQUIV)
(C::SCHAR-FORMAT-EQUIV-OF-SCHAR-FORMAT-FIX-1-FORWARD)
(C::SCHAR-FORMAT-EQUIV-OF-SCHAR-FORMAT-FIX-2-FORWARD)
(C::SCHAR-FORMAT->SIGNED$INLINE
 (4 1 (:REWRITE FTY::PROVE-EQUAL-OF-CONS-WHEN-FIRST-QUOTEP))
 (1 1 (:DEFINITION STRIP-CARS))
 )
(C::SIGNED-FORMATP-OF-SCHAR-FORMAT->SIGNED)
(C::SCHAR-FORMAT->SIGNED$INLINE-OF-SCHAR-FORMAT-FIX-X
 (9 3 (:REWRITE C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMATP))
 (6 6 (:TYPE-PRESCRIPTION C::SCHAR-FORMATP))
 (3 1 (:REWRITE BOOL-FIX-WHEN-BOOLEANP))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 )
(C::SCHAR-FORMAT->SIGNED$INLINE-SCHAR-FORMAT-EQUIV-CONGRUENCE-ON-X)
(C::SCHAR-FORMAT->TRAP$INLINE
 (4 1 (:REWRITE FTY::PROVE-EQUAL-OF-CONS-WHEN-FIRST-QUOTEP))
 )
(C::BOOLEANP-OF-SCHAR-FORMAT->TRAP)
(C::SCHAR-FORMAT->TRAP$INLINE-OF-SCHAR-FORMAT-FIX-X
 (9 3 (:REWRITE C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMATP))
 (6 6 (:TYPE-PRESCRIPTION C::SCHAR-FORMATP))
 (3 1 (:REWRITE C::SIGNED-FORMAT-FIX-WHEN-SIGNED-FORMATP))
 (2 2 (:TYPE-PRESCRIPTION C::SIGNED-FORMATP))
 )
(C::SCHAR-FORMAT->TRAP$INLINE-SCHAR-FORMAT-EQUIV-CONGRUENCE-ON-X)
(C::SCHAR-FORMAT)
(C::SCHAR-FORMATP-OF-SCHAR-FORMAT
 (8 4 (:REWRITE BOOL-FIX-WHEN-BOOLEANP))
 (6 2 (:REWRITE C::SIGNED-FORMAT-FIX-WHEN-SIGNED-FORMATP))
 (4 4 (:TYPE-PRESCRIPTION C::SIGNED-FORMATP))
 (4 4 (:TYPE-PRESCRIPTION BOOLEANP))
 )
(C::SCHAR-FORMAT->SIGNED-OF-SCHAR-FORMAT)
(C::SCHAR-FORMAT->TRAP-OF-SCHAR-FORMAT)
(C::SCHAR-FORMAT-OF-FIELDS
 (3 1 (:REWRITE C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMATP))
 (2 2 (:TYPE-PRESCRIPTION C::SCHAR-FORMATP))
 )
(C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMAT
 (3 1 (:REWRITE C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMATP))
 (2 2 (:TYPE-PRESCRIPTION C::SCHAR-FORMATP))
 )
(C::EQUAL-OF-SCHAR-FORMAT
 (23 23 (:REWRITE BOOL-FIX-WHEN-BOOLEANP))
 (6 6 (:REWRITE FTY::PROVE-EQUAL-OF-CONS-WHEN-FIRST-QUOTEP))
 (6 6 (:REWRITE FTY::EQUAL-OF-CONS-BY-EQUAL-OF-STRIP-CARS))
 )
(C::SCHAR-FORMAT-OF-SIGNED-FORMAT-FIX-SIGNED
 (4 2 (:REWRITE BOOL-FIX-WHEN-BOOLEANP))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 )
(C::SCHAR-FORMAT-SIGNED-FORMAT-EQUIV-CONGRUENCE-ON-SIGNED)
(C::SCHAR-FORMAT-OF-BOOL-FIX-TRAP
 (4 2 (:REWRITE C::SIGNED-FORMAT-FIX-WHEN-SIGNED-FORMATP))
 (2 2 (:TYPE-PRESCRIPTION C::SIGNED-FORMATP))
 )
(C::SCHAR-FORMAT-IFF-CONGRUENCE-ON-TRAP)
(C::SCHAR-FORMAT-FIX-REDEF)
(C::SCHAR-FORMAT->MAX)
(C::POSP-OF-SCHAR-FORMAT->MAX
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE |(expt 2^i n)|))
 (2 1 (:LINEAR EXPT-<-1-TWO))
 (1 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE |(expt x (- n))|))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(C::SCHAR-FORMAT->MAX-TYPE-PRESCRIPTION
 (19 1 (:LINEAR EXPT-X->=-X))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE |(expt 2^i n)|))
 (4 4 (:REWRITE DEFAULT-EXPT-1))
 (4 4 (:REWRITE |(expt x (- n))|))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 2 (:LINEAR EXPT-<-1-TWO))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:LINEAR EXPT->-1-TWO))
 (2 2 (:LINEAR EXPT-<-1-ONE))
 )
(C::LEMMA
 (19 1 (:LINEAR EXPT-X->=-X))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE |(expt 2^i n)|))
 (4 4 (:REWRITE DEFAULT-EXPT-1))
 (4 4 (:REWRITE |(expt x (- n))|))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (2 1 (:REWRITE SIMPLIFY-SUMS-<))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 1 (:LINEAR EXPT-<-1-TWO))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(C::SCHAR-FORMAT->MAX-LOWER-BOUND
 (5 1 (:REWRITE SIMPLIFY-SUMS-<))
 (5 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (5 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE |(expt 2^i n)|))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:REWRITE DEFAULT-EXPT-1))
 (2 2 (:REWRITE |(expt x (- n))|))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(C::SCHAR-FORMAT->MAX-OF-SCHAR-FORMAT-FIX-SCHAR-FORMAT)
(C::SCHAR-FORMAT->MAX-SCHAR-FORMAT-EQUIV-CONGRUENCE-ON-SCHAR-FORMAT)
(C::SCHAR-FORMAT->MAX-OF-UCHAR-FORMAT-FIX-UCHAR-FORMAT)
(C::SCHAR-FORMAT->MAX-UCHAR-FORMAT-EQUIV-CONGRUENCE-ON-UCHAR-FORMAT)
(C::SCHAR-FORMAT->MIN)
(C::INTEGERP-OF-SCHAR-FORMAT->MIN)
(C::SCHAR-FORMAT->MIN-TYPE-PRESCRIPTION
 (16 8 (:REWRITE DEFAULT-EXPT-2))
 (16 8 (:REWRITE |(expt 2^i n)|))
 (15 3 (:REWRITE SIMPLIFY-SUMS-<))
 (15 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (15 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (8 8 (:REWRITE DEFAULT-EXPT-1))
 (8 8 (:REWRITE |(expt x (- n))|))
 (8 8 (:REWRITE |(expt 1/c n)|))
 (8 8 (:REWRITE |(expt (- x) n)|))
 (4 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 2 (:LINEAR EXPT-<-1-TWO))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR EXPT->-1-TWO))
 (2 2 (:LINEAR EXPT-<-1-ONE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(C::LEMMA
 (19 1 (:LINEAR EXPT-X->=-X))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE |(expt 2^i n)|))
 (4 4 (:REWRITE DEFAULT-EXPT-1))
 (4 4 (:REWRITE |(expt x (- n))|))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (2 1 (:REWRITE SIMPLIFY-SUMS-<))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 1 (:LINEAR EXPT-<-1-TWO))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(C::SCHAR-FORMAT->MIN-UPPER-BOUND
 (15 3 (:REWRITE SIMPLIFY-SUMS-<))
 (15 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (15 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (12 6 (:REWRITE DEFAULT-EXPT-2))
 (12 6 (:REWRITE |(expt 2^i n)|))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (8 8 (:REWRITE NORMALIZE-ADDENDS))
 (6 6 (:REWRITE DEFAULT-EXPT-1))
 (6 6 (:REWRITE |(expt x (- n))|))
 (6 6 (:REWRITE |(expt 1/c n)|))
 (6 6 (:REWRITE |(expt (- x) n)|))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(C::SCHAR-FORMAT->MIN-OF-SCHAR-FORMAT-FIX-SCHAR-FORMAT
 (102 102 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (12 6 (:REWRITE DEFAULT-EXPT-2))
 (12 6 (:REWRITE |(expt 2^i n)|))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (6 6 (:REWRITE DEFAULT-EXPT-1))
 (6 6 (:REWRITE |(expt x (- n))|))
 (6 6 (:REWRITE |(expt 1/c n)|))
 (6 6 (:REWRITE |(expt (- x) n)|))
 (4 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 1 (:REWRITE C::SCHAR-FORMAT-FIX-WHEN-SCHAR-FORMATP))
 (2 2 (:TYPE-PRESCRIPTION C::SCHAR-FORMATP))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 )
(C::SCHAR-FORMAT->MIN-SCHAR-FORMAT-EQUIV-CONGRUENCE-ON-SCHAR-FORMAT)
(C::SCHAR-FORMAT->MIN-OF-UCHAR-FORMAT-FIX-UCHAR-FORMAT
 (102 102 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (12 6 (:REWRITE DEFAULT-EXPT-2))
 (12 6 (:REWRITE |(expt 2^i n)|))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (6 6 (:REWRITE DEFAULT-EXPT-1))
 (6 6 (:REWRITE |(expt x (- n))|))
 (6 6 (:REWRITE |(expt 1/c n)|))
 (6 6 (:REWRITE |(expt (- x) n)|))
 (4 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 1 (:REWRITE C::UCHAR-FORMAT-FIX-WHEN-UCHAR-FORMATP))
 (2 2 (:TYPE-PRESCRIPTION C::UCHAR-FORMATP))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 )
(C::SCHAR-FORMAT->MIN-UCHAR-FORMAT-EQUIV-CONGRUENCE-ON-UCHAR-FORMAT)
(C::SCHAR-FORMAT-8TCNT)
(C::SCHAR-FORMATP-OF-SCHAR-FORMAT-8TCNT)
(C::SCHAR-FORMAT->MAX-OF-SCHAR-FORMAT-8TCNT)
(C::SCHAR-FORMAT->MIN-OF-SCHAR-FORMAT-8TCNT)
