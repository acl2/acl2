(BYTES-TO-BITS$NOT-NORMALIZED)
(BYTES-TO-BITS-BASE)
(BYTES-TO-BITS-UNROLL)
(MAP-BIT-TO-BOOL
 (46 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (18 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (11 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-FOR-CAR))
 (11 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-ALL-UNSIGNED-BYTE-P))
 (11 1 (:REWRITE DEFAULT-<-1))
 (8 1 (:REWRITE USE-ALL-<-FOR-CAR))
 (8 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 1 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (4 4 (:TYPE-PRESCRIPTION ALL-UNSIGNED-BYTE-P))
 (4 2 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (4 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-UNSIGNED-BYTE-LISTP-2))
 (3 3 (:TYPE-PRESCRIPTION ALL-<))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DARGP))
 (2 2 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (2 2 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P-2))
 (2 2 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-1-WHEN-NOT-0-FREE))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FALSE-WHEN-HIGH-BIT-1))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-1-WHEN-NOT-1))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-1-WHEN-NOT-0))
 (2 2 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (2 2 (:REWRITE LEN-WHEN-2D-BV-ARRAYP))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-LISTP-CHEAP))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NOT-INTEGERP-WIDTH))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NEGATIVE-WIDTH))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-FROM-ALL-UNSIGNED-BYTE-P-NARROWER))
 (2 1 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (1 1 (:TYPE-PRESCRIPTION <=-OF-0-AND-EXPT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION <-OF-0-AND-EXPT-TYPE))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-RATIONALP-2))
 (1 1 (:REWRITE USE-ALL-RATIONALP))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-P-SMALLER))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-SIZE-IS-NEGATIVE-LIMITED))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (1 1 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (1 1 (:REWRITE ALL-<-TRANSITIVE))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (1 1 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (1 1 (:REWRITE <-OF-BV-AND-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 )
(MAP-BIT-TO-BOOL$NOT-NORMALIZED)
(MAP-BIT-TO-BOOL-BASE)
(MAP-BIT-TO-BOOL-UNROLL)
(MAP-BOOL-TO-BIT
 (18 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION BOOLEANP))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 2 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (3 1 (:REWRITE EQUAL-OF-T-WHEN-BOOLEANP-ARG2))
 (3 1 (:REWRITE EQUAL-OF-T-WHEN-BOOLEANP-ARG1))
 (2 2 (:TYPE-PRESCRIPTION DARGP))
 (2 2 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (2 2 (:REWRITE LEN-WHEN-2D-BV-ARRAYP))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(MAP-BIT-TO-BOOL$NOT-NORMALIZED)
(MAP-BIT-TO-BOOL-BASE-FOR-UNROLL-SPEC-BASIC)
(MAP-BIT-TO-BOOL-UNROLL-FOR-UNROLL-SPEC-BASIC)
(BYTES-TO-BITS$NOT-NORMALIZED)
(BYTES-TO-BITS-BASE-FOR-UNROLL-SPEC-BASIC)
(BYTES-TO-BITS-UNROLL-FOR-UNROLL-SPEC-BASIC)
(BINARY-APPEND$NOT-NORMALIZED)
(BINARY-APPEND-BASE-FOR-UNROLL-SPEC-BASIC)
(BINARY-APPEND-UNROLL-FOR-UNROLL-SPEC-BASIC)
(COMMON-LISP::REVAPPEND$NOT-NORMALIZED)
(COMMON-LISP::REVAPPEND-BASE-FOR-UNROLL-SPEC-BASIC)
(COMMON-LISP::REVAPPEND-UNROLL-FOR-UNROLL-SPEC-BASIC)
(REVERSE-LIST$NOT-NORMALIZED)
(REVERSE-LIST-BASE-FOR-UNROLL-SPEC-BASIC)
(REVERSE-LIST-UNROLL-FOR-UNROLL-SPEC-BASIC)
(GET-COLUMNS$NOT-NORMALIZED)
(GET-COLUMNS-BASE-FOR-UNROLL-SPEC-BASIC)
(GET-COLUMNS-UNROLL-FOR-UNROLL-SPEC-BASIC)
(AES::GF256MULT-AUX$NOT-NORMALIZED)
(AES::GF256MULT-AUX-BASE-FOR-UNROLL-SPEC-BASIC)
(AES::GF256MULT-AUX-UNROLL-FOR-UNROLL-SPEC-BASIC)
(GET-COLUMN$NOT-NORMALIZED)
(GET-COLUMN-BASE-FOR-UNROLL-SPEC-BASIC)
(GET-COLUMN-UNROLL-FOR-UNROLL-SPEC-BASIC)
(AES::APPLY-ROUNDS$NOT-NORMALIZED)
(AES::APPLY-ROUNDS-BASE-FOR-UNROLL-SPEC-BASIC)
(AES::APPLY-ROUNDS-UNROLL-FOR-UNROLL-SPEC-BASIC)
(AES::KEYEXPANSIONLOOP1$NOT-NORMALIZED)
(AES::KEYEXPANSIONLOOP1-BASE-FOR-UNROLL-SPEC-BASIC)
(AES::KEYEXPANSIONLOOP1-UNROLL-FOR-UNROLL-SPEC-BASIC)
(AES::KEYEXPANSIONLOOP2$NOT-NORMALIZED)
(AES::KEYEXPANSIONLOOP2-BASE-FOR-UNROLL-SPEC-BASIC)
(AES::KEYEXPANSIONLOOP2-UNROLL-FOR-UNROLL-SPEC-BASIC)
(BITS-TO-BYTES$NOT-NORMALIZED)
(BITS-TO-BYTES-BASE-FOR-UNROLL-SPEC-BASIC)
(BITS-TO-BYTES-UNROLL-FOR-UNROLL-SPEC-BASIC)
(MAP-BOOL-TO-BIT$NOT-NORMALIZED)
(MAP-BOOL-TO-BIT-BASE-FOR-UNROLL-SPEC-BASIC)
(MAP-BOOL-TO-BIT-UNROLL-FOR-UNROLL-SPEC-BASIC)
