(MY-PACK-LIST)
(MAKE-PC-DESIGNATOR$NOT-NORMALIZED)
(MAKE-PC-DESIGNATOR-CONSTANT-OPENER)
(REPLACE-IN-TERM2
 (72 3 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (41 1 (:DEFINITION ASSOC-EQUAL))
 (39 3 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (39 1 (:REWRITE LEN-OF-CDR))
 (37 1 (:DEFINITION SYMBOL-LISTP))
 (35 4 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (34 21 (:REWRITE DEFAULT-CAR))
 (30 3 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (21 3 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (19 14 (:REWRITE DEFAULT-CDR))
 (19 1 (:DEFINITION PSEUDO-TERM-LISTP))
 (18 9 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (17 17 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (17 17 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (17 17 (:REWRITE LEN-GIVES-CONSP))
 (17 17 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (15 15 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (15 15 (:REWRITE CONSP-FROM-LEN-BOUND))
 (13 1 (:REWRITE JVM::LEN-HACK))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (10 10 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (10 10 (:REWRITE EQUAL-WHEN-<-OF-+))
 (10 5 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (9 9 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (9 9 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (9 9 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (9 9 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (9 3 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (9 3 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (9 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (9 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (8 4 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (8 4 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP-2))
 (8 4 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (8 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (7 1 (:REWRITE PSEUDO-TERMP-OF-CADDR))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (6 6 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (6 6 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION BOOLEANP))
 (6 3 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION DARGP))
 (5 5 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (5 5 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (5 5 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (5 5 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (5 5 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (5 5 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (5 3 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (4 4 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (4 4 (:REWRITE QUOTE-LEMMA-FOR-BOUNDED-DARG-LISTP-GEN-ALT))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (4 2 (:REWRITE DEFAULT-+-2))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE USE-ALL-ALISTP-2))
 (3 3 (:REWRITE USE-ALL-ALISTP))
 (3 3 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-TRIVIAL-FORMALS))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (3 3 (:REWRITE EQUAL-CONSTANT-+))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (3 3 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:REWRITE ALISTP-CONSTANT-OPENER))
 (3 1 (:REWRITE PSEUDO-DAGP-OF-CDR-WHEN-PSEUDO-DAGP))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (2 1 (:REWRITE SYMBOL-LISTP-OF-CADR-OF-CAR-WHEN-PSEUDO-TERMP-CHEAP))
 (2 1 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (2 1 (:REWRITE BV-3-2-1-HACKB))
 (2 1 (:DEFINITION FIX))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION BVLT))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (1 1 (:REWRITE EQUAL-OF-LEN-AND-0))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (1 1 (:REWRITE BV-3-2-1-HACK))
 (1 1 (:REWRITE +-OF-MINUS))
 )
(MYIF-OF-MYIF-OF-MYIF-SAME-TESTS
 (3 3 (:REWRITE MYIF-WHEN-NOT-NIL))
 (3 3 (:REWRITE MYIF-WHEN-NIL))
 (3 3 (:REWRITE MYIF-OF-CONSTANT-WHEN-NOT-NIL))
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 (1 1 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(DAG-TO-TERM-LIMITED
 (152 76 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (76 76 (:TYPE-PRESCRIPTION ALL-NATP))
 (34 1 (:REWRITE NOT-MYQUOTEP-WHEN-LEN-WRONG))
 (22 11 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (11 11 (:TYPE-PRESCRIPTION DARGP))
 (11 11 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (11 11 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (11 11 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (11 11 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (11 11 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (7 4 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 2 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (6 2 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (5 5 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (5 5 (:REWRITE DROP->-HYPS))
 (5 5 (:REWRITE DROP-<=-HYPS))
 (5 5 (:REWRITE DROP-<-HYPS))
 (5 5 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (5 5 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (5 5 (:REWRITE <-OF-BV-AND-CONSTANT))
 (5 5 (:REWRITE <-FROM-<=-FREE))
 (5 4 (:REWRITE NOT-<-WHEN-SBVLT))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE LEN-OF-NTH-0-WHEN-AXE-TREEP-CHEAP))
 (3 3 (:REWRITE USE-ALL-<-2))
 (3 3 (:REWRITE USE-ALL-<))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE LEN-OF-NTH-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE LEN-OF-NTH-WHEN-BOUNDED-DARG-LISTP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE LEN-NTH-FROM-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (2 2 (:REWRITE +-OF-MINUS))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (1 1 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (1 1 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MYQUOTEP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (1 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE <-OF-LEN-AND-CONSTANT))
 )
(REMOVE-DUPLICATES-EQUAL2-AUX)
(REMOVE-DUPLICATES-EQUAL2)
(LOOP-DESIGNATORP)
(MAKE-LOOP-DESIGNATOR)
(LOOP-DESIGNATORP-OF-MAKE-LOOP-DESIGNATOR
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE JVM::USE-ALL-CLASS-NAMESP-2))
 (2 2 (:REWRITE JVM::USE-ALL-CLASS-NAMESP))
 (2 2 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (2 2 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (2 2 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 )
(ALL-LOOP-DESIGNATORP)
(ALL-LOOP-DESIGNATORP-OF-CONS)
(USE-ALL-LOOP-DESIGNATORP-FOR-CAR)
(USE-ALL-LOOP-DESIGNATORP-FOR-CAR-OF-LAST)
(ALL-LOOP-DESIGNATORP-OF-APPEND)
(ALL-LOOP-DESIGNATORP-OF-UNION-EQUAL)
(ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP)
(ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-DESIGNATORP-OF-REVAPPEND)
(ALL-LOOP-DESIGNATORP-OF-CDR)
(ALL-LOOP-DESIGNATORP-OF-NTHCDR)
(ALL-LOOP-DESIGNATORP-OF-FIRSTN)
(ALL-LOOP-DESIGNATORP-OF-REMOVE1-EQUAL)
(ALL-LOOP-DESIGNATORP-OF-REMOVE-EQUAL)
(ALL-LOOP-DESIGNATORP-OF-LAST)
(ALL-LOOP-DESIGNATORP-OF-TAKE)
(ALL-LOOP-DESIGNATORP-WHEN-PERM)
(ALL-LOOP-DESIGNATORP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-DESIGNATORP-1)
(USE-ALL-LOOP-DESIGNATORP)
(USE-ALL-LOOP-DESIGNATORP-2)
(ALL-LOOP-DESIGNATORP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-DESIGNATORP)
(LOOP-IDP)
(ALL-LOOP-IDP)
(ALL-LOOP-IDP-OF-CONS)
(USE-ALL-LOOP-IDP-FOR-CAR)
(USE-ALL-LOOP-IDP-FOR-CAR-OF-LAST)
(ALL-LOOP-IDP-OF-APPEND)
(ALL-LOOP-IDP-OF-UNION-EQUAL)
(ALL-LOOP-IDP-WHEN-NOT-CONSP)
(ALL-LOOP-IDP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-IDP-OF-REVAPPEND)
(ALL-LOOP-IDP-OF-CDR)
(ALL-LOOP-IDP-OF-NTHCDR)
(ALL-LOOP-IDP-OF-FIRSTN)
(ALL-LOOP-IDP-OF-REMOVE1-EQUAL)
(ALL-LOOP-IDP-OF-REMOVE-EQUAL)
(ALL-LOOP-IDP-OF-LAST)
(ALL-LOOP-IDP-OF-TAKE)
(ALL-LOOP-IDP-WHEN-PERM)
(ALL-LOOP-IDP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-IDP-1)
(USE-ALL-LOOP-IDP)
(USE-ALL-LOOP-IDP-2)
(ALL-LOOP-IDP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-IDP)
(ELABORATE-LOOP-ID)
(LOOP-FUNCTION-IDP)
(ALL-LOOP-FUNCTION-IDP)
(ALL-LOOP-FUNCTION-IDP-OF-CONS)
(USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR)
(USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR-OF-LAST)
(ALL-LOOP-FUNCTION-IDP-OF-APPEND)
(ALL-LOOP-FUNCTION-IDP-OF-UNION-EQUAL)
(ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP)
(ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-FUNCTION-IDP-OF-REVAPPEND)
(ALL-LOOP-FUNCTION-IDP-OF-CDR)
(ALL-LOOP-FUNCTION-IDP-OF-NTHCDR)
(ALL-LOOP-FUNCTION-IDP-OF-FIRSTN)
(ALL-LOOP-FUNCTION-IDP-OF-REMOVE1-EQUAL)
(ALL-LOOP-FUNCTION-IDP-OF-REMOVE-EQUAL)
(ALL-LOOP-FUNCTION-IDP-OF-LAST)
(ALL-LOOP-FUNCTION-IDP-OF-TAKE)
(ALL-LOOP-FUNCTION-IDP-WHEN-PERM)
(ALL-LOOP-FUNCTION-IDP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-FUNCTION-IDP-1)
(USE-ALL-LOOP-FUNCTION-IDP)
(USE-ALL-LOOP-FUNCTION-IDP-2)
(ALL-LOOP-FUNCTION-IDP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-FUNCTION-IDP)
(LOOP-FUNCTION-DESIGNATORP)
(ALL-LOOP-FUNCTION-DESIGNATORP)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-CONS)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP-FOR-CAR)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP-FOR-CAR-OF-LAST)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-APPEND)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-UNION-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP)
(ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-REVAPPEND)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-CDR)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-NTHCDR)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-FIRSTN)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-REMOVE1-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-REMOVE-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-LAST)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-TAKE)
(ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-PERM)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-FUNCTION-DESIGNATORP-1)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP-2)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP)
(ELABORATE-LOOP-FUNCTION-ID)
(LOOP-FUNCTION-DESIGNATORP-OF-ELABORATE-LOOP-ID
 (19 19 (:TYPE-PRESCRIPTION ELABORATE-LOOP-ID))
 (5 5 (:REWRITE USE-ALL-LOOP-DESIGNATORP-2))
 (5 5 (:REWRITE USE-ALL-LOOP-DESIGNATORP))
 (1 1 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (1 1 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (1 1 (:REWRITE JVM::USE-ALL-CLASS-NAMESP-2))
 (1 1 (:REWRITE JVM::USE-ALL-CLASS-NAMESP))
 (1 1 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-TRIVIAL-FORMALS))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 )
(ELABORATE-LOOP-FUNCTION-IDS
 (8 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:TYPE-PRESCRIPTION ELABORATE-LOOP-FUNCTION-ID))
 (1 1 (:TYPE-PRESCRIPTION DARGP))
 (1 1 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (1 1 (:REWRITE JVM::USE-ALL-CLASS-NAMESP-2))
 (1 1 (:REWRITE JVM::USE-ALL-CLASS-NAMESP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (1 1 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (1 1 (:REWRITE LEN-GIVES-CONSP))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (1 1 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (1 1 (:REWRITE CONSP-FROM-LEN-BOUND))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 (1 1 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 )
(ELABORATE-LOOP-FUNCTION-IDS-IN-DOUBLETS
 (302 84 (:REWRITE DEFAULT-CAR))
 (302 17 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (298 28 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (157 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (104 104 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (104 104 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (100 100 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (100 100 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (92 92 (:REWRITE CONSP-FROM-LEN-BOUND))
 (85 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (82 41 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (67 23 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (67 23 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (61 36 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (60 4 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (56 28 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (55 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (47 28 (:REWRITE DEFAULT-CDR))
 (46 23 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (44 44 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (44 44 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (41 41 (:TYPE-PRESCRIPTION DARGP))
 (41 41 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (41 41 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (41 41 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (41 41 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (41 41 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (37 1 (:DEFINITION STRIP-CADRS))
 (34 18 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (30 17 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (30 1 (:DEFINITION ELABORATE-LOOP-FUNCTION-IDS))
 (29 29 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (29 29 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (28 28 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (23 23 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (23 23 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (23 23 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (23 23 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (19 1 (:DEFINITION ELABORATE-LOOP-FUNCTION-ID))
 (18 18 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (17 17 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (16 8 (:REWRITE NOT-<-WHEN-SBVLT))
 (16 8 (:REWRITE DEFAULT-<-1))
 (13 13 (:REWRITE WFR-HACK5))
 (13 13 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (13 1 (:DEFINITION ELABORATE-LOOP-ID))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (9 9 (:REWRITE JVM::USE-ALL-CLASS-NAMESP-2))
 (9 9 (:REWRITE JVM::USE-ALL-CLASS-NAMESP))
 (9 9 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (9 9 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (9 9 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 (9 9 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 8 (:REWRITE USE-ALL-<=-2))
 (8 8 (:REWRITE USE-ALL-<=))
 (8 8 (:REWRITE USE-ALL-<-2))
 (8 8 (:REWRITE USE-ALL-<))
 (8 8 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (8 8 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (8 8 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (8 8 (:REWRITE DROP->-HYPS))
 (8 8 (:REWRITE DROP-<=-HYPS))
 (8 8 (:REWRITE DROP-<-HYPS))
 (8 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE BOUND-WHEN-USB2))
 (8 8 (:REWRITE BOUND-WHEN-USB))
 (8 8 (:REWRITE ARRAY-DIM-BOUND))
 (8 8 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (8 8 (:REWRITE <-WHEN-BVLT))
 (8 8 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (8 8 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (8 8 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (8 8 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (8 8 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE <-OF-BV-AND-CONSTANT))
 (8 8 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (8 8 (:REWRITE <-FROM-<=-FREE))
 (5 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP-FOR-CAR))
 (4 4 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (4 4 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (3 1 (:REWRITE JVM::PCP-OF-CAR))
 (2 2 (:TYPE-PRESCRIPTION ALL-PCP))
 (2 2 (:TYPE-PRESCRIPTION ALL-LOOP-DESIGNATORP))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:TYPE-PRESCRIPTION JVM::PCP))
 (1 1 (:TYPE-PRESCRIPTION LOOP-DESIGNATORP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP-2))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP))
 (1 1 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-TRIVIAL-FORMALS))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(LOOKUP-LOOP-FUNCTION
 (82 2 (:DEFINITION ASSOC-EQUAL))
 (42 2 (:DEFINITION STRIP-CARS))
 (32 1 (:REWRITE ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP))
 (24 4 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (20 2 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (20 2 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (14 10 (:REWRITE DEFAULT-CAR))
 (14 2 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (13 13 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (13 13 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (13 13 (:REWRITE LEN-GIVES-CONSP))
 (13 13 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (13 13 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (13 13 (:REWRITE CONSP-FROM-LEN-BOUND))
 (7 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (6 2 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (6 2 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (4 4 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (4 4 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (4 4 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (4 2 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 2 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE USE-ALL-ALISTP-2))
 (2 2 (:REWRITE USE-ALL-ALISTP))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (2 2 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (2 2 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE ALISTP-CONSTANT-OPENER))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP-2))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-TRIVIAL-FORMALS))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 )
(MEASURE-ITEMP)
(ALL-MEASURE-ITEMP)
(MEASURESP)
(ELABORATE-MEASURES-OPTION)
(MEASURE-HINTSP
 (182 21 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (157 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (85 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (55 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (42 21 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (42 21 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (35 35 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (35 35 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (31 31 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (31 31 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (31 31 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:REWRITE DEFAULT-CAR))
 (22 11 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (21 21 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (21 21 (:TYPE-PRESCRIPTION DARGP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (21 21 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (21 21 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (21 21 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (21 21 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (21 21 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (18 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (11 11 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (11 11 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (8 8 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(LOOP-GUARDSP
 (182 21 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (157 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (85 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (55 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (42 21 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (42 21 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (35 35 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (35 35 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (31 31 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (31 31 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (31 31 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:REWRITE DEFAULT-CAR))
 (22 11 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (21 21 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (21 21 (:TYPE-PRESCRIPTION DARGP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (21 21 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (21 21 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (21 21 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (21 21 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (21 21 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (18 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (11 11 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (11 11 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (11 11 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (8 8 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(ALL-UNTRANSLATED-TERM-LISTP)
(ALL-UNTRANSLATED-TERM-LISTP-OF-CONS)
(USE-ALL-UNTRANSLATED-TERM-LISTP-FOR-CAR)
(USE-ALL-UNTRANSLATED-TERM-LISTP-FOR-CAR-OF-LAST)
(ALL-UNTRANSLATED-TERM-LISTP-OF-APPEND)
(ALL-UNTRANSLATED-TERM-LISTP-OF-UNION-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP-WHEN-NOT-CONSP)
(ALL-UNTRANSLATED-TERM-LISTP-WHEN-NOT-CONSP-CHEAP)
(ALL-UNTRANSLATED-TERM-LISTP-OF-REVAPPEND)
(ALL-UNTRANSLATED-TERM-LISTP-OF-CDR)
(ALL-UNTRANSLATED-TERM-LISTP-OF-NTHCDR)
(ALL-UNTRANSLATED-TERM-LISTP-OF-FIRSTN)
(ALL-UNTRANSLATED-TERM-LISTP-OF-REMOVE1-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP-OF-REMOVE-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP-OF-LAST)
(ALL-UNTRANSLATED-TERM-LISTP-OF-TAKE)
(ALL-UNTRANSLATED-TERM-LISTP-WHEN-PERM)
(ALL-UNTRANSLATED-TERM-LISTP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-UNTRANSLATED-TERM-LISTP-1)
(USE-ALL-UNTRANSLATED-TERM-LISTP)
(USE-ALL-UNTRANSLATED-TERM-LISTP-2)
(ALL-UNTRANSLATED-TERM-LISTP-OF-ADD-TO-SET-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP)
(INVARIANTSP
 (286 28 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (157 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (149 63 (:REWRITE DEFAULT-CAR))
 (148 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (85 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (78 39 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (74 74 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (74 74 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (66 66 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (66 66 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (63 63 (:REWRITE CONSP-FROM-LEN-BOUND))
 (56 28 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (55 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (50 10 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (42 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (42 14 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (41 26 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 39 (:TYPE-PRESCRIPTION DARGP))
 (39 39 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (39 39 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (39 39 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (39 39 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (39 39 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (33 18 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (28 28 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (27 27 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (27 27 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (22 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (18 18 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (14 14 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 6 (:REWRITE DEFAULT-<-1))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (6 6 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-BV-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(EXCLUDED-LOCALSP
 (286 28 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (157 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (149 63 (:REWRITE DEFAULT-CAR))
 (148 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (85 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (78 39 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (74 74 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (74 74 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (66 66 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (66 66 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (63 63 (:REWRITE CONSP-FROM-LEN-BOUND))
 (56 28 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (55 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (50 10 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (42 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (42 14 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (41 26 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 39 (:TYPE-PRESCRIPTION DARGP))
 (39 39 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (39 39 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (39 39 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (39 39 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (39 39 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (33 18 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (28 28 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (27 27 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (27 27 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (22 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (18 18 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (14 14 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 6 (:REWRITE DEFAULT-<-1))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (6 6 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-BV-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(POSTLUDESP
 (286 28 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (157 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (149 63 (:REWRITE DEFAULT-CAR))
 (148 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (85 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (78 39 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (74 74 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (74 74 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (66 66 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (66 66 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (63 63 (:REWRITE CONSP-FROM-LEN-BOUND))
 (56 28 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (55 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (50 10 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (42 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (42 14 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (41 26 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 39 (:TYPE-PRESCRIPTION DARGP))
 (39 39 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (39 39 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (39 39 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (39 39 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (39 39 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (33 18 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (28 28 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (28 28 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (27 27 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (27 27 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (22 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (18 18 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (18 18 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (18 18 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (18 18 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (14 14 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 6 (:REWRITE DEFAULT-<-1))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (6 6 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-BV-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(COMPARISON)
(STATE-COMPONENT-EXTRACTION-RULES)
(SBVLT-RULES)
(TYPE-RULES2)
(RUN-UNTIL-EXIT-SEGMENT-OR-HIT-LOOP-HEADER-RULES-SPLIT)
(RUN-UNTIL-EXIT-SEGMENT-OR-HIT-LOOP-HEADER-RULES-SMART)
(RUN-UNTIL-EXIT-SEGMENT-RULES)
(LIFTER-RULES)
(MAKE-ALIST-BY-SECONDS)
(SEPARATE-PAIRS-BY-CLASS-NAME-AND-FIELD-NAME)
(NEGATE-DAG)
(MAKE-DISEQUALITY-DAG)
(ADS-DONT-ALIASP)
(AD-DOESNT-ALIAS-ANYP)
(NO-ALIASES-IN-SETP)
(NO-ALIASES-IN-SETSP)
(NO-ALIASESP)
(PROCESS-REPLACEMENT-ALIST
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(PERFORM-REPLACEMENTS
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1 1 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(PERFORM-REPLACEMENTS-ON-CDRS)
(JVM-DESTRUCTOR-FNS)
(VARS-OF-ALL-ITEMS
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(MAKE-DAG-VAR-ARRAY-AUX)
(MAKE-DAG-VAR-ARRAY)
(FIND-NODENUM-OF-SI-DAG-TO-REPLACE
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(LOOKUP-PARAMS
 (14 9 (:REWRITE DEFAULT-<-2))
 (14 9 (:REWRITE DEFAULT-<-1))
 (13 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (11 11 (:REWRITE USE-ALL-<=-2))
 (11 11 (:REWRITE USE-ALL-<=))
 (11 11 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (11 11 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE ARRAY-DIM-BOUND))
 (11 11 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (11 11 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (11 11 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (11 11 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (11 11 (:REWRITE <-OF-BV-AND-CONSTANT))
 (11 11 (:REWRITE <-FROM-<=-FREE))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (7 7 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (6 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:REWRITE USE-ALL-NATP-2))
 (3 3 (:REWRITE USE-ALL-NATP))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NATP-WHEN-BOUNDED-DARG-LISTP-GEN))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (3 3 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (3 3 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (3 3 (:REWRITE <-OF-CONSTANT-AND-MINUS))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(ALL-PSEUDO-DAGP-OR-MYQUOTEP)
(ADD-TO-DAG-ALLOWS-CONSTANTS)
(MAKE-CONS-NEST-DAG
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (1 1 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 )
(STORE-PARTIAL-LIFT)
(PARTIAL-LIFT-EVENT
 (252 126 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (126 126 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(SWAP-PAIRS)
(STANDARD-HYPS)
(GET-DAG-PC)
(CODE-HYPS)
(BAD-ARRAY-ROW-TERMP)
(GET-ADDRESSES-FROM-DAG)
(MAKE-UNCHANGEDNESS-INVARIANTS-FOR-EXPRS)
(SIMPLIFY-ALL-TERMS-WITH-ASSUMPTION)
(PROVE-INVARIANT-CONJUNCTS)
(PROVE-CANDIDATE-INVARS)
(FILTER-CANDIDATE-INVARS-THAT-HOLD-INITIALLY-AUX)
(FILTER-CANDIDATE-INVARS-THAT-HOLD-INITIALLY)
(GET-PC-OF-NODENUM)
(STACK-HEIGHT-COMPARISON)
(STACK-HEIGHT-COMPARISON-FOR-NODENUM)
(REPLACE-STATES-WITH-T-AND-NIL)
(GET-TERMINATION-TEST-DAG)
(REPLACE-LOOP-STATES)
(REPLACE-NON-LOOP-STATES)
(GET-ONE-REP-DAG)
(GET-EXIT-DAG)
(GET-HEAP-DAG)
(GET-LOCAL-DAG)
(MAKE-LOOP-PARAMETERS-FOR-LOCALS)
(GET-HEAP-UPDATE-TRIPLES-AUX)
(GET-HEAP-UPDATE-TRIPLES)
(GET-HEAP-UPDATE-PAIRS-FROM-TRIPLES)
(MAKE-LOOP-PARAMETERS-FOR-FIELDS)
(GET-STATIC-FIELD-UPDATE-PAIRS-AUX)
(GET-STATIC-FIELD-UPDATE-PAIRS)
(MAKE-LOOP-PARAMETERS-FOR-STATIC-FIELDS)
(LOOKUP-EQUIVALENT-DAG)
(FIND-READ-ONLY-PARAMS)
(FIND-READ-ONLY-PARAMS-LST)
(MAKE-REPLACEMENT-ALIST)
(MAKE-NEW-VAL-DAGS-READ-ONLY)
(LOOKUP-AND-UNION
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-UNION-EQUAL-TYPE))
 (6 6 (:TYPE-PRESCRIPTION UNION-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(GREATEST-NUM-LESS-THAN-OR-EQUAL)
(LOOKUP-IN-LINE-NUMBER-TABLE)
(STRIP-SET-FIELD-CALLS
 (2287 43 (:REWRITE DAG-EXPRP-OF-LOOKUP-EQUAL-WHEN-PSEUDO-DAGP))
 (2282 1196 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (2169 134 (:REWRITE DEFAULT-<-1))
 (1909 23 (:REWRITE ACL2-NUMBERP-OF-NTH-OF-DARGS))
 (1119 13 (:REWRITE BOUNDED-DAG-EXPRP-OF-LOOKUP-EQUAL-WHEN-PSEUDO-DAGP))
 (1095 1095 (:TYPE-PRESCRIPTION ALL-NATP))
 (418 209 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (363 3 (:REWRITE NATP-OF-NTH-OF-DARGS))
 (312 2 (:REWRITE DARGP-LESS-THAN-OF-NTH-WHEN-BOUNDED-DARG-LISTP-GEN))
 (270 90 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (270 90 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (225 6 (:REWRITE JVM::EQLABLE-ALISTP-WHEN-ALISTP-AND-INTEGER-LISTP-OF-STRIP-CARS))
 (216 110 (:REWRITE DEFAULT-+-2))
 (213 213 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (213 213 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (213 213 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (213 213 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (209 209 (:TYPE-PRESCRIPTION DARGP))
 (206 1 (:REWRITE NATP-OF-+-WHEN-NATP-AND-NATP))
 (195 195 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (195 195 (:REWRITE DROP->-HYPS))
 (195 195 (:REWRITE DROP-<-HYPS))
 (195 195 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (195 195 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (195 195 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (195 195 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (195 195 (:REWRITE <-OF-BV-AND-CONSTANT))
 (195 195 (:REWRITE <-FROM-<=-FREE))
 (187 4 (:REWRITE NOT-MYQUOTEP-WHEN-LEN-WRONG))
 (183 3 (:DEFINITION EQLABLE-ALISTP))
 (159 159 (:REWRITE USE-ALL-<=-2))
 (159 159 (:REWRITE USE-ALL-<=))
 (159 159 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (159 159 (:REWRITE DROP-<=-HYPS))
 (159 159 (:REWRITE ARRAY-DIM-BOUND))
 (159 159 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (159 159 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (150 134 (:REWRITE DEFAULT-<-2))
 (143 143 (:REWRITE USE-ALL-<-2))
 (143 143 (:REWRITE USE-ALL-<))
 (143 143 (:REWRITE BOUND-WHEN-USB2))
 (143 143 (:REWRITE <-WHEN-BVLT))
 (143 143 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (143 143 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (122 107 (:REWRITE NOT-<-WHEN-SBVLT))
 (110 110 (:REWRITE DEFAULT-+-1))
 (110 110 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (108 107 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (107 107 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (107 107 (:REWRITE BOUND-WHEN-USB))
 (107 107 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (102 3 (:REWRITE EQUAL-CONSTANT-+))
 (96 6 (:REWRITE ACL2-NUMBERP-OF-NTH-WHEN-DARG-LISTP))
 (88 16 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (85 85 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (85 85 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (85 85 (:REWRITE LEN-GIVES-CONSP))
 (82 2 (:REWRITE BOUNDED-DARG-LISTP-OF-DARGS-WHEN-<-SIMPLE))
 (79 68 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (75 75 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (75 75 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (75 75 (:REWRITE CONSP-FROM-LEN-BOUND))
 (73 13 (:REWRITE DARG-LISTP-OF-DARGS-WHEN-POSSIBLY-NEGATED-NODENUMP))
 (68 68 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (68 68 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (68 68 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (68 68 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (68 68 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (68 68 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (68 68 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (68 68 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (68 68 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (68 68 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (68 68 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (68 68 (:REWRITE EQUAL-WHEN-<-OF-+))
 (68 68 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (68 68 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (68 68 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (68 68 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (68 68 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (68 66 (:REWRITE NTH-WITH-LARGE-INDEX-CHEAP))
 (68 66 (:REWRITE NTH-WHEN-<=-LEN-CHEAP))
 (68 2 (:REWRITE BOUNDED-DARG-LISTP-OF-DARGS-OF-LOOKUP-EQUAL-WHEN-WEAK-DAGP))
 (68 2 (:REWRITE BOUNDED-DARG-LISTP-OF-DARGS-OF-LOOKUP-EQUAL))
 (66 66 (:REWRITE NTH-WHEN-ZP-CHEAP))
 (66 66 (:REWRITE NTH-WHEN-NOT-CONSP-CHEAP))
 (66 66 (:REWRITE NTH-WHEN-EQUAL-OF-TAKE-AND-CONSTANT))
 (66 66 (:REWRITE NTH-WHEN-EQUAL-OF-FIRSTN-AND-CONSTANT))
 (66 66 (:REWRITE NTH-WHEN-ALL-SAME-CHEAP))
 (66 16 (:REWRITE DAG-EXPRP-OF-LOOKUP-EQUAL-WHEN-WEAK-DAGP-AUX))
 (63 63 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (63 63 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (56 28 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-MYQUOTEP-CHEAP))
 (55 27 (:REWRITE NOT-<-OF-NTH-WHEN-ALL-NATP))
 (54 18 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-NTH-0-AND-QUOTE))
 (54 3 (:REWRITE ALISTP-OF-CDR))
 (52 52 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (52 52 (:REWRITE +-OF-MINUS))
 (48 9 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (46 46 (:TYPE-PRESCRIPTION MYQUOTEP))
 (44 2 (:REWRITE NOT-EQUAL-NTH-WHEN-NOT-MEMBERP-CHEAP))
 (41 41 (:REWRITE DAG-EXPRP-OF-LOOKUP-EQUAL-WHEN-PSEUDO-DAGP-AUX))
 (36 18 (:REWRITE LEN-OF-NTH-0-WHEN-AXE-TREEP-CHEAP))
 (36 18 (:REWRITE DARGP-LESS-THAN-WHEN-MYQUOTEP-CHEAP))
 (36 4 (:REWRITE RATIONALP-OF-NTH-OF-DARGS))
 (33 33 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (33 33 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (29 18 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (28 28 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-SYMBOLP-CHEAP))
 (28 28 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-NOT-CONSP-CHEAP))
 (28 28 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (28 28 (:REWRITE BOUNDED-DAG-EXPRP-MONOTONE))
 (27 27 (:REWRITE NOT-<-OF-NTH-WHEN-BOUNDED-DARG-LISTP-GEN-CONSTANT))
 (27 27 (:REWRITE <-OF-NTH-WHEN-ALL-<-FREE))
 (27 6 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (27 1 (:REWRITE NOT-<-OF-0-AND-NTH-OF-DARGS))
 (26 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-<))
 (24 24 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMP))
 (24 24 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (23 23 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (23 23 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (23 23 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (23 23 (:REWRITE <-OF-NTH-WHEN-BOUNDED-DARG-LISTP-FREE))
 (23 19 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (21 21 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (21 21 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (21 9 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (21 9 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (20 20 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (20 5 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP-AUX-2))
 (20 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-BOUNDED-DAG-EXPRP))
 (20 2 (:REWRITE BOUNDED-DARG-LISTP-OF-DARGS-WHEN-BOUNDED-DAG-EXPRP))
 (19 19 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (19 19 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (19 19 (:REWRITE NATP-WHEN-BOUNDED-DARG-LISTP-GEN))
 (19 4 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (18 18 (:TYPE-PRESCRIPTION AXE-TREEP))
 (18 18 (:REWRITE LEN-OF-NTH-WHEN-ITEMS-HAVE-LEN))
 (18 18 (:REWRITE LEN-OF-NTH-WHEN-BOUNDED-DARG-LISTP))
 (18 18 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (18 18 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (18 18 (:REWRITE LEN-NTH-FROM-ITEMS-HAVE-LEN))
 (18 18 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (18 18 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (18 18 (:REWRITE DARGP-LESS-THAN-MONO))
 (18 9 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (18 9 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (18 6 (:REWRITE JVM::EQLABLE-ALISTP-WHEN-METHOD-PROGRAMP))
 (17 17 (:REWRITE USE-ALL-NATP-2))
 (17 17 (:REWRITE USE-ALL-NATP))
 (17 17 (:REWRITE CONSP-NTH-FROM-ITEMS-HAVE-LEN))
 (17 7 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP))
 (17 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-INTEGERP))
 (16 16 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (16 16 (:REWRITE DAG-EXPRP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (16 16 (:REWRITE DAG-EXPRP-WHEN-BOUNDED-DAG-EXPRP))
 (13 13 (:REWRITE DARG-LISTP-WHEN-BOUNDED-DARG-LISTP))
 (13 13 (:REWRITE BOUNDED-DAG-EXPRP-OF-LOOKUP-EQUAL-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (12 12 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (12 12 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (12 12 (:REWRITE POSSIBLY-NEGATED-NODENUMP-WHEN-NOT-CONSP))
 (12 12 (:REWRITE POSSIBLY-NEGATED-NODENUMP-WHEN-NATP))
 (12 12 (:REWRITE POSSIBLY-NEGATED-NODENUMP-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP))
 (12 2 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (12 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (11 11 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (11 11 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (11 11 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (11 11 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (11 11 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (11 5 (:REWRITE DARG-LISTP-WHEN-NOT-CONSP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-DAGP-AUX))
 (10 10 (:TYPE-PRESCRIPTION MEMBERP))
 (10 10 (:REWRITE USE-ALL-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-RATIONALP))
 (10 5 (:REWRITE DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (9 9 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (9 9 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (9 9 (:REWRITE USE-ALL-ALISTP-2))
 (9 9 (:REWRITE USE-ALL-ALISTP))
 (9 9 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (9 9 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (9 9 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (9 9 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (9 9 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (9 9 (:REWRITE ALISTP-CONSTANT-OPENER))
 (9 1 (:REWRITE INTEGERP-OF-NTH-OF-DARGS-ALT))
 (9 1 (:REWRITE INTEGERP-OF-NTH-OF-DARGS))
 (8 8 (:TYPE-PRESCRIPTION BOOLEANP))
 (8 8 (:REWRITE QUOTE-LEMMA-FOR-BOUNDED-DARG-LISTP-GEN-ALT))
 (8 4 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (8 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-NOT-CONSP))
 (7 7 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (7 1 (:REWRITE ALL-INTEGERP-WHEN-UNSIGNED-BYTE-LISTP-8))
 (6 6 (:TYPE-PRESCRIPTION BOUNDED-DARG-LISTP))
 (6 6 (:REWRITE USE-ALL-DAG-FUNCTION-CALL-EXPRP-2))
 (6 6 (:REWRITE USE-ALL-DAG-FUNCTION-CALL-EXPRP))
 (6 6 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-EQLABLE-ALISTP))
 (6 3 (:REWRITE NATP-OF-NTH-WHEN-POSSIBLY-NEGATED-NODENUMSP-CHEAP))
 (5 5 (:REWRITE WEAK-DAGP-WHEN-PSEUDO-DAGP-AUX))
 (5 5 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP-AUX))
 (5 5 (:REWRITE PSEUDO-DAGP-AUX-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION ALL-<))
 (4 4 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE MYQUOTEP-WHEN-BOUNDED-DAG-EXPRP))
 (4 4 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (4 2 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (4 2 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (4 2 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (4 2 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (4 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-BOUNDED-DARG-LISTP-OF-CDR-CHEAP))
 (4 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (4 1 (:REWRITE UNSIGNED-BYTE-LISTP-WHEN-NOT-CONSP))
 (4 1 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE NATP-OF-NTH-WHEN-BOUNDED-DARG-LISTP-GEN))
 (3 3 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE BV-1-0-HACK))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-LISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE QUOTE-LEMMA-FOR-BOUNDED-DARG-LISTP-GEN))
 (2 2 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (2 2 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-AND-NOT-INTERSECTION-EQUAL-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (2 2 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (2 2 (:REWRITE MEMBERP-WHEN-PERM-OF-UPDATE-NTH))
 (2 2 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (2 2 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (2 2 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (2 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-SINGLETON-CHEAP))
 (2 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-BOUNDED-DAG-EXPRP-GEN))
 (2 2 (:REWRITE BOUNDED-DARG-LISTP-MONOTONE))
 (2 2 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (2 2 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (2 2 (:REWRITE ALL-<-TRANSITIVE))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-MINUS))
 (2 1 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-UNSIGNED-BYTE-LISTP))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-BOUNDED-DARG-LISTP-SPECIAL))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-BOUNDED-DARG-LISTP))
 (1 1 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-INTEGERP-WHEN-UNSIGNED-BYTE-LISTP))
 (1 1 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 )
(MAKE-UNCHANGEDNESS-CLAIMP)
(ADDRESSP-CLAIMS-FOR-FIELDS)
(ADDRESSP-CLAIMS-FOR-FIELDS-OF-CLASS)
(ADDRESSP-CLAIMS-FOR-FIELDS-OF-CLASSES)
(ADDRESSP-CLAIMS-FOR-FIELDS-OF-OBJECT)
(INVARIANTS-ABOUT-HEAP-AUX)
(INVARIANTS-ABOUT-HEAP)
(MAKE-UNCHANGED-LOCAL-INVARS)
(LOCAL-STORED-INTO-OR-NIL)
(LOCALS-STORED-INTO
 (6 6 (:TYPE-PRESCRIPTION ADD-TO-SET-EQUAL))
 )
(FIND-A-FACT-TO-PUSH-BACK)
(PUSH-BACK-FACTS)
(MAYBE-NON-NULL-INVAR-FOR-LOCAL)
(MAYBE-ADD-NON-NEGATIVE-INVAR-FOR-LOCAL)
(EXTRACT-CLASS-OF-LOCAL)
(EXTRACT-HEAP-DAG)
(MAYBE-ARRAY-REF-INVAR-FOR-LOCAL)
(MAKE-TYPE-INVARS-FOR-LOCAL)
(MAKE-TYPE-INVARS-FOR-LOCALS-AUX)
(MAKE-TYPE-INVARS-FOR-LOCALS)
(GET-CONJUNCTS-FROM-TERM
 (160 71 (:REWRITE DEFAULT-+-2))
 (113 113 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (84 84 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (82 82 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (82 71 (:REWRITE DEFAULT-+-1))
 (80 3 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (75 75 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (75 75 (:REWRITE LEN-GIVES-CONSP))
 (75 75 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (75 75 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (75 75 (:REWRITE CONSP-FROM-LEN-BOUND))
 (60 60 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (58 58 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (52 26 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (41 3 (:REWRITE SUBSETP-CAR-MEMBER))
 (30 5 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (30 5 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (26 26 (:TYPE-PRESCRIPTION DARGP))
 (26 26 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (26 26 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (26 26 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (26 26 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (24 10 (:REWRITE DEFAULT-<-2))
 (20 20 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (20 20 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (17 10 (:REWRITE DEFAULT-<-1))
 (16 16 (:REWRITE WFR-HACK5))
 (16 16 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (15 15 (:REWRITE FOLD-CONSTS-IN-+))
 (15 5 (:REWRITE PSEUDO-DAGP-OF-CDR-WHEN-PSEUDO-DAGP))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (13 13 (:REWRITE USE-ALL-<=-2))
 (13 13 (:REWRITE USE-ALL-<=))
 (13 13 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (13 13 (:REWRITE ARRAY-DIM-BOUND))
 (13 13 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (13 13 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (13 13 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (13 13 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (13 10 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (12 12 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (12 12 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (12 12 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (12 12 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (12 12 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (12 12 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (12 12 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (12 12 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (12 12 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (12 12 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (12 12 (:REWRITE EQUAL-WHEN-<-OF-+))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (12 12 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (10 10 (:REWRITE NOT-<-WHEN-SBVLT))
 (10 10 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (10 10 (:REWRITE HELPER-HELPER2))
 (10 10 (:REWRITE HELPER-HELPER))
 (10 10 (:REWRITE DROP->-HYPS))
 (10 10 (:REWRITE DROP-<=-HYPS))
 (10 10 (:REWRITE DROP-<-HYPS))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE BOUND-WHEN-USB))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE <-OF-BV-AND-CONSTANT))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 5 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (10 5 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (10 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (9 2 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (7 7 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (6 3 (:REWRITE NOT-MEMBER-EQUAL-WHEN-NOT-MEMBER-EQUAL-OF-CDR-CHEAP))
 (6 3 (:REWRITE MEMBER-EQUAL-WHEN-MEMBER-EQUAL-OF-CDR-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (5 5 (:TYPE-PRESCRIPTION ALISTP))
 (5 5 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (5 5 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (5 5 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (5 5 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (4 4 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (3 3 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (3 3 (:REWRITE SUBSETP-MEMBER . 2))
 (3 3 (:REWRITE SUBSETP-MEMBER . 1))
 (3 3 (:REWRITE MEMBER-EQUAL-WHEN-MEMBER-EQUAL-OF-MEMBER-EQUAL))
 (3 3 (:REWRITE MEMBER-EQUAL-OF-SINGLETON-CONSTANT-IFF))
 (3 3 (:REWRITE MEMBER-EQUAL-OF-CONSTANT-WHEN-NOT-EQUAL-CAR))
 (3 3 (:REWRITE MEMBER-EQUAL-OF-CONSTANT-TRIM))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 2 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 (2 2 (:REWRITE SUBSETP-OF-CDR))
 (2 2 (:REWRITE COMMUTATIVITY-2-OF-+-WHEN-CONSTANT))
 )
(VARS-IN-TERM-INCLUDE-ONLYP)
(VARS-IN-TERMS-INCLUDE-ONLYP)
(VARS-IN-TERM-LISTS-INCLUDE-ONLYP
 (42 3 (:DEFINITION SYMBOL-LISTP))
 (16 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (8 4 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP-2))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (6 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (6 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (5 5 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (5 5 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (5 5 (:REWRITE LEN-GIVES-CONSP))
 (5 5 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (5 5 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (5 5 (:REWRITE CONSP-FROM-LEN-BOUND))
 (4 4 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (4 2 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-TRIVIAL-FORMALS))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (3 2 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (3 2 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION DARGP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (2 2 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 )
(MEASURE-FOR-LOOP)
(EXTRACT-RULE-NAMES-FROM-EVENT
 (35 2 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (32 4 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (30 16 (:REWRITE DEFAULT-CAR))
 (22 8 (:REWRITE DEFAULT-CDR))
 (16 16 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (9 9 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (9 9 (:REWRITE LEN-GIVES-CONSP))
 (9 9 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (9 9 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (9 9 (:REWRITE CONSP-FROM-LEN-BOUND))
 (9 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (8 8 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (8 8 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (8 4 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (8 4 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (4 4 (:TYPE-PRESCRIPTION DARGP))
 (4 4 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (4 4 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (4 2 (:REWRITE NOT-MEMBER-EQUAL-WHEN-NOT-MEMBER-EQUAL-OF-CDR-CHEAP))
 (4 2 (:REWRITE MEMBER-EQUAL-WHEN-MEMBER-EQUAL-OF-CDR-CHEAP))
 (4 2 (:REWRITE DEFAULT-<-2))
 (4 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE USE-ALL-<=-2))
 (2 2 (:REWRITE USE-ALL-<=))
 (2 2 (:REWRITE USE-ALL-<-2))
 (2 2 (:REWRITE USE-ALL-<))
 (2 2 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE SUBSETP-MEMBER . 2))
 (2 2 (:REWRITE SUBSETP-MEMBER . 1))
 (2 2 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (2 2 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (2 2 (:REWRITE NOT-<-WHEN-SBVLT))
 (2 2 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (2 2 (:REWRITE MEMBER-EQUAL-WHEN-MEMBER-EQUAL-OF-MEMBER-EQUAL))
 (2 2 (:REWRITE MEMBER-EQUAL-OF-SINGLETON-CONSTANT-IFF))
 (2 2 (:REWRITE MEMBER-EQUAL-OF-CONSTANT-WHEN-NOT-EQUAL-CAR))
 (2 2 (:REWRITE MEMBER-EQUAL-OF-CONSTANT-TRIM))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (2 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE DROP->-HYPS))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE DROP-<-HYPS))
 (2 2 (:REWRITE BOUND-WHEN-USB2))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE ARRAY-DIM-BOUND))
 (2 2 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (2 2 (:REWRITE <-WHEN-BVLT))
 (2 2 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (2 2 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE <-OF-BV-AND-CONSTANT))
 (2 2 (:REWRITE <-FROM-<=-FREE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (1 1 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (1 1 (:REWRITE SUBSETP-OF-CDR))
 )
(PRINT-LIST-WITH-INDENT-AUX)
(PRINT-LIST-WITH-INDENT)
(MAKE-AXE-RULES-FROM-THEOREM-SAFE)
(DAG-NODES-THAT-CALL)
(TERMS-MENTIONED-IN-POSSIBLY-NEGATED-NODENUMS)
(TERMS-MENTIONED-IN-CONTEXT)
(GET-TERMS-FROM-NODE-CONTEXTS-AUX
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(GET-TERMS-FROM-NODE-CONTEXTS)
(STRIP-NOTS-FROM-TERMS)
(MAYBE-PRINT-INFO-ON-EXCEPTION-BRANCHES)
(INITIALIZE-CLASSES-IN-S0)
(MAKE-LOOP-INFOS)
(GET-LOOPS-FOR-METHOD)
(GET-LOOPS-FOR-METHODS)
(GET-LOOPS-FROM-CLASS)
(GET-LOOPS-FROM-CLASSES-AUX)
(GET-LOOPS-FROM-CLASSES)
(INPUT-INDICATORP)
(INPUT-SOURCE-ALISTP)
(MAKE-INPUT-ASSUMPTIONS
 (2103 19 (:REWRITE USE-ALL-<-FOR-CAR))
 (1124 65 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (943 46 (:REWRITE ALL-<-OF-CDR))
 (875 119 (:REWRITE ALL-NATP-OF-CDR))
 (760 176 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (733 390 (:REWRITE DEFAULT-CDR))
 (719 19 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (597 46 (:REWRITE JVM::LEN-HACK))
 (422 211 (:REWRITE LEN-WHEN-DARGP-CHEAP))
 (371 371 (:TYPE-PRESCRIPTION ALL-NATP))
 (352 176 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (329 65 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (325 325 (:TYPE-PRESCRIPTION NAT-LISTP))
 (217 217 (:REWRITE JVM::USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (217 217 (:REWRITE LEN-GIVES-CONSP))
 (217 217 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (217 217 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (217 217 (:REWRITE CONSP-FROM-LEN-BOUND))
 (216 216 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (211 211 (:TYPE-PRESCRIPTION DARGP))
 (211 211 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (211 211 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (211 211 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (211 211 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (211 211 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (203 134 (:REWRITE DEFAULT-+-2))
 (202 202 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (202 202 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (195 65 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (194 194 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (176 176 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (175 48 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (170 170 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (170 170 (:REWRITE +-OF-MINUS))
 (149 149 (:TYPE-PRESCRIPTION ALL-<))
 (134 134 (:REWRITE DEFAULT-+-1))
 (133 133 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (133 133 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (133 133 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (133 133 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (108 76 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (96 48 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (87 87 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (87 87 (:REWRITE NOT-EQUAL-WHEN-BVLT-ALT))
 (87 87 (:REWRITE NOT-EQUAL-WHEN-BVLT))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM-ALT))
 (87 87 (:REWRITE NOT-EQUAL-OF-CONSTANT-AND-BV-TERM))
 (87 87 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (87 87 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (87 87 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (87 87 (:REWRITE EQUAL-WHEN-<-OF-+))
 (87 87 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (87 87 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (87 87 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (87 87 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (87 87 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (77 77 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (65 65 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (65 65 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (65 65 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (65 65 (:REWRITE ALL-<-TRANSITIVE))
 (48 48 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (48 48 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (46 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (46 22 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (44 22 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (44 22 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (38 38 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (38 19 (:REWRITE NOT-<-WHEN-SBVLT))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (38 19 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (36 36 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (35 35 (:REWRITE LEN-OF-CDDR-WHEN-EQUAL-OF-LEN))
 (32 16 (:REWRITE BV-3-2-1-HACKB))
 (31 31 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (31 31 (:REWRITE BV-1-0-HACK))
 (22 22 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (22 22 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (22 22 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (22 22 (:TYPE-PRESCRIPTION ALISTP))
 (22 22 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (19 19 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (19 19 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (19 19 (:REWRITE USE-ALL-NATP-2))
 (19 19 (:REWRITE USE-ALL-NATP))
 (19 19 (:REWRITE USE-ALL-<=-2))
 (19 19 (:REWRITE USE-ALL-<=))
 (19 19 (:REWRITE USE-ALL-<-2))
 (19 19 (:REWRITE USE-ALL-<))
 (19 19 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (19 19 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (19 19 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (19 19 (:REWRITE NOT-<-OF-CONSTANT-AND-BV))
 (19 19 (:REWRITE NOT-<-OF-CAR-WHEN-BOUNDED-DARG-LISTP-2))
 (19 19 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (19 19 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (19 19 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (19 19 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (19 19 (:REWRITE NATP-WHEN-BOUNDED-DARG-LISTP-GEN))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (19 19 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (19 19 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (19 19 (:REWRITE INTEGERP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (19 19 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (19 19 (:REWRITE DROP->-HYPS))
 (19 19 (:REWRITE DROP-<=-HYPS))
 (19 19 (:REWRITE DROP-<-HYPS))
 (19 19 (:REWRITE DEFAULT-<-2))
 (19 19 (:REWRITE DEFAULT-<-1))
 (19 19 (:REWRITE BOUND-WHEN-USB2))
 (19 19 (:REWRITE BOUND-WHEN-USB))
 (19 19 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (19 19 (:REWRITE ARRAY-DIM-BOUND))
 (19 19 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (19 19 (:REWRITE <-WHEN-BVLT))
 (19 19 (:REWRITE <-WHEN-BOUNDED-POSSIBLY-NEGATED-NODENUMP-2))
 (19 19 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (19 19 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (19 19 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (19 19 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (19 19 (:REWRITE <-OF-BV-AND-CONSTANT))
 (19 19 (:REWRITE <-FROM-<=-FREE))
 (16 16 (:TYPE-PRESCRIPTION BVLT))
 (16 16 (:REWRITE BV-3-2-1-HACK))
 (16 8 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (16 8 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (11 11 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (11 11 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (9 9 (:REWRITE WFR-HACK5))
 (9 9 (:REWRITE JVM::PRIMITIVE-TYPEP-CONSTANT-OPENER))
 (9 9 (:REWRITE JVM::PRIMITIVE-TYPEP-BASE))
 (9 9 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION AXE-TREEP))
 (8 8 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-TRIVIAL-FORMALS))
 (8 8 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (8 8 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (6 2 (:REWRITE PSEUDO-DAGP-OF-CDR-WHEN-PSEUDO-DAGP))
 (6 2 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (3 3 (:TYPE-PRESCRIPTION BOOLEANP))
 (3 3 (:REWRITE QUOTE-LEMMA-FOR-BOUNDED-DARG-LISTP-GEN-ALT))
 )
(EXTRACT-OUTPUT-DAG)
(PARAM-ASSUMPTIONS-AND-VARS-AUX
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-REVAPPEND-TYPE-PRESCRIPTION))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (6 6 (:TYPE-PRESCRIPTION REVAPPEND))
 )
(PARAM-ASSUMPTIONS-AND-VARS)
(SHOW-TERM-UNCHANGED)
(SHOW-TERMS-UNCHANGED)
(SUBMIT-POSTLUDE)
(DECOMPILE-LOOP-BY-UNROLLING)
(DECOMPILE-LOOP-BODY-WITH-INVARS)
(DECOMPILE-PROGRAM)
(LIFT-JAVA-CODE-FN)
(LIFT-JAVA-CODE-SEGMENT-FN)
