(in-package "SMT")
(include-book "../expand-cp")
(include-book "../type-inference-bottomup")
(include-book "../reorder-hypotheses")
(ld "test-smtlink-hint.lisp")
(ld "test-type-options.lisp")

(set-guard-checking :none)

(defun term ()
  '(if (if (integerp x)
           (rationalp y)
         'nil)
       (< (foo x y) '0)
     't)
  )

(expand-cp (list (term)) (my-hint) state)
(reorder-hypotheses '(IF (IF (EQUAL X2 (BINARY-+ X0 X1))
                             (IF (EQUAL X1 (RFIX Y))
                                 (IF (EQUAL X0 (IFIX X)) 'T 'NIL)
                                 'NIL)
                             'NIL)
                         (IF (IF (INTEGERP X) (RATIONALP Y) 'NIL)
                             (< X2 '0)
                             'T)
                         'T)
                    (my-hint))

(type-judgement '(IF (IF (INTEGERP X)
                         (IF (EQUAL X0 (IFIX X))
                             (IF (RATIONALP Y)
                                 (IF (EQUAL X1 (RFIX Y))
                                     (EQUAL X2 (BINARY-+ X0 X1))
                                     'NIL)
                                 'NIL)
                             'NIL)
                         'NIL)
                     (< X2 '0)
                     'T)
                ''t (options)
                (all-vars '(IF (IF (INTEGERP X)
                                  (IF (EQUAL X0 (IFIX X))
                                      (IF (RATIONALP Y)
                                          (IF (EQUAL X1 (RFIX Y))
                                              (EQUAL X2 (BINARY-+ X0 X1))
                                              'NIL)
                                          'NIL)
                                      'NIL)
                                  'NIL)
                              (< X2 '0)
                              'T))
                state)

(defun term2 ()
  '(if (if (integerp x)
           (rationalp y)
         'nil)
       (< ((lambda (a b) (binary-+ a b)) x y) '0)
     't))

(expand-cp (list (term2)) (my-hint) state)
(reorder-hypotheses '(IF (IF (EQUAL X0 (BINARY-+ X Y)) 'T 'NIL)
                         (IF (IF (INTEGERP X) (RATIONALP Y) 'NIL)
                             (< X0 '0)
                             'T)
                         'T)
                    (my-hint))

(defun term3 ()
  '(if (if (< x y)
           (if (integerp x)
               (rationalp y)
             'nil)
         'nil)
       (< (foo x y) '0)
     't)
  )

(expand-cp (list (term3)) (my-hint) state)
(reorder-hypotheses '(IF (IF (EQUAL X2 (BINARY-+ X0 X1))
                             (IF (EQUAL X1 (RFIX Y))
                                 (IF (EQUAL X0 (IFIX X)) 'T 'NIL)
                                 'NIL)
                             'NIL)
                         (IF (IF (< X Y)
                                 (IF (INTEGERP X) (RATIONALP Y) 'NIL)
                                 'NIL)
                             (< X2 '0)
                             'T)
                         'T)
                    (my-hint))
