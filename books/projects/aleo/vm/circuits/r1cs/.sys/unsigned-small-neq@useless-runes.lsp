(ALEOVM::UNSIGNED-SMALL-NEQ-GADGET
 (45 1 (:DEFINITION INTEGER-LENGTH))
 (25 1 (:REWRITE |(floor x 2)| . 1))
 (23 20 (:REWRITE DEFAULT-CDR))
 (18 10 (:REWRITE DEFAULT-PLUS-2))
 (16 13 (:REWRITE DEFAULT-CAR))
 (15 1 (:DEFINITION BINARY-APPEND))
 (14 14 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (11 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (10 10 (:REWRITE DEFAULT-PLUS-1))
 (8 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (5 5 (:REWRITE DEFAULT-TIMES-2))
 (5 5 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (4 4 (:REWRITE ALEOVM::CONSP-OF-POW2SUM-VECTOR))
 (4 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 1 (:REWRITE |(* y x)|))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-SUMS-<))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(floor x 2)| . 2))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ALEOVM::R1CS-CONSTRAINT-LISTP-OF-UNSIGNED-SMALL-NEQ-GADGET
 (55 4 (:DEFINITION BINARY-APPEND))
 (45 1 (:DEFINITION INTEGER-LENGTH))
 (33 23 (:REWRITE DEFAULT-CDR))
 (28 2 (:DEFINITION SYMBOL-LISTP))
 (26 16 (:REWRITE DEFAULT-CAR))
 (25 1 (:REWRITE |(floor x 2)| . 1))
 (24 8 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (19 11 (:REWRITE DEFAULT-PLUS-2))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 11 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE DEFAULT-PLUS-1))
 (11 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (10 10 (:REWRITE ALEOVM::CONSP-OF-POW2SUM-VECTOR))
 (10 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (10 2 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 (8 8 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (5 5 (:REWRITE DEFAULT-TIMES-2))
 (5 5 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (4 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 1 (:REWRITE |(* y x)|))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-SUMS-<))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(floor x 2)| . 2))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ALEOVM::UNSIGNED-SMALL-NEQ-GADGET-SOUNDNESS
 (20378 137 (:REWRITE MOD-ZERO . 4))
 (15714 776 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (13917 131 (:REWRITE MOD-X-Y-=-X . 4))
 (11779 141 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (9174 277 (:LINEAR LEBITS=>NAT-UPPER-BOUND))
 (6208 388 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (6208 388 (:LINEAR EXPT->=-1-ONE))
 (5277 326 (:REWRITE |(< (- x) c)|))
 (4058 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (3382 166 (:REWRITE DEFAULT-MOD-RATIO))
 (3315 1089 (:REWRITE DEFAULT-PLUS-2))
 (3104 388 (:LINEAR EXPT->-1-ONE))
 (3076 2023 (:REWRITE DEFAULT-EXPT-2))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (2611 2611 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (2508 163 (:REWRITE |(equal (- x) c)|))
 (2023 2023 (:REWRITE DEFAULT-EXPT-1))
 (2023 2023 (:REWRITE |(expt 1/c n)|))
 (2023 2023 (:REWRITE |(expt (- x) n)|))
 (1927 1927 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (1927 1927 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (1820 1089 (:REWRITE DEFAULT-PLUS-1))
 (1444 1011 (:REWRITE DEFAULT-TIMES-1))
 (1434 62 (:REWRITE |(* x (+ y z))|))
 (1416 1011 (:REWRITE DEFAULT-TIMES-2))
 (1000 16 (:DEFINITION MEMBER-EQUAL))
 (904 304 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (845 154 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (826 336 (:REWRITE DEFAULT-LESS-THAN-1))
 (814 143 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (804 141 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (780 336 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (780 4 (:REWRITE BITP-WHEN-MEMBER-EQUAL-OF-BIT-LISTP))
 (776 776 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (776 776 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (776 776 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (729 729 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (729 729 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (582 388 (:LINEAR EXPT-X->=-X))
 (582 388 (:LINEAR EXPT-X->-X))
 (582 388 (:LINEAR EXPT-<=-1-TWO))
 (582 388 (:LINEAR EXPT-<-1-TWO))
 (565 113 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (565 113 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (565 113 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (565 113 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (560 206 (:REWRITE DEFAULT-MINUS))
 (537 537 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (489 8 (:REWRITE |(* (if a b c) x)|))
 (474 336 (:REWRITE DEFAULT-LESS-THAN-2))
 (434 434 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (428 60 (:REWRITE MOD-X-Y-=-X . 2))
 (428 60 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (428 60 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (420 16 (:REWRITE ACL2-NUMBERP-X))
 (414 350 (:REWRITE DEFAULT-CDR))
 (388 388 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (388 388 (:LINEAR EXPT-LINEAR-UPPER-<))
 (388 388 (:LINEAR EXPT-LINEAR-LOWER-<))
 (388 388 (:LINEAR EXPT->=-1-TWO))
 (388 388 (:LINEAR EXPT->-1-TWO))
 (388 388 (:LINEAR EXPT-<=-1-ONE))
 (388 388 (:LINEAR EXPT-<-1-ONE))
 (368 171 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (363 326 (:REWRITE |(< (- x) (- y))|))
 (359 359 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (359 359 (:REWRITE DEFAULT-DIVIDE))
 (338 56 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (336 336 (:REWRITE THE-FLOOR-BELOW))
 (336 336 (:REWRITE THE-FLOOR-ABOVE))
 (336 336 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (336 336 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (334 166 (:REWRITE DEFAULT-MOD-1))
 (331 326 (:REWRITE |(< c (- x))|))
 (326 326 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (326 326 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (326 326 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (326 326 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (326 326 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (326 326 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (326 326 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (326 326 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (326 326 (:REWRITE |(< (/ x) (/ y))|))
 (308 308 (:REWRITE INTEGERP-<-CONSTANT))
 (308 308 (:REWRITE CONSTANT-<-INTEGERP))
 (294 6 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (270 6 (:DEFINITION INTEGER-LENGTH))
 (258 42 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (258 42 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (242 81 (:REWRITE |(< (+ (- c) x) y)|))
 (223 223 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (208 8 (:REWRITE RATIONALP-X))
 (208 8 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (202 56 (:REWRITE MOD-CANCEL-*-CONST))
 (192 14 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (185 143 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (178 163 (:REWRITE |(equal (- x) (- y))|))
 (174 1 (:REWRITE LEBITS=>NAT-INJECTIVITY*))
 (171 171 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (168 4 (:DEFINITION RATIONAL-LISTP))
 (166 166 (:REWRITE DEFAULT-MOD-2))
 (164 16 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (163 163 (:REWRITE |(equal c (/ x))|))
 (163 163 (:REWRITE |(equal c (- x))|))
 (163 163 (:REWRITE |(equal (/ x) c)|))
 (163 163 (:REWRITE |(equal (/ x) (/ y))|))
 (158 158 (:REWRITE REDUCE-INTEGERP-+))
 (158 158 (:REWRITE INTEGERP-MINUS-X))
 (158 158 (:META META-INTEGERP-CORRECT))
 (154 154 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (150 6 (:REWRITE |(floor x 2)| . 1))
 (144 24 (:REWRITE INTEGERP-+-REDUCE-CONSTANT))
 (140 1 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (132 5 (:DEFINITION INTEGER-LISTP))
 (125 81 (:REWRITE |(+ c (+ d x))|))
 (116 4 (:DEFINITION ACL2-NUMBER-LISTP))
 (115 34 (:REWRITE |(< y (+ (- c) x))|))
 (114 81 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (113 113 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (113 113 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (113 113 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (113 113 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (113 113 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (112 1 (:REWRITE ZP-OPEN))
 (103 103 (:REWRITE |(< 0 (* x y))|))
 (103 103 (:REWRITE |(- (* c x))|))
 (102 70 (:REWRITE DEFAULT-CAR))
 (100 100 (:REWRITE |(< 0 (/ x))|))
 (98 98 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (93 93 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (93 93 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (83 83 (:REWRITE |(< (+ c/d x) y)|))
 (80 80 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (80 6 (:DEFINITION BINARY-APPEND))
 (66 6 (:REWRITE DEFAULT-FLOOR-RATIO))
 (56 56 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (56 56 (:REWRITE |(mod x (- y))| . 3))
 (56 56 (:REWRITE |(mod x (- y))| . 2))
 (56 56 (:REWRITE |(mod x (- y))| . 1))
 (56 56 (:REWRITE |(mod (- x) y)| . 3))
 (56 56 (:REWRITE |(mod (- x) y)| . 2))
 (56 4 (:DEFINITION SYMBOL-LISTP))
 (53 53 (:REWRITE ALEOVM::CONSP-OF-LOOKUP-EQUAL-LIST))
 (50 17 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (50 1 (:REWRITE LEBITS=>NAT-INJECTIVITY+))
 (49 23 (:REWRITE |(equal (+ (- c) x) y)|))
 (48 14 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (42 42 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (42 42 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (40 40 (:REWRITE FOLD-CONSTS-IN-+))
 (40 20 (:TYPE-PRESCRIPTION LAST))
 (39 39 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (38 12 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (37 37 (:REWRITE |(< x (+ c/d y))|))
 (36 36 (:TYPE-PRESCRIPTION ALEOVM::POW2SUM-VECTOR))
 (36 12 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (34 34 (:REWRITE |(< (* x y) 0)|))
 (32 32 (:REWRITE SUBSETP-MEMBER . 2))
 (32 32 (:REWRITE SUBSETP-MEMBER . 1))
 (32 32 (:REWRITE |(< (/ x) 0)|))
 (32 8 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (32 8 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (28 28 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (28 28 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (27 27 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (27 27 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (26 4 (:REWRITE BIT-LIST-FIX-WHEN-BIT-LISTP))
 (24 10 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (24 6 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (23 17 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (22 22 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (22 22 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (22 22 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (21 14 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (20 4 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (20 4 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 (16 16 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (16 16 (:REWRITE |(* 0 x)|))
 (15 1 (:DEFINITION LAST))
 (14 14 (:TYPE-PRESCRIPTION ALEOVM::BOOLEAN-CHECK-GADGET))
 (14 14 (:REWRITE ALEOVM::CONSP-OF-POW2SUM-VECTOR))
 (14 14 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (14 14 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (14 5 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (14 1 (:REWRITE TRIM-LENDIAN+-WHEN-ZP-LISTP))
 (12 4 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (12 4 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (10 1 (:REWRITE |(- (+ x y))|))
 (9 9 (:REWRITE |(mod (+ x y) z) where (<= 0 z)| . 3))
 (9 9 (:REWRITE |(mod (+ x y) z) where (<= 0 z)| . 2))
 (9 3 (:REWRITE CONSP-OF-BIT-LIST-FIX))
 (9 1 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (8 8 (:REWRITE REDUCE-RATIONALP-+))
 (8 8 (:REWRITE REDUCE-RATIONALP-*))
 (8 8 (:REWRITE RATIONALP-MINUS-X))
 (8 8 (:META META-RATIONALP-CORRECT))
 (8 2 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (8 2 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (8 2 (:REWRITE |(+ x x)|))
 (7 7 (:TYPE-PRESCRIPTION TRIM-LENDIAN+))
 (7 7 (:TYPE-PRESCRIPTION TRIM-LENDIAN*))
 (7 2 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE DEFAULT-FLOOR-2))
 (6 6 (:REWRITE DEFAULT-FLOOR-1))
 (6 6 (:REWRITE |(floor x 2)| . 2))
 (4 4 (:TYPE-PRESCRIPTION ZP-LISTP))
 (4 4 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (4 4 (:TYPE-PRESCRIPTION BIT-LISTP))
 (4 4 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (4 4 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 (2 2 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 )
