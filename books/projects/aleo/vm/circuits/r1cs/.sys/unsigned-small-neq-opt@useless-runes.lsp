(ALEOVM::UNSIGNED-SMALL-NEQ-OPT-GADGET
 (45 1 (:DEFINITION INTEGER-LENGTH))
 (25 1 (:REWRITE |(floor x 2)| . 1))
 (23 20 (:REWRITE DEFAULT-CDR))
 (18 10 (:REWRITE DEFAULT-PLUS-2))
 (16 13 (:REWRITE DEFAULT-CAR))
 (15 1 (:DEFINITION BINARY-APPEND))
 (14 14 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (11 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (10 10 (:REWRITE DEFAULT-PLUS-1))
 (8 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (5 5 (:REWRITE DEFAULT-TIMES-2))
 (5 5 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (4 4 (:REWRITE ALEOVM::CONSP-OF-POW2SUM-VECTOR))
 (4 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 1 (:REWRITE |(* y x)|))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-SUMS-<))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(floor x 2)| . 2))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ALEOVM::R1CS-CONSTRAINT-LISTP-OF-UNSIGNED-SMALL-NEQ-OPT-GADGET
 (45 3 (:DEFINITION BINARY-APPEND))
 (45 1 (:DEFINITION INTEGER-LENGTH))
 (31 22 (:REWRITE DEFAULT-CDR))
 (28 2 (:DEFINITION SYMBOL-LISTP))
 (25 1 (:REWRITE |(floor x 2)| . 1))
 (24 15 (:REWRITE DEFAULT-CAR))
 (19 11 (:REWRITE DEFAULT-PLUS-2))
 (18 6 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 11 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE DEFAULT-PLUS-1))
 (11 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (10 10 (:REWRITE ALEOVM::CONSP-OF-POW2SUM-VECTOR))
 (10 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (10 2 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 (8 8 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (5 5 (:REWRITE DEFAULT-TIMES-2))
 (5 5 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (4 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 1 (:REWRITE |(* y x)|))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-SUMS-<))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(floor x 2)| . 2))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ALEOVM::LEMMA
 (416 8 (:REWRITE PFIELD::FEP-HOLDS))
 (388 8 (:DEFINITION NATP))
 (369 39 (:REWRITE |(< (- x) c)|))
 (357 7 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (286 5 (:REWRITE MOD-X-Y-=-X . 3))
 (277 7 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (229 5 (:REWRITE MOD-X-Y-=-X . 4))
 (219 219 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (219 219 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (219 219 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (210 7 (:REWRITE MOD-ZERO . 4))
 (158 38 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (158 38 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (158 38 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (129 37 (:REWRITE DEFAULT-MINUS))
 (128 5 (:REWRITE CANCEL-MOD-+))
 (121 41 (:REWRITE |(< c (- x))|))
 (114 7 (:REWRITE DEFAULT-MOD-RATIO))
 (79 15 (:REWRITE |(equal (- x) c)|))
 (65 41 (:REWRITE DEFAULT-LESS-THAN-1))
 (62 30 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (62 30 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (59 35 (:REWRITE DEFAULT-TIMES-2))
 (59 35 (:REWRITE DEFAULT-TIMES-1))
 (57 41 (:REWRITE DEFAULT-LESS-THAN-2))
 (57 29 (:REWRITE DEFAULT-PLUS-2))
 (57 1 (:LINEAR MOD-BOUNDS-3))
 (49 41 (:REWRITE |(< (- x) (- y))|))
 (42 30 (:REWRITE SIMPLIFY-SUMS-<))
 (41 41 (:REWRITE THE-FLOOR-BELOW))
 (41 41 (:REWRITE THE-FLOOR-ABOVE))
 (41 41 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (41 41 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (41 41 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (41 41 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (41 41 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (41 41 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (41 41 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (41 41 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (41 41 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (41 41 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (41 41 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (41 41 (:REWRITE |(< (/ x) (/ y))|))
 (38 38 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (38 38 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (38 38 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (38 38 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (35 29 (:REWRITE DEFAULT-PLUS-1))
 (34 19 (:REWRITE DEFAULT-DIVIDE))
 (33 5 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (33 5 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (30 30 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (30 30 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (30 30 (:REWRITE INTEGERP-<-CONSTANT))
 (30 30 (:REWRITE CONSTANT-<-INTEGERP))
 (29 7 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (29 7 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (29 5 (:REWRITE MOD-X-Y-=-X . 2))
 (27 27 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (27 27 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (27 27 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (27 27 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (23 23 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (22 22 (:REWRITE |(< (/ x) 0)|))
 (22 22 (:REWRITE |(< (* x y) 0)|))
 (21 5 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (21 5 (:REWRITE MOD-CANCEL-*-CONST))
 (19 19 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (19 19 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (18 12 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (17 15 (:REWRITE |(equal (- x) (- y))|))
 (16 2 (:LINEAR MOD-BOUNDS-2))
 (15 15 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (15 15 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (15 15 (:REWRITE |(equal c (/ x))|))
 (15 15 (:REWRITE |(equal c (- x))|))
 (15 15 (:REWRITE |(equal (/ x) c)|))
 (15 15 (:REWRITE |(equal (/ x) (/ y))|))
 (13 13 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (13 13 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (13 13 (:REWRITE |(< 0 (/ x))|))
 (13 13 (:REWRITE |(< 0 (* x y))|))
 (13 7 (:REWRITE DEFAULT-MOD-2))
 (13 7 (:REWRITE DEFAULT-MOD-1))
 (12 12 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (12 12 (:REWRITE |(- (* c x))|))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:REWRITE REDUCE-INTEGERP-+))
 (11 11 (:REWRITE INTEGERP-MINUS-X))
 (11 11 (:META META-INTEGERP-CORRECT))
 (9 9 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (8 8 (:TYPE-PRESCRIPTION NATP))
 (8 8 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (8 8 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (5 5 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (5 5 (:REWRITE |(mod x (- y))| . 3))
 (5 5 (:REWRITE |(mod x (- y))| . 2))
 (5 5 (:REWRITE |(mod x (- y))| . 1))
 (5 5 (:REWRITE |(mod (- x) y)| . 3))
 (5 5 (:REWRITE |(mod (- x) y)| . 2))
 (4 4 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (4 4 (:REWRITE |(equal (+ (- c) x) y)|))
 (2 2 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(+ c (+ d x))|))
 (1 1 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (1 1 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 )
(ALEOVM::UNSIGNED-SMALL-NEQ-OPT-GADGET-SOUNDNESS
 (42835 40 (:DEFINITION NATP))
 (28998 1432 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (20486 57 (:REWRITE MOD-ZERO . 4))
 (20339 57 (:REWRITE MOD-X-Y-=-X . 3))
 (18796 583 (:LINEAR LEBITS=>NAT-UPPER-BOUND))
 (17153 1056 (:REWRITE |(< (- x) c)|))
 (12731 12 (:REWRITE |(< (if a b c) x)|))
 (11456 716 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (11456 716 (:LINEAR EXPT->=-1-ONE))
 (10728 57 (:REWRITE MOD-X-Y-=-X . 4))
 (8808 716 (:LINEAR EXPT->-1-ONE))
 (7622 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (6090 716 (:LINEAR EXPT-X->=-X))
 (6090 716 (:LINEAR EXPT-X->-X))
 (5820 3805 (:REWRITE DEFAULT-EXPT-2))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (4885 4885 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (4540 2253 (:REWRITE DEFAULT-PLUS-2))
 (4300 127 (:REWRITE |(equal (- x) c)|))
 (4242 716 (:LINEAR EXPT-<=-1-TWO))
 (3805 3805 (:REWRITE DEFAULT-EXPT-1))
 (3805 3805 (:REWRITE |(expt 1/c n)|))
 (3805 3805 (:REWRITE |(expt (- x) n)|))
 (3403 2253 (:REWRITE DEFAULT-PLUS-1))
 (3067 74 (:REWRITE DEFAULT-MOD-RATIO))
 (2736 57 (:REWRITE MOD-ZERO . 3))
 (2418 103 (:REWRITE |(* x (+ y z))|))
 (2157 1000 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1919 1081 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1726 1093 (:REWRITE DEFAULT-LESS-THAN-1))
 (1641 1093 (:REWRITE DEFAULT-LESS-THAN-2))
 (1457 992 (:REWRITE DEFAULT-TIMES-2))
 (1432 1432 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (1432 1432 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (1432 1432 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (1404 992 (:REWRITE DEFAULT-TIMES-1))
 (1173 1056 (:REWRITE |(< (- x) (- y))|))
 (1093 1093 (:REWRITE THE-FLOOR-BELOW))
 (1093 1093 (:REWRITE THE-FLOOR-ABOVE))
 (1081 1081 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1081 1081 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1074 716 (:LINEAR EXPT-<-1-TWO))
 (1069 1056 (:REWRITE |(< c (- x))|))
 (1056 1056 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1056 1056 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1056 1056 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1056 1056 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1056 1056 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1056 1056 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1056 1056 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1056 1056 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1056 1056 (:REWRITE |(< (/ x) (/ y))|))
 (1043 1043 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1008 1008 (:REWRITE INTEGERP-<-CONSTANT))
 (1008 1008 (:REWRITE CONSTANT-<-INTEGERP))
 (848 848 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (848 848 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (848 848 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (750 750 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (750 750 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (737 11 (:REWRITE |(* (if a b c) x)|))
 (731 687 (:REWRITE DEFAULT-CDR))
 (728 325 (:REWRITE DEFAULT-MINUS))
 (716 716 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (716 716 (:LINEAR EXPT-LINEAR-UPPER-<))
 (716 716 (:LINEAR EXPT-LINEAR-LOWER-<))
 (716 716 (:LINEAR EXPT->=-1-TWO))
 (716 716 (:LINEAR EXPT->-1-TWO))
 (716 716 (:LINEAR EXPT-<=-1-ONE))
 (716 716 (:LINEAR EXPT-<-1-ONE))
 (618 203 (:REWRITE |(< (+ (- c) x) y)|))
 (588 12 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (540 12 (:DEFINITION INTEGER-LENGTH))
 (480 24 (:DEFINITION MEMBER-EQUAL))
 (428 428 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (427 57 (:REWRITE MOD-X-Y-=-X . 2))
 (427 57 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (427 57 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (380 380 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (379 64 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (364 61 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (348 2 (:REWRITE LEBITS=>NAT-INJECTIVITY*))
 (300 12 (:REWRITE |(floor x 2)| . 1))
 (291 184 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (282 46 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (280 2 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (265 131 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (259 259 (:REWRITE |(< 0 (* x y))|))
 (250 250 (:REWRITE |(< 0 (/ x))|))
 (241 241 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (241 241 (:REWRITE DEFAULT-DIVIDE))
 (235 235 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (235 235 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (225 74 (:REWRITE DEFAULT-MOD-1))
 (225 62 (:REWRITE |(< y (+ (- c) x))|))
 (224 2 (:REWRITE ZP-OPEN))
 (223 41 (:REWRITE INTEGERP-+-REDUCE-CONSTANT))
 (210 210 (:REWRITE |(< (+ c/d x) y)|))
 (209 111 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (208 46 (:REWRITE MOD-CANCEL-*-CONST))
 (195 130 (:REWRITE |(+ c (+ d x))|))
 (157 127 (:REWRITE |(equal (- x) (- y))|))
 (152 46 (:REWRITE IFIX-WHEN-NOT-INTEGERP-UNLIMITED))
 (150 23 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (150 23 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (135 135 (:REWRITE |(- (* c x))|))
 (132 12 (:REWRITE DEFAULT-FLOOR-RATIO))
 (131 131 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (131 95 (:REWRITE DEFAULT-CAR))
 (127 127 (:REWRITE |(equal c (/ x))|))
 (127 127 (:REWRITE |(equal c (- x))|))
 (127 127 (:REWRITE |(equal (/ x) c)|))
 (127 127 (:REWRITE |(equal (/ x) (/ y))|))
 (123 92 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (120 120 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (120 8 (:DEFINITION BINARY-APPEND))
 (113 113 (:REWRITE |(< (* x y) 0)|))
 (112 8 (:DEFINITION SYMBOL-LISTP))
 (111 111 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (108 108 (:REWRITE REDUCE-INTEGERP-+))
 (108 108 (:REWRITE INTEGERP-MINUS-X))
 (108 108 (:META META-INTEGERP-CORRECT))
 (106 106 (:REWRITE |(< (/ x) 0)|))
 (100 2 (:REWRITE LEBITS=>NAT-INJECTIVITY+))
 (90 24 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (89 21 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (80 40 (:TYPE-PRESCRIPTION LAST))
 (80 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (74 74 (:REWRITE DEFAULT-MOD-2))
 (72 72 (:TYPE-PRESCRIPTION ALEOVM::POW2SUM-VECTOR))
 (72 24 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (69 69 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (69 69 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (66 66 (:REWRITE FOLD-CONSTS-IN-+))
 (65 65 (:REWRITE |(< x (+ c/d y))|))
 (52 16 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (52 8 (:REWRITE BIT-LIST-FIX-WHEN-BIT-LISTP))
 (48 48 (:REWRITE SUBSETP-MEMBER . 2))
 (48 48 (:REWRITE SUBSETP-MEMBER . 1))
 (48 12 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (48 2 (:DEFINITION INTEGER-LISTP))
 (46 46 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (46 46 (:REWRITE |(mod x (- y))| . 3))
 (46 46 (:REWRITE |(mod x (- y))| . 2))
 (46 46 (:REWRITE |(mod x (- y))| . 1))
 (46 46 (:REWRITE |(mod (- x) y)| . 3))
 (46 46 (:REWRITE |(mod (- x) y)| . 2))
 (43 43 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (43 43 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (41 35 (:REWRITE |(equal (+ (- c) x) y)|))
 (40 40 (:TYPE-PRESCRIPTION NATP))
 (40 8 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (40 8 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 (38 24 (:REWRITE PFIELD::ADD-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (32 32 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (31 31 (:REWRITE PFIELD::MUL-OF--1-BECOMES-NEG-ALT))
 (30 2 (:DEFINITION LAST))
 (28 28 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG2))
 (28 28 (:REWRITE PFIELD::MUL-WHEN-EQUAL-OF-MOD-SUBST-ARG1))
 (28 28 (:REWRITE PFIELD::MUL-WHEN-CONSTANT-REDUCE-ARG1))
 (28 28 (:REWRITE ALEOVM::CONSP-OF-POW2SUM-VECTOR))
 (28 21 (:REWRITE PFIELD::MUL-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (28 2 (:REWRITE TRIM-LENDIAN+-WHEN-ZP-LISTP))
 (27 27 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (26 26 (:REWRITE ALEOVM::CONSP-OF-LOOKUP-EQUAL-LIST))
 (24 24 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG2))
 (24 24 (:REWRITE PFIELD::ADD-SUBST-CONSTANT-ARG1))
 (24 24 (:REWRITE PFIELD::ADD-OF-CONSTANTS))
 (24 24 (:REWRITE PFIELD::ADD-COMMUTATIVE))
 (23 23 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (23 23 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (18 6 (:REWRITE CONSP-OF-BIT-LIST-FIX))
 (18 2 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (16 4 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (16 4 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (16 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (16 4 (:REWRITE |(+ x x)|))
 (14 14 (:TYPE-PRESCRIPTION TRIM-LENDIAN+))
 (14 14 (:TYPE-PRESCRIPTION TRIM-LENDIAN*))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:REWRITE |(mod (+ x y) z) where (<= 0 z)| . 3))
 (14 14 (:REWRITE |(mod (+ x y) z) where (<= 0 z)| . 2))
 (14 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (12 12 (:REWRITE DEFAULT-FLOOR-2))
 (12 12 (:REWRITE DEFAULT-FLOOR-1))
 (12 12 (:REWRITE |(floor x 2)| . 2))
 (12 7 (:REWRITE PFIELD::NEG-WHEN-NOT-INTEGERP-CHEAP))
 (10 1 (:REWRITE |(- (+ x y))|))
 (8 8 (:TYPE-PRESCRIPTION ZP-LISTP))
 (8 8 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (8 8 (:TYPE-PRESCRIPTION BIT-LISTP))
 (8 8 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (7 7 (:REWRITE PFIELD::NEG-WHEN-NOT-POSP-ARG2-CHEAP))
 (6 6 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (6 6 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (6 6 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (6 6 (:REWRITE |(< x (/ y)) with (< 0 y)|))
 (5 5 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (4 4 (:REWRITE SUBSETP-TRANS2))
 (4 4 (:REWRITE SUBSETP-TRANS))
 (4 4 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS-ALT))
 (4 4 (:REWRITE PFIELD::EQUAL-OF-MUL-CONSTANTS))
 (4 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (3 3 (:REWRITE |(* 0 x)|))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 1 (:REWRITE PFIELD::EQUAL-OF-NEG))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 )
