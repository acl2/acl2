(ALEOVM::UNSIGNED-SMALL-MUL-GADGET
 (156 2 (:DEFINITION INTEGER-LENGTH))
 (116 2 (:REWRITE |(floor x 2)| . 1))
 (66 2 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (30 16 (:REWRITE DEFAULT-PLUS-2))
 (22 16 (:REWRITE DEFAULT-PLUS-1))
 (22 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (21 21 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (14 14 (:REWRITE DEFAULT-CDR))
 (14 12 (:REWRITE DEFAULT-TIMES-2))
 (12 12 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (12 12 (:REWRITE DEFAULT-TIMES-1))
 (10 10 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (10 10 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (10 10 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (10 10 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (10 10 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (10 2 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (10 2 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (10 2 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (10 2 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (10 2 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (8 2 (:REWRITE |(* y x)|))
 (6 6 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (6 6 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (6 6 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (6 6 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (6 6 (:REWRITE DEFAULT-CAR))
 (6 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (3 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (3 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (3 1 (:REWRITE SIMPLIFY-SUMS-<))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (2 2 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (2 2 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (2 2 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (2 2 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE DEFAULT-FLOOR-2))
 (2 2 (:REWRITE DEFAULT-FLOOR-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(floor x 2)| . 2))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 )
(ALEOVM::R1CS-CONSTRAINT-LISTP-OF-UNSIGNED-SMALL-MUL-GADGET
 (532 2 (:DEFINITION INTEGER-LENGTH))
 (200 6 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (121 1 (:REWRITE CANCEL-FLOOR-+))
 (68 1 (:REWRITE FLOOR-ZERO . 3))
 (62 6 (:REWRITE INTEGERP-MINUS-X))
 (59 2 (:REWRITE |(floor x 2)| . 1))
 (55 1 (:REWRITE FLOOR-=-X/Y . 3))
 (55 1 (:REWRITE FLOOR-=-X/Y . 2))
 (53 2 (:REWRITE |(floor x 2)| . 2))
 (45 45 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (45 45 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (45 45 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (45 45 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (42 3 (:DEFINITION SYMBOL-LISTP))
 (30 6 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (30 6 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (30 6 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (30 6 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (30 6 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (30 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (29 15 (:REWRITE DEFAULT-PLUS-2))
 (24 6 (:REWRITE |(* y x)|))
 (23 23 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (23 23 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (23 23 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (23 23 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (23 21 (:REWRITE DEFAULT-TIMES-2))
 (22 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (21 21 (:REWRITE DEFAULT-TIMES-1))
 (21 15 (:REWRITE DEFAULT-PLUS-1))
 (17 2 (:REWRITE |(* (- x) y)|))
 (16 2 (:DEFINITION BINARY-APPEND))
 (15 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (15 3 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 (14 14 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 13 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 4 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (10 2 (:REWRITE DEFAULT-MINUS))
 (9 2 (:REWRITE |(- (* c x))|))
 (8 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (8 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (7 3 (:REWRITE DEFAULT-LESS-THAN-1))
 (6 6 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (6 6 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (6 6 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (6 6 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (6 6 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (6 6 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (6 6 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (6 5 (:REWRITE DEFAULT-CAR))
 (6 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (5 5 (:REWRITE REDUCE-INTEGERP-+))
 (5 5 (:META META-INTEGERP-CORRECT))
 (5 1 (:REWRITE FLOOR-ZERO . 5))
 (5 1 (:REWRITE FLOOR-ZERO . 4))
 (5 1 (:REWRITE FLOOR-ZERO . 2))
 (5 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (5 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (5 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (5 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (5 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (5 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (4 3 (:REWRITE SIMPLIFY-SUMS-<))
 (4 3 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 3 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 3 (:REWRITE DEFAULT-LESS-THAN-2))
 (4 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (3 3 (:REWRITE THE-FLOOR-BELOW))
 (3 3 (:REWRITE THE-FLOOR-ABOVE))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (3 3 (:REWRITE INTEGERP-<-CONSTANT))
 (3 3 (:REWRITE CONSTANT-<-INTEGERP))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (- x))|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) (/ y))|))
 (3 3 (:REWRITE |(< (- x) c)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION ABS))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE DEFAULT-FLOOR-2))
 (2 2 (:REWRITE DEFAULT-FLOOR-1))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (1 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 )
(ALEOVM::LEMMA0
 (110 110 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (110 110 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (110 110 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (110 110 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (110 110 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (110 110 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (46 46 (:REWRITE ARITH-NORMALIZE-FACTORS-SCATTER-EXPONENTS))
 (45 18 (:REWRITE SIMPLIFY-SUMS-<))
 (45 18 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (45 18 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (45 18 (:REWRITE DEFAULT-LESS-THAN-2))
 (44 44 (:REWRITE |arith (* c (* d x))|))
 (18 18 (:REWRITE |arith (- (* c x))|))
 (18 18 (:REWRITE |arith (* (- x) y)|))
 (18 18 (:REWRITE THE-FLOOR-BELOW))
 (18 18 (:REWRITE THE-FLOOR-ABOVE))
 (18 18 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (18 18 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (18 18 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (18 18 (:REWRITE INTEGERP-<-CONSTANT))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-1))
 (18 18 (:REWRITE CONSTANT-<-INTEGERP))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (- x))|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) (/ y))|))
 (18 18 (:REWRITE |(< (- x) c)|))
 (18 18 (:REWRITE |(< (- x) (- y))|))
 (9 9 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (9 9 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (9 9 (:REWRITE REDUCE-INTEGERP-+))
 (9 9 (:REWRITE INTEGERP-MINUS-X))
 (9 9 (:REWRITE |(< (/ x) 0)|))
 (9 9 (:REWRITE |(< (* x y) 0)|))
 (9 9 (:META META-INTEGERP-CORRECT))
 (8 8 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (8 8 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (6 5 (:REWRITE DEFAULT-TIMES-1))
 (5 5 (:REWRITE DEFAULT-TIMES-2))
 (3 3 (:REWRITE DEFAULT-EXPT-2))
 (3 3 (:REWRITE DEFAULT-EXPT-1))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (1 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (1 1 (:REWRITE |arith (expt 1/c n)|))
 )
(ALEOVM::LEMMA1
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (94 4 (:REWRITE ODD-EXPT-THM))
 (70 16 (:REWRITE SIMPLIFY-SUMS-<))
 (70 16 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (70 16 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (70 16 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (70 16 (:REWRITE DEFAULT-LESS-THAN-2))
 (31 1 (:LINEAR EXPT-<=-1-TWO))
 (30 1 (:LINEAR EXPT->-1-ONE))
 (26 1 (:LINEAR EXPT-X->=-X))
 (26 1 (:LINEAR EXPT-X->-X))
 (24 5 (:REWRITE DEFAULT-TIMES-1))
 (23 5 (:REWRITE DEFAULT-TIMES-2))
 (16 16 (:REWRITE THE-FLOOR-BELOW))
 (16 16 (:REWRITE THE-FLOOR-ABOVE))
 (16 16 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (16 16 (:REWRITE INTEGERP-<-CONSTANT))
 (16 16 (:REWRITE DEFAULT-LESS-THAN-1))
 (16 16 (:REWRITE CONSTANT-<-INTEGERP))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (- x))|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) (/ y))|))
 (16 16 (:REWRITE |(< (- x) c)|))
 (16 16 (:REWRITE |(< (- x) (- y))|))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (13 13 (:REWRITE DEFAULT-EXPT-2))
 (13 13 (:REWRITE DEFAULT-EXPT-1))
 (13 13 (:REWRITE |(expt 1/c n)|))
 (13 13 (:REWRITE |(expt (- x) n)|))
 (10 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (5 5 (:REWRITE |(< 0 (/ x))|))
 (5 5 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< (/ x) 0)|))
 (3 3 (:REWRITE |(< (* x y) 0)|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<))
 (1 1 (:LINEAR EXPT->=-1-TWO))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<=-1-ONE))
 (1 1 (:LINEAR EXPT-<-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(ALEOVM::LEMMA2
 (159 159 (:TYPE-PRESCRIPTION EVENP))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-ODD-EXPONENT-NEGATIVE-BASE))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-2))
 (106 53 (:TYPE-PRESCRIPTION EXPT-TYPE-EVEN-EXPONENT-1))
 (60 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NON-POSITIVE-EXPONENT))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-SMALL-BASE-NEGATIVE-EXPONENT))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (53 53 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (31 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-4))
 (31 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-2))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE EXPT-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (2 2 (:REWRITE EXPT-WHEN-NOT-ACL2-NUMBERP-CHEAP))
 (2 2 (:REWRITE DEFAULT-EXPT-2))
 (2 2 (:REWRITE DEFAULT-EXPT-1))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:LINEAR <-OF-EXPT-AND-EXPT-SAME-EXPONENTS-LINEAR-NEGATIVE-EXPONENT))
 (1 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-3))
 (1 1 (:LINEAR EXPT-WHEN-NEGATIVE-EXPONENT-LINEAR-1))
 )
(ALEOVM::UNSIGNED-SMALL-MUL-GADGET-CORRECT
 (37890 88 (:DEFINITION INTEGER-LENGTH))
 (21446 3 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (12168 381 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (11053 64 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10720 3 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (8107 67 (:REWRITE CANCEL-FLOOR-+))
 (6206 67 (:REWRITE FLOOR-ZERO . 3))
 (4133 381 (:REWRITE INTEGERP-MINUS-X))
 (3694 67 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (3685 67 (:REWRITE FLOOR-=-X/Y . 3))
 (3685 67 (:REWRITE FLOOR-=-X/Y . 2))
 (3506 3506 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (3506 3506 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (3505 88 (:REWRITE |(floor x 2)| . 2))
 (3125 8 (:REWRITE MOD-WHEN-<))
 (2835 67 (:REWRITE FLOOR-ZERO . 4))
 (2700 540 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (2484 540 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (2484 540 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (1964 540 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (1589 389 (:REWRITE |(* y x)|))
 (1567 1485 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (1485 1485 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (1485 1485 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (1485 1485 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (1299 108 (:LINEAR EXPT-<=-1-TWO))
 (1285 88 (:REWRITE |(floor x 2)| . 1))
 (1267 142 (:REWRITE |(* (- x) y)|))
 (1263 108 (:LINEAR EXPT->-1-ONE))
 (1209 1147 (:REWRITE DEFAULT-TIMES-2))
 (1198 1147 (:REWRITE DEFAULT-TIMES-1))
 (1145 1145 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (1145 1145 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (1145 1145 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (1145 1145 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (1145 1145 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1119 108 (:LINEAR EXPT-X->=-X))
 (1119 108 (:LINEAR EXPT-X->-X))
 (968 88 (:REWRITE DEFAULT-FLOOR-RATIO))
 (869 433 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (869 8 (:REWRITE MOD-X-Y-=-X . 4))
 (845 433 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (837 8 (:REWRITE MOD-X-Y-=-X . 3))
 (829 8 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (805 424 (:REWRITE DEFAULT-PLUS-2))
 (790 445 (:REWRITE DEFAULT-LESS-THAN-1))
 (731 8 (:REWRITE MOD-ZERO . 4))
 (721 145 (:REWRITE DEFAULT-MINUS))
 (683 683 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (611 142 (:REWRITE |(- (* c x))|))
 (603 445 (:REWRITE DEFAULT-LESS-THAN-2))
 (580 433 (:REWRITE SIMPLIFY-SUMS-<))
 (540 540 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (540 540 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (540 540 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (512 512 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (512 445 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (512 445 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (511 8 (:REWRITE CANCEL-MOD-+))
 (506 340 (:REWRITE DEFAULT-EXPT-2))
 (469 424 (:REWRITE DEFAULT-PLUS-1))
 (464 436 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (445 445 (:REWRITE THE-FLOOR-BELOW))
 (445 445 (:REWRITE THE-FLOOR-ABOVE))
 (445 445 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (438 6 (:REWRITE R1CS::VALUATION-BINDSP-WHEN-VALUATION-BINDS-ALLP))
 (436 436 (:REWRITE INTEGERP-<-CONSTANT))
 (436 436 (:REWRITE CONSTANT-<-INTEGERP))
 (436 436 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (436 436 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (436 436 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (436 436 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (436 436 (:REWRITE |(< c (- x))|))
 (436 436 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (436 436 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (436 436 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (436 436 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (436 436 (:REWRITE |(< (/ x) (/ y))|))
 (436 436 (:REWRITE |(< (- x) c)|))
 (436 436 (:REWRITE |(< (- x) (- y))|))
 (385 385 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (370 40 (:REWRITE BIT-LISTP-WHEN-SUBSETP-EQUAL))
 (360 18 (:DEFINITION MEMBER-EQUAL))
 (340 340 (:REWRITE DEFAULT-EXPT-1))
 (340 340 (:REWRITE |(expt 1/c n)|))
 (340 340 (:REWRITE |(expt (- x) n)|))
 (335 67 (:REWRITE FLOOR-ZERO . 5))
 (335 67 (:REWRITE FLOOR-ZERO . 2))
 (335 67 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (335 67 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (335 67 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (335 67 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (335 67 (:REWRITE FLOOR-CANCEL-*-CONST))
 (335 67 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (327 8 (:REWRITE MOD-ZERO . 3))
 (327 8 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (324 64 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (314 314 (:REWRITE REDUCE-INTEGERP-+))
 (314 314 (:META META-INTEGERP-CORRECT))
 (307 61 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (293 287 (:REWRITE DEFAULT-CDR))
 (252 18 (:DEFINITION SYMBOL-LISTP))
 (247 8 (:REWRITE |(integerp (- x))|))
 (216 216 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (216 216 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (216 216 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (216 216 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (180 3 (:REWRITE EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (159 108 (:LINEAR EXPT-<-1-TWO))
 (144 12 (:REWRITE |(< y (+ (- c) x))|))
 (134 134 (:TYPE-PRESCRIPTION ABS))
 (128 8 (:REWRITE DEFAULT-MOD-RATIO))
 (124 31 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (121 121 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (121 121 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (118 115 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (108 108 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (108 108 (:LINEAR EXPT-LINEAR-UPPER-<))
 (108 108 (:LINEAR EXPT-LINEAR-LOWER-<))
 (108 108 (:LINEAR EXPT->=-1-TWO))
 (108 108 (:LINEAR EXPT->-1-TWO))
 (108 108 (:LINEAR EXPT-<=-1-ONE))
 (108 108 (:LINEAR EXPT-<-1-ONE))
 (90 90 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (90 18 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (90 18 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 (88 88 (:REWRITE DEFAULT-FLOOR-2))
 (88 88 (:REWRITE DEFAULT-FLOOR-1))
 (82 82 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (82 82 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (82 82 (:REWRITE |(< 0 (/ x))|))
 (82 82 (:REWRITE |(< 0 (* x y))|))
 (82 31 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (80 20 (:REWRITE BIT-LISTP-WHEN-NOT-CONSP))
 (78 2 (:REWRITE ODD-EXPT-THM))
 (72 72 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (68 68 (:REWRITE ALEOVM::CONSP-OF-LOOKUP-EQUAL-LIST))
 (67 67 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (67 67 (:REWRITE |(floor x (- y))| . 2))
 (67 67 (:REWRITE |(floor x (- y))| . 1))
 (67 67 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (67 67 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (67 67 (:REWRITE |(floor (- x) y)| . 2))
 (67 67 (:REWRITE |(floor (- x) y)| . 1))
 (67 67 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (67 67 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (67 67 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (64 64 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (64 64 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (64 64 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (64 64 (:REWRITE |(equal c (/ x))|))
 (64 64 (:REWRITE |(equal c (- x))|))
 (64 64 (:REWRITE |(equal (/ x) c)|))
 (64 64 (:REWRITE |(equal (/ x) (/ y))|))
 (64 64 (:REWRITE |(equal (- x) c)|))
 (64 64 (:REWRITE |(equal (- x) (- y))|))
 (62 62 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (56 8 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (56 8 (:REWRITE MOD-X-Y-=-X . 2))
 (56 8 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (56 8 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (54 54 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (54 54 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (51 45 (:REWRITE DEFAULT-CAR))
 (48 8 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (48 8 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (48 8 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (48 8 (:REWRITE MOD-CANCEL-*-CONST))
 (48 8 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (48 8 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (48 6 (:DEFINITION BINARY-APPEND))
 (36 36 (:REWRITE SUBSETP-MEMBER . 2))
 (36 36 (:REWRITE SUBSETP-MEMBER . 1))
 (36 6 (:REWRITE |(+ y x)|))
 (33 33 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (33 33 (:REWRITE DEFAULT-DIVIDE))
 (33 12 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (31 31 (:REWRITE SUBSETP-TRANS2))
 (31 31 (:REWRITE SUBSETP-TRANS))
 (30 30 (:TYPE-PRESCRIPTION ALEOVM::BITS-MUL-FIELD-GADGET))
 (30 1 (:LINEAR MOD-BOUNDS-3))
 (27 15 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (21 3 (:REWRITE BUBBLE-DOWN-+-MATCH-3))
 (21 3 (:DEFINITION R1CS::R1CS-CONSTRAINTS-HOLDP))
 (16 8 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (16 8 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (16 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (16 8 (:REWRITE MOD-WHEN-<-OF-0))
 (16 8 (:REWRITE DEFAULT-MOD-1))
 (15 15 (:TYPE-PRESCRIPTION ALEOVM::BOOLEAN-CHECK-GADGET-LIST))
 (15 15 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (15 15 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (12 12 (:REWRITE |(< x (+ c/d y))|))
 (12 2 (:LINEAR MOD-BOUNDS-2))
 (9 9 (:REWRITE |(equal (+ (- c) x) y)|))
 (9 9 (:REWRITE |(< (+ c/d x) y)|))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (8 8 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (8 8 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (8 8 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (8 8 (:REWRITE PFIELD::FEP-WHEN-FE-LISTP-AND-MEMBER-EQUAL))
 (8 8 (:REWRITE PFIELD::FEP-WHEN-CONSTANT))
 (8 8 (:REWRITE DEFAULT-MOD-2))
 (8 8 (:REWRITE |(mod x (- y))| . 3))
 (8 8 (:REWRITE |(mod x (- y))| . 2))
 (8 8 (:REWRITE |(mod x (- y))| . 1))
 (8 8 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (8 8 (:REWRITE |(mod (- x) y)| . 3))
 (8 8 (:REWRITE |(mod (- x) y)| . 2))
 (8 8 (:REWRITE |(mod (- x) y)| . 1))
 (8 8 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (7 7 (:REWRITE R1CS::R1CS-VALUATIONP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE NOT-PRIMEP-WHEN-DIVIDES))
 (6 6 (:REWRITE |(equal (if a b c) x)|))
 (6 3 (:REWRITE |(equal (mod (+ x y) z) x)|))
 (6 3 (:REWRITE |(+ 0 x)|))
 (4 1 (:REWRITE R1CS::<-OF-LOOKUP-EQUAL-WHEN-R1CS-VALUATIONP))
 (3 3 (:TYPE-PRESCRIPTION R1CS::R1CS-CONSTRAINT-HOLDSP))
 (3 3 (:REWRITE |(+ x (- x))|))
 (3 3 (:REWRITE |(+ c (+ d x))|))
 )
