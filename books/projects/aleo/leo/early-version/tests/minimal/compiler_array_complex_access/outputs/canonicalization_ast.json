{
  "name": "",
  "expected_input": [],
  "imports": [],
  "circuits": {},
  "global_consts": {},
  "functions": {
    "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}": {
      "annotations": [],
      "identifier": "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}",
      "input": [
        {
          "Variable": {
            "identifier": "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}",
            "const_": false,
            "mutable": true,
            "type_": "Boolean",
            "span": {
              "line_start": 8,
              "line_stop": 8,
              "col_start": 15,
              "col_stop": 16,
              "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
              "content": "function main(y: bool) -> bool {"
            }
          }
        }
      ],
      "output": "Boolean",
      "block": {
        "statements": [
          {
            "Definition": {
              "declaration_type": "Const",
              "variable_names": [
                {
                  "mutable": false,
                  "identifier": "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline\\\"}\"}",
                  "span": {
                    "line_start": 9,
                    "line_stop": 9,
                    "col_start": 11,
                    "col_stop": 12,
                    "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                    "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                  }
                }
              ],
              "type_": null,
              "value": {
                "ArrayInline": {
                  "elements": [
                    {
                      "Expression": {
                        "ArrayInline": {
                          "elements": [
                            {
                              "Expression": {
                                "Value": {
                                  "Integer": [
                                    "U32",
                                    "0",
                                    {
                                      "line_start": 9,
                                      "line_stop": 9,
                                      "col_start": 17,
                                      "col_stop": 21,
                                      "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                                      "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "Expression": {
                                "Value": {
                                  "Integer": [
                                    "U32",
                                    "0",
                                    {
                                      "line_start": 9,
                                      "line_stop": 9,
                                      "col_start": 23,
                                      "col_stop": 27,
                                      "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                                      "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "span": {
                            "line_start": 9,
                            "line_stop": 9,
                            "col_start": 16,
                            "col_stop": 28,
                            "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                            "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                          }
                        }
                      }
                    },
                    {
                      "Expression": {
                        "ArrayInline": {
                          "elements": [
                            {
                              "Expression": {
                                "Value": {
                                  "Integer": [
                                    "U32",
                                    "0",
                                    {
                                      "line_start": 9,
                                      "line_stop": 9,
                                      "col_start": 31,
                                      "col_stop": 35,
                                      "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                                      "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "Expression": {
                                "Value": {
                                  "Integer": [
                                    "U32",
                                    "0",
                                    {
                                      "line_start": 9,
                                      "line_stop": 9,
                                      "col_start": 37,
                                      "col_stop": 41,
                                      "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                                      "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "span": {
                            "line_start": 9,
                            "line_stop": 9,
                            "col_start": 30,
                            "col_stop": 42,
                            "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                            "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                          }
                        }
                      }
                    },
                    {
                      "Expression": {
                        "ArrayInline": {
                          "elements": [
                            {
                              "Expression": {
                                "Value": {
                                  "Integer": [
                                    "U32",
                                    "0",
                                    {
                                      "line_start": 9,
                                      "line_stop": 9,
                                      "col_start": 45,
                                      "col_stop": 49,
                                      "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                                      "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "Expression": {
                                "Value": {
                                  "Integer": [
                                    "U32",
                                    "0",
                                    {
                                      "line_start": 9,
                                      "line_stop": 9,
                                      "col_start": 51,
                                      "col_stop": 55,
                                      "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                                      "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "span": {
                            "line_start": 9,
                            "line_stop": 9,
                            "col_start": 44,
                            "col_stop": 56,
                            "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                            "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                          }
                        }
                      }
                    }
                  ],
                  "span": {
                    "line_start": 9,
                    "line_stop": 9,
                    "col_start": 15,
                    "col_stop": 57,
                    "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                    "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
                  }
                }
              },
              "span": {
                "line_start": 9,
                "line_stop": 9,
                "col_start": 5,
                "col_stop": 57,
                "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                "content": "    const a = [[0u32, 0u32], [0u32, 0u32], [0u32, 0u32]]; // inline"
              }
            }
          },
          {
            "Definition": {
              "declaration_type": "Const",
              "variable_names": [
                {
                  "mutable": false,
                  "identifier": "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"    const b: [u32; (3, 2)] = [0; (3, 2)]; // initializer\\\"}\"}",
                  "span": {
                    "line_start": 10,
                    "line_stop": 10,
                    "col_start": 11,
                    "col_stop": 12,
                    "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                    "content": "    const b: [u32; (3, 2)] = [0; (3, 2)]; // initializer"
                  }
                }
              ],
              "type_": {
                "Array": [
                  {
                    "Array": [
                      {
                        "IntegerType": "U32"
                      },
                      [
                        {
                          "value": "2"
                        }
                      ]
                    ]
                  },
                  [
                    {
                      "value": "3"
                    }
                  ]
                ]
              },
              "value": {
                "ArrayInit": {
                  "element": {
                    "ArrayInit": {
                      "element": {
                        "Value": {
                          "Implicit": [
                            "0",
                            {
                              "line_start": 10,
                              "line_stop": 10,
                              "col_start": 31,
                              "col_stop": 32,
                              "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                              "content": "    const b: [u32; (3, 2)] = [0; (3, 2)]; // initializer"
                            }
                          ]
                        }
                      },
                      "dimensions": [
                        {
                          "value": "2"
                        }
                      ],
                      "span": {
                        "line_start": 10,
                        "line_stop": 10,
                        "col_start": 30,
                        "col_stop": 41,
                        "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                        "content": "    const b: [u32; (3, 2)] = [0; (3, 2)]; // initializer"
                      }
                    }
                  },
                  "dimensions": [
                    {
                      "value": "3"
                    }
                  ],
                  "span": {
                    "line_start": 10,
                    "line_stop": 10,
                    "col_start": 30,
                    "col_stop": 41,
                    "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                    "content": "    const b: [u32; (3, 2)] = [0; (3, 2)]; // initializer"
                  }
                }
              },
              "span": {
                "line_start": 10,
                "line_stop": 10,
                "col_start": 5,
                "col_stop": 41,
                "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                "content": "    const b: [u32; (3, 2)] = [0; (3, 2)]; // initializer"
              }
            }
          },
          {
            "Return": {
              "expression": {
                "Binary": {
                  "left": {
                    "Binary": {
                      "left": {
                        "Identifier": "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":12,\\\"line_stop\\\":12,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"    return (a == b) == y;\\\"}\"}"
                      },
                      "right": {
                        "Identifier": "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":12,\\\"line_stop\\\":12,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"    return (a == b) == y;\\\"}\"}"
                      },
                      "op": "Eq",
                      "span": {
                        "line_start": 12,
                        "line_stop": 12,
                        "col_start": 13,
                        "col_stop": 19,
                        "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                        "content": "    return (a == b) == y;"
                      }
                    }
                  },
                  "right": {
                    "Identifier": "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":12,\\\"line_stop\\\":12,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo\\\",\\\"content\\\":\\\"    return (a == b) == y;\\\"}\"}"
                  },
                  "op": "Eq",
                  "span": {
                    "line_start": 12,
                    "line_stop": 12,
                    "col_start": 13,
                    "col_stop": 25,
                    "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                    "content": "    return (a == b) == y;"
                  }
                }
              },
              "span": {
                "line_start": 12,
                "line_stop": 12,
                "col_start": 5,
                "col_stop": 25,
                "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
                "content": "    return (a == b) == y;"
              }
            }
          }
        ],
        "span": {
          "line_start": 8,
          "line_stop": 13,
          "col_start": 32,
          "col_stop": 2,
          "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
          "content": "function main(y: bool) -> bool {\n     ...\n     ...\n     ...\n     ...\n}"
        }
      },
      "span": {
        "line_start": 8,
        "line_stop": 13,
        "col_start": 1,
        "col_stop": 2,
        "path": "/home/batman/leo/test-framework/../tests/compiler/array/tuple_3x2_value.leo",
        "content": "function main(y: bool) -> bool {\n     ...\n     ...\n     ...\n     ...\n}"
      }
    }
  }
}