{
  "name": "",
  "expected_input": [],
  "imports": [],
  "circuits": {},
  "global_consts": {},
  "functions": {
    "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":2,\\\"line_stop\\\":2,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"function main(a: u8) -> u8 {\\\"}\"}": {
      "annotations": [],
      "identifier": "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":2,\\\"line_stop\\\":2,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"function main(a: u8) -> u8 {\\\"}\"}",
      "input": [
        {
          "Variable": {
            "identifier": "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":2,\\\"line_stop\\\":2,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"function main(a: u8) -> u8 {\\\"}\"}",
            "const_": false,
            "mutable": true,
            "type_": {
              "IntegerType": "U8"
            },
            "span": {
              "line_start": 2,
              "line_stop": 2,
              "col_start": 15,
              "col_stop": 16,
              "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
              "content": "function main(a: u8) -> u8 {"
            }
          }
        }
      ],
      "output": {
        "IntegerType": "U8"
      },
      "block": {
        "statements": [
          {
            "Definition": {
              "declaration_type": "Let",
              "variable_names": [
                {
                  "mutable": true,
                  "identifier": "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"    let c: u8 = array_3x2_nested()[2][a];\\\"}\"}",
                  "span": {
                    "line_start": 4,
                    "line_stop": 4,
                    "col_start": 9,
                    "col_stop": 10,
                    "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                    "content": "    let c: u8 = array_3x2_nested()[2][a];"
                  }
                }
              ],
              "type_": {
                "IntegerType": "U8"
              },
              "value": {
                "ArrayAccess": {
                  "array": {
                    "ArrayAccess": {
                      "array": {
                        "Call": {
                          "function": {
                            "Identifier": "{\"name\":\"array_3x2_nested\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":33,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"    let c: u8 = array_3x2_nested()[2][a];\\\"}\"}"
                          },
                          "arguments": [],
                          "span": {
                            "line_start": 4,
                            "line_stop": 4,
                            "col_start": 17,
                            "col_stop": 35,
                            "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                            "content": "    let c: u8 = array_3x2_nested()[2][a];"
                          }
                        }
                      },
                      "index": {
                        "Value": {
                          "Implicit": [
                            "2",
                            {
                              "line_start": 4,
                              "line_stop": 4,
                              "col_start": 36,
                              "col_stop": 37,
                              "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                              "content": "    let c: u8 = array_3x2_nested()[2][a];"
                            }
                          ]
                        }
                      },
                      "span": {
                        "line_start": 4,
                        "line_stop": 4,
                        "col_start": 17,
                        "col_stop": 38,
                        "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                        "content": "    let c: u8 = array_3x2_nested()[2][a];"
                      }
                    }
                  },
                  "index": {
                    "Identifier": "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":39,\\\"col_stop\\\":40,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"    let c: u8 = array_3x2_nested()[2][a];\\\"}\"}"
                  },
                  "span": {
                    "line_start": 4,
                    "line_stop": 4,
                    "col_start": 17,
                    "col_stop": 41,
                    "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                    "content": "    let c: u8 = array_3x2_nested()[2][a];"
                  }
                }
              },
              "span": {
                "line_start": 4,
                "line_stop": 4,
                "col_start": 5,
                "col_stop": 41,
                "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                "content": "    let c: u8 = array_3x2_nested()[2][a];"
              }
            }
          },
          {
            "Return": {
              "expression": {
                "Identifier": "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"    return c;\\\"}\"}"
              },
              "span": {
                "line_start": 5,
                "line_stop": 5,
                "col_start": 5,
                "col_stop": 13,
                "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                "content": "    return c;"
              }
            }
          }
        ],
        "span": {
          "line_start": 2,
          "line_stop": 6,
          "col_start": 28,
          "col_stop": 2,
          "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
          "content": "function main(a: u8) -> u8 {\n...\n}"
        }
      },
      "span": {
        "line_start": 2,
        "line_stop": 6,
        "col_start": 1,
        "col_stop": 2,
        "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
        "content": "function main(a: u8) -> u8 {\n...\n}\n\n"
      }
    },
    "{\"name\":\"array_3x2_nested\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":10,\\\"col_stop\\\":26,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"function array_3x2_nested() -> [u8; (3, 2)] {\\\"}\"}": {
      "annotations": [],
      "identifier": "{\"name\":\"array_3x2_nested\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":10,\\\"col_stop\\\":26,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo\\\",\\\"content\\\":\\\"function array_3x2_nested() -> [u8; (3, 2)] {\\\"}\"}",
      "input": [],
      "output": {
        "Array": [
          {
            "IntegerType": "U8"
          },
          [
            {
              "value": "3"
            },
            {
              "value": "2"
            }
          ]
        ]
      },
      "block": {
        "statements": [
          {
            "Return": {
              "expression": {
                "ArrayInit": {
                  "element": {
                    "Value": {
                      "Integer": [
                        "U8",
                        "1",
                        {
                          "line_start": 9,
                          "line_stop": 9,
                          "col_start": 13,
                          "col_stop": 16,
                          "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                          "content": "    return [1u8; (3, 2)];"
                        }
                      ]
                    }
                  },
                  "dimensions": [
                    {
                      "value": "3"
                    },
                    {
                      "value": "2"
                    }
                  ],
                  "span": {
                    "line_start": 9,
                    "line_stop": 9,
                    "col_start": 12,
                    "col_stop": 25,
                    "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                    "content": "    return [1u8; (3, 2)];"
                  }
                }
              },
              "span": {
                "line_start": 9,
                "line_stop": 9,
                "col_start": 5,
                "col_stop": 25,
                "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
                "content": "    return [1u8; (3, 2)];"
              }
            }
          }
        ],
        "span": {
          "line_start": 8,
          "line_stop": 10,
          "col_start": 45,
          "col_stop": 2,
          "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
          "content": "function array_3x2_nested() -> [u8; (3, 2)] {\n...\n}"
        }
      },
      "span": {
        "line_start": 8,
        "line_stop": 10,
        "col_start": 1,
        "col_stop": 2,
        "path": "/home/batman/leo-acl2/tests/minimal/nested-arrays/src/main.leo",
        "content": "function array_3x2_nested() -> [u8; (3, 2)] {\n...\n}"
      }
    }
  }
}