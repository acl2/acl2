{
  "name": "const-circuit-inline",
  "expected_input": [],
  "imports": [],
  "circuits": {
    "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":16,\\\"line_stop\\\":16,\\\"col_start\\\":9,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"circuit Foo {\\\"}\"}": {
      "circuit_name": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":16,\\\"line_stop\\\":16,\\\"col_start\\\":9,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"circuit Foo {\\\"}\"}",
      "members": [
        {
          "CircuitVariable": [
            "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":17,\\\"line_stop\\\":17,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    x: u8\\\"}\"}",
            {
              "IntegerType": "U8"
            }
          ]
        },
        {
          "CircuitFunction": {
            "annotations": [],
            "identifier": "{\"name\":\"new\",\"span\":\"{\\\"line_start\\\":19,\\\"line_stop\\\":19,\\\"col_start\\\":14,\\\"col_stop\\\":17,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    function new(x: u8) -> Self {\\\"}\"}",
            "input": [
              {
                "Variable": {
                  "identifier": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":19,\\\"line_stop\\\":19,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    function new(x: u8) -> Self {\\\"}\"}",
                  "const_": false,
                  "mutable": true,
                  "type_": {
                    "IntegerType": "U8"
                  },
                  "span": {
                    "line_start": 19,
                    "line_stop": 19,
                    "col_start": 18,
                    "col_stop": 19,
                    "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                    "content": "    function new(x: u8) -> Self {"
                  }
                }
              }
            ],
            "output": {
              "Circuit": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":16,\\\"line_stop\\\":16,\\\"col_start\\\":9,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"circuit Foo {\\\"}\"}"
            },
            "block": {
              "statements": [
                {
                  "Return": {
                    "expression": {
                      "CircuitInit": {
                        "name": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":16,\\\"line_stop\\\":16,\\\"col_start\\\":9,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"circuit Foo {\\\"}\"}",
                        "members": [
                          {
                            "identifier": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":20,\\\"line_stop\\\":20,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"        return Self { x };\\\"}\"}",
                            "expression": null
                          }
                        ],
                        "span": {
                          "line_start": 20,
                          "line_stop": 20,
                          "col_start": 16,
                          "col_stop": 26,
                          "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                          "content": "        return Self { x };"
                        }
                      }
                    },
                    "span": {
                      "line_start": 20,
                      "line_stop": 20,
                      "col_start": 9,
                      "col_stop": 26,
                      "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                      "content": "        return Self { x };"
                    }
                  }
                }
              ],
              "span": {
                "line_start": 19,
                "line_stop": 21,
                "col_start": 33,
                "col_stop": 6,
                "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                "content": "    function new(x: u8) -> Self {\n         ...\n    }"
              }
            },
            "span": {
              "line_start": 19,
              "line_stop": 21,
              "col_start": 5,
              "col_stop": 6,
              "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
              "content": "    function new(x: u8) -> Self {\n         ...\n    }"
            }
          }
        }
      ]
    }
  },
  "global_consts": {},
  "functions": {
    "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":24,\\\"line_stop\\\":24,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"function main(const x: u8, y: bool) -> bool {\\\"}\"}": {
      "annotations": [],
      "identifier": "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":24,\\\"line_stop\\\":24,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"function main(const x: u8, y: bool) -> bool {\\\"}\"}",
      "input": [
        {
          "Variable": {
            "identifier": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":24,\\\"line_stop\\\":24,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"function main(const x: u8, y: bool) -> bool {\\\"}\"}",
            "const_": true,
            "mutable": false,
            "type_": {
              "IntegerType": "U8"
            },
            "span": {
              "line_start": 24,
              "line_stop": 24,
              "col_start": 21,
              "col_stop": 22,
              "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
              "content": "function main(const x: u8, y: bool) -> bool {"
            }
          }
        },
        {
          "Variable": {
            "identifier": "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":24,\\\"line_stop\\\":24,\\\"col_start\\\":28,\\\"col_stop\\\":29,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"function main(const x: u8, y: bool) -> bool {\\\"}\"}",
            "const_": false,
            "mutable": true,
            "type_": "Boolean",
            "span": {
              "line_start": 24,
              "line_stop": 24,
              "col_start": 28,
              "col_stop": 29,
              "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
              "content": "function main(const x: u8, y: bool) -> bool {"
            }
          }
        }
      ],
      "output": "Boolean",
      "block": {
        "statements": [
          {
            "Definition": {
              "declaration_type": "Const",
              "variable_names": [
                {
                  "mutable": false,
                  "identifier": "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":25,\\\"line_stop\\\":25,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const a = Foo { x };\\\"}\"}",
                  "span": {
                    "line_start": 25,
                    "line_stop": 25,
                    "col_start": 11,
                    "col_stop": 12,
                    "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                    "content": "    const a = Foo { x };"
                  }
                }
              ],
              "type_": {
                "Circuit": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":16,\\\"line_stop\\\":16,\\\"col_start\\\":9,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"circuit Foo {\\\"}\"}"
              },
              "value": {
                "CircuitInit": {
                  "name": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":25,\\\"line_stop\\\":25,\\\"col_start\\\":15,\\\"col_stop\\\":18,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const a = Foo { x };\\\"}\"}",
                  "members": [
                    {
                      "identifier": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":25,\\\"line_stop\\\":25,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const a = Foo { x };\\\"}\"}",
                      "expression": null
                    }
                  ],
                  "span": {
                    "line_start": 25,
                    "line_stop": 25,
                    "col_start": 15,
                    "col_stop": 24,
                    "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                    "content": "    const a = Foo { x };"
                  }
                }
              },
              "span": {
                "line_start": 25,
                "line_stop": 25,
                "col_start": 5,
                "col_stop": 24,
                "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                "content": "    const a = Foo { x };"
              }
            }
          },
          {
            "Definition": {
              "declaration_type": "Const",
              "variable_names": [
                {
                  "mutable": false,
                  "identifier": "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":26,\\\"line_stop\\\":26,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const b = Foo::new(x);\\\"}\"}",
                  "span": {
                    "line_start": 26,
                    "line_stop": 26,
                    "col_start": 11,
                    "col_stop": 12,
                    "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                    "content": "    const b = Foo::new(x);"
                  }
                }
              ],
              "type_": {
                "Circuit": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":16,\\\"line_stop\\\":16,\\\"col_start\\\":9,\\\"col_stop\\\":12,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"circuit Foo {\\\"}\"}"
              },
              "value": {
                "Call": {
                  "function": {
                    "CircuitStaticFunctionAccess": {
                      "circuit": {
                        "Identifier": "{\"name\":\"Foo\",\"span\":\"{\\\"line_start\\\":26,\\\"line_stop\\\":26,\\\"col_start\\\":15,\\\"col_stop\\\":18,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const b = Foo::new(x);\\\"}\"}"
                      },
                      "name": "{\"name\":\"new\",\"span\":\"{\\\"line_start\\\":26,\\\"line_stop\\\":26,\\\"col_start\\\":20,\\\"col_stop\\\":23,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const b = Foo::new(x);\\\"}\"}",
                      "span": {
                        "line_start": 26,
                        "line_stop": 26,
                        "col_start": 15,
                        "col_stop": 23,
                        "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                        "content": "    const b = Foo::new(x);"
                      }
                    }
                  },
                  "arguments": [
                    {
                      "Identifier": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":26,\\\"line_stop\\\":26,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    const b = Foo::new(x);\\\"}\"}"
                    }
                  ],
                  "span": {
                    "line_start": 26,
                    "line_stop": 26,
                    "col_start": 15,
                    "col_stop": 26,
                    "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                    "content": "    const b = Foo::new(x);"
                  }
                }
              },
              "span": {
                "line_start": 26,
                "line_stop": 26,
                "col_start": 5,
                "col_stop": 26,
                "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                "content": "    const b = Foo::new(x);"
              }
            }
          },
          {
            "Return": {
              "expression": {
                "Binary": {
                  "left": {
                    "Binary": {
                      "left": {
                        "CircuitMemberAccess": {
                          "circuit": {
                            "Identifier": "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":28,\\\"line_stop\\\":28,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    return (b.x == a.x) == y;\\\"}\"}"
                          },
                          "name": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":28,\\\"line_stop\\\":28,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    return (b.x == a.x) == y;\\\"}\"}",
                          "span": {
                            "line_start": 28,
                            "line_stop": 28,
                            "col_start": 13,
                            "col_stop": 16,
                            "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                            "content": "    return (b.x == a.x) == y;"
                          }
                        }
                      },
                      "right": {
                        "CircuitMemberAccess": {
                          "circuit": {
                            "Identifier": "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":28,\\\"line_stop\\\":28,\\\"col_start\\\":20,\\\"col_stop\\\":21,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    return (b.x == a.x) == y;\\\"}\"}"
                          },
                          "name": "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":28,\\\"line_stop\\\":28,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    return (b.x == a.x) == y;\\\"}\"}",
                          "span": {
                            "line_start": 28,
                            "line_stop": 28,
                            "col_start": 20,
                            "col_stop": 23,
                            "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                            "content": "    return (b.x == a.x) == y;"
                          }
                        }
                      },
                      "op": "Eq",
                      "span": {
                        "line_start": 28,
                        "line_stop": 28,
                        "col_start": 13,
                        "col_stop": 23,
                        "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                        "content": "    return (b.x == a.x) == y;"
                      }
                    }
                  },
                  "right": {
                    "Identifier": "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":28,\\\"line_stop\\\":28,\\\"col_start\\\":28,\\\"col_stop\\\":29,\\\"path\\\":\\\"/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo\\\",\\\"content\\\":\\\"    return (b.x == a.x) == y;\\\"}\"}"
                  },
                  "op": "Eq",
                  "span": {
                    "line_start": 28,
                    "line_stop": 28,
                    "col_start": 13,
                    "col_stop": 29,
                    "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                    "content": "    return (b.x == a.x) == y;"
                  }
                }
              },
              "span": {
                "line_start": 28,
                "line_stop": 28,
                "col_start": 5,
                "col_stop": 29,
                "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
                "content": "    return (b.x == a.x) == y;"
              }
            }
          }
        ],
        "span": {
          "line_start": 24,
          "line_stop": 29,
          "col_start": 45,
          "col_stop": 2,
          "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
          "content": "function main(const x: u8, y: bool) -> bool {\n     ...\n     ...\n     ...\n     ...\n}"
        }
      },
      "span": {
        "line_start": 24,
        "line_stop": 29,
        "col_start": 1,
        "col_stop": 2,
        "path": "/home/batman/leo-acl2/tests/minimal/const-circuit-inline/src/main.leo",
        "content": "function main(const x: u8, y: bool) -> bool {\n     ...\n     ...\n     ...\n     ...\n}"
      }
    }
  }
}