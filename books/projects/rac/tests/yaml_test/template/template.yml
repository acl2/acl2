- name: basic

- name: no-parameters
  description: >
               In C++ we can't declare a template function with an
               empty parameter (note that we are not doing template
               specialization here) but it's allowed in RAC.
  disabled-checks:
    - generated_code
  bug: true

- name: template-ac-int
- name: template-ac-int-set

- name: template-nan-demo

- name: template-ac-int-sign

- name: missing-function
  should_report_error: true

- name: arity
  should_report_error: true

- name: template-param-type
  should_report_error: true

- name: call-template-as-function
  should_report_error: true

- name: param-type
  should_report_error: true

- name: illegal-type
  should_report_error: true

- name: template_keyword_hint
  should_report_error: true

- name: invalid-cast
  should_report_error: true

- name: duplicate-template-fun
  should_report_error: true

- name: duplicate-param-fun
  should_report_error: true

- name: duplicate-param-fun-2
  should_report_error: true

- name: rac-mode
  args: ['rac-mode.cpp', '-rac']
  preprocess: 'rac-mode.cpp'
  out_generated: rac-mode.cpp.pc
  ref_generated: rac-mode.cpp.ref.pc

- name: binary-expr-depends-on-template-sign

- name: missing
  should_report_error: true
  description: >
               The error message "Undefined function template" should never
               be emited since to output a TEMPLATEID, the identifier must be
               found as a template
